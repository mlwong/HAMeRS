Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: operator<<(std::ostream &, const MIXING_CLOSURE_MODEL::TYPE &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (operator<<(std::ostream &, const MIXING_CLOSURE_MODEL::TYPE &)) /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp(18,1)

===========================================================================

Begin optimization report for: EquationOfState::EquationOfState(EquationOfState *, const std::string &, const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (EquationOfState::EquationOfState(EquationOfState *, const std::string &, const SAMRAI::tbox::Dimension &)) /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(25,9)

===========================================================================

Begin optimization report for: EquationOfState::EquationOfState(EquationOfState *const, const std::string &, const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (EquationOfState::EquationOfState(EquationOfState *const, const std::string &, const SAMRAI::tbox::Dimension &)) /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(20,9)

===========================================================================

Begin optimization report for: EquationOfState::~EquationOfState(EquationOfState *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::~EquationOfState(EquationOfState *)) [6] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(27,36)
  -> INLINE: (27,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(27,36):remark #34051: REGISTER ALLOCATION : [_ZN15EquationOfStateD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:27

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      19
            Global    :      10
            Local     :       9
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::~EquationOfState(EquationOfState *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::~EquationOfState(EquationOfState *const)) [7] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(27,17)
  -> INLINE: (27,17) EquationOfState::~EquationOfState(EquationOfState *)
    -> INLINE: (27,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(27,17):remark #34051: REGISTER ALLOCATION : [_ZN15EquationOfStateD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:27

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      20
            Global    :      11
            Local     :       9
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::~EquationOfState(EquationOfState *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (EquationOfState::~EquationOfState(EquationOfState *const)) /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(27,17)

===========================================================================

Begin optimization report for: EquationOfStateMixingRules::EquationOfStateMixingRules(EquationOfStateMixingRules *const, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (EquationOfStateMixingRules::EquationOfStateMixingRules(EquationOfStateMixingRules *const, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)) /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(18,9)

===========================================================================

Begin optimization report for: EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)) [10] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(31,17)
  -> INLINE: (31,17) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *)
    -> INLINE: (31,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (31,48) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (31,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(31,17):remark #34051: REGISTER ALLOCATION : [_ZN26EquationOfStateMixingRulesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      36
            Global    :      18
            Local     :      18
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)) /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(31,17)

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *const, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *const, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [12] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3,37)
  -> (3,37) EquationOfStateMixingRulesIdealGas::EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3,37):remark #34051: REGISTER ALLOCATION : [_ZN34EquationOfStateMixingRulesIdealGasC2ERKSsRKN6SAMRAI4tbox9DimensionERKiRKN20MIXING_CLOSURE_MODEL4TYPEERKSt10shared_ptrINS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [13] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(15,1)
  -> INLINE: (3,37) std::shared_ptr<EquationOfState>::shared_ptr(std::shared_ptr<EquationOfState> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3,37) std::shared_ptr<EquationOfState>::~shared_ptr(std::shared_ptr<EquationOfState> *)
  -> (3,37) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (3,37) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (14,13) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:(31,17) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *)
  -> INLINE: (14,13) EquationOfStateMixingRules::EquationOfStateMixingRules(EquationOfStateMixingRules *const, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:(18,9) EquationOfStateMixingRules::EquationOfStateMixingRules(EquationOfStateMixingRules *, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (16,25) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::reset<EquationOfStateIdealGas>(std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *, EquationOfStateIdealGas *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (16,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (17,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (17,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (17,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (18,9) EquationOfStateIdealGas::EquationOfStateIdealGas(EquationOfStateIdealGas *, const std::string &, const SAMRAI::tbox::Dimension &)
  -> INLINE: (24,42) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (24,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (24,54) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (24,54) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (24,54)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b5_V$107d.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (24,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (24,54) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (26,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (26,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (26,76) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (26,91) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (26,91) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (26,91)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bb_V$1085.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (26,91) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,29) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (29,29) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (29,64) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (29,80) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (29,80) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (29,80)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bf_V$108b.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (29,80) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (33,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (33,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (33,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (33,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (33,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (33,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (33,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (33,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (33,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (39,47) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (39,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (39,59) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (39,59) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (39,59)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c5_V$1098.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (39,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (39,59) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (41,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (41,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (41,76) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (41,91) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (41,91) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (41,91) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (41,91)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c9_V$109c.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (44,29) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (44,29) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (44,64) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (44,80) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (44,80) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (44,80) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (44,80)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1cd_V$10a2.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (48,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (48,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (48,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (48,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (48,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (48,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (48,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (48,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (48,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (48,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (56,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (56,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (56,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (56,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (56,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (56,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (56,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (56,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (56,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (56,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (56,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (56,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (56,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (56,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (56,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (56,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (67,42) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (67,54) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (67,54) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (67,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (67,54)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b7_V$107f.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (67,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (67,54) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (69,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (69,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,72) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (69,87) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (69,87) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (69,87)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1d6_V$10b2.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (69,87) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (72,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (72,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (72,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (72,25) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (72,60) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (72,76) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (72,76) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (72,76)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1da_V$10b9.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (72,76) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (76,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (76,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (76,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (76,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (76,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (76,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (76,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (76,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (76,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,47) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (82,59) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (82,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (82,59) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (82,59)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e0_V$10c1.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (82,59) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (84,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (84,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (84,72) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (84,87) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (84,87) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (84,87)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e4_V$10c5.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (84,87) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (87,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (87,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,25) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,60) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (87,76) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (87,76) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (87,76)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e8_V$10cc.0.1037->__vptr_V$a91 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (87,76) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (91,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (91,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (91,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (91,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (91,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (91,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (91,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (91,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (91,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (99,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (99,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (99,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (99,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (99,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (99,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (99,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (99,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (99,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (99,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (99,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (99,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (99,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (99,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (99,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (99,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (110,19) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (113,23) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (113,48) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (113,69) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (113,96) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (116,19) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (119,23) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (119,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (119,84) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (126,17) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (129,21) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (129,58) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(111,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(117,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(127,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(15,1):remark #34051: REGISTER ALLOCATION : [_ZN34EquationOfStateMixingRulesIdealGasC1ERKSsRKN6SAMRAI4tbox9DimensionERKiRKN20MIXING_CLOSURE_MODEL4TYPEERKSt10shared_ptrINS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:15

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15 zmm0-zmm2]
        
    Routine temporaries
        Total         :    2360
            Global    :     552
            Local     :    1808
        Regenerable   :     892
        Spilled       :      77
        
    Routine stack
        Variables     :    2695 bytes*
            Reads     :     162 [1.86e+01 ~ 2.7%]
            Writes    :     338 [7.26e+01 ~ 10.7%]
        Spills        :     568 bytes*
            Reads     :     175 [1.91e+01 ~ 2.8%]
            Writes    :      96 [1.52e+01 ~ 2.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_emplace_back_aux<std::remove_reference<std::vector<double, std::allocator<double>>::value_type &>::type>(std::vector<double, std::allocator<double>> *, std::remove_reference<std::vector<double, std::allocator<double>>::value_type &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIIdEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRules::EquationOfStateMixingRules(EquationOfStateMixingRules *, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRules::EquationOfStateMixingRules(EquationOfStateMixingRules *, const std::string &, const SAMRAI::tbox::Dimension &, const int &, const MIXING_CLOSURE_MODEL::TYPE &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [21] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(29,9)
  -> (18,9) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (24,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (28,53) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (28,53) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(29,9):remark #34051: REGISTER ALLOCATION : [_ZN26EquationOfStateMixingRulesC1ERKSsRKN6SAMRAI4tbox9DimensionERKiRKN20MIXING_CLOSURE_MODEL4TYPEERKSt10shared_ptrINS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:29

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      50
            Global    :      18
            Local     :      32
        Regenerable   :       6
        Spilled       :       6
        
    Routine stack
        Variables     :       9 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *)) [23] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(31,47)
  -> INLINE: (31,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (31,48) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (31,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp(31,47):remark #34051: REGISTER ALLOCATION : [_ZN26EquationOfStateMixingRulesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:31

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      35
            Global    :      18
            Local     :      17
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfState>::~shared_ptr(std::shared_ptr<EquationOfState> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI15EquationOfStateED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateIdealGas::EquationOfStateIdealGas(EquationOfStateIdealGas *, const std::string &, const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateIdealGas::EquationOfStateIdealGas(EquationOfStateIdealGas *, const std::string &, const SAMRAI::tbox::Dimension &)) [25] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateIdealGas.hpp(17,9)
  -> INLINE: (16,21) EquationOfState::EquationOfState(EquationOfState *const, const std::string &, const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:(20,9) EquationOfState::EquationOfState(EquationOfState *, const std::string &, const SAMRAI::tbox::Dimension &)
      -> INLINE: (23,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateIdealGas.hpp(17,9):remark #34051: REGISTER ALLOCATION : [_ZN23EquationOfStateIdealGasC1ERKSsRKN6SAMRAI4tbox9DimensionE] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateIdealGas.hpp:17

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      35
            Global    :      13
            Local     :      22
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       9 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_move_assign(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&, std::true_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(1363,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb1EE] /usr/include/c++/4.8.5/bits/stl_vector.h:1363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      11
            Local     :      15
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :       3 [3.00e+00 ~ 6.6%]
            Writes    :       3 [8.35e-01 ~ 1.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::~EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::~EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *)) [29] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(18,47)
  -> INLINE: (18,48) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:(31,17) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *)
      -> INLINE: (31,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (31,48) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (31,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (18,48) std::shared_ptr<EquationOfState>::~shared_ptr(std::shared_ptr<EquationOfState> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(18,47):remark #34051: REGISTER ALLOCATION : [_ZN34EquationOfStateMixingRulesIdealGasD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      57
            Global    :      28
            Local     :      29
        Regenerable   :      11
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::~EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::~EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *const)) [30] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(18,9)
  -> INLINE: (18,9) EquationOfStateMixingRulesIdealGas::~EquationOfStateMixingRulesIdealGas(EquationOfStateMixingRulesIdealGas *)
    -> INLINE: (18,48) std::shared_ptr<EquationOfState>::~shared_ptr(std::shared_ptr<EquationOfState> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (18,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (18,48) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *const)
      -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRules.hpp:(31,17) EquationOfStateMixingRules::~EquationOfStateMixingRules(EquationOfStateMixingRules *)
        -> INLINE: (31,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (31,48) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (31,48) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(18,9):remark #34051: REGISTER ALLOCATION : [_ZN34EquationOfStateMixingRulesIdealGasD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      58
            Global    :      28
            Local     :      30
        Regenerable   :      11
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::printClassData(const EquationOfStateMixingRulesIdealGas *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::printClassData(const EquationOfStateMixingRulesIdealGas *, std::ostream &) const) [31] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(140,1)
  -> (141,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (142,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (144,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (145,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (146,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, const void *)
  -> (147,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (149,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (150,8) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (151,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (153,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (154,8) operator<<(std::ostream &, const MIXING_CLOSURE_MODEL::TYPE &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(19,62) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::map(std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(21,17) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::size(const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,15) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,25) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (155,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (161,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (164,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (164,30) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (164,35) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (166,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (166,26) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (167,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (173,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (176,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (176,26) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (176,31) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (178,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (178,22) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (179,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(154,8)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(154,8)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(154,8)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(154,8)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(162,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(174,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(140,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas14printClassDataERSo] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:140

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r15 zmm0]
        
    Routine temporaries
        Total         :     297
            Global    :      91
            Local     :     206
        Regenerable   :      87
        Spilled       :       4
        
    Routine stack
        Variables     :     108 bytes*
            Reads     :       9 [1.54e+00 ~ 0.5%]
            Writes    :      13 [4.13e+00 ~ 1.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::putToRestart(const EquationOfStateMixingRulesIdealGas *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::putToRestart(const EquationOfStateMixingRulesIdealGas *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [34] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(190,1)
  -> INLINE: (191,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (191,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (191,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (191,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (191,50) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (191,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (191,50)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f4_V$10f6.0.1040->__vptr_V$a91 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (192,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (192,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (192,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (192,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (192,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (192,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (192,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f5_V$10f7.0.1040->__vptr_V$a91 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(190,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:190

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r14]
        
    Routine temporaries
        Total         :      95
            Global    :      29
            Local     :      66
        Regenerable   :      29
        Spilled       :       3
        
    Routine stack
        Variables     :      21 bytes*
            Reads     :       6 [2.00e+00 ~ 3.6%]
            Writes    :       4 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getEquationOfState(const EquationOfStateMixingRulesIdealGas *, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getEquationOfState(const EquationOfStateMixingRulesIdealGas *, int) const) [35] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(39,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(39,9):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas18getEquationOfStateEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp:39

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getPressure(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getPressure(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [36] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(204,1)
  -> (213,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (213,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (214,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (214,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (215,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (215,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (217,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (219,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (220,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (221,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (225,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (225,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (226,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (226,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (229,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (233,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (233,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (233,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (233,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (236,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f6_V$10fc.0.1041->__vptr_V$a6 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(219,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(219,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(219,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(219,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(219,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(219,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(223,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(204,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas11getPressureEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:204

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     187
            Global    :      81
            Local     :     106
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.1%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_get_Tp_allocator(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPKdSaIS1_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_get_Tp_allocator(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::size(const std::vector<Real *, std::allocator<Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPdSaIS0_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_deallocate(std::_Vector_base<const Real *, std::allocator<const Real *>> *, std::_Vector_base<const Real *, std::allocator<const Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_deallocate(std::_Vector_base<Real *, std::allocator<Real *>> *, std::_Vector_base<Real *, std::allocator<Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE13_M_deallocateEPS0_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::~_Vector_base(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [53] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4548,1)
  -> (4553,13) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> (4561,13) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (4569,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4569,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4569,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4569,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4569,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4569,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4569,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4569,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4569,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (4569,13) operator<<(std::ostream &, const MIXING_CLOSURE_MODEL::TYPE &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(19,62) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::map(std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(21,17) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::size(const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,15) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,25) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4569,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4569,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4569,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4569,13) SAMRAI::tbox::Logger::logWarning(SAMRAI::tbox::Logger *, const std::string &, const std::string &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h:(139,28) std::__shared_ptr<SAMRAI::tbox::Logger::Appender, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Logger::Appender, __gnu_cxx::_S_atomic> *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h:(139,60)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uef_V$a62.0.668.13041->__vptr_V$a69 + EXPR_CONV.SI32.I64(0(SI32)) * 8(I64))))
  -> INLINE: (4569,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4569,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4569,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4569,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4569,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4569,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4569,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4548,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas33getMixtureThermodynamicPropertiesERSt6vectorIPdSaIS1_EERKS0_IPKdSaIS6_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4548

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     485
            Global    :     126
            Local     :     359
        Regenerable   :     172
        Spilled       :       6
        
    Routine stack
        Variables     :     500 bytes*
            Reads     :      30 [2.04e+00 ~ 2.4%]
            Writes    :      62 [8.13e+00 ~ 9.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN20MIXING_CLOSURE_MODEL4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN20MIXING_CLOSURE_MODEL4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN20MIXING_CLOSURE_MODEL4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN20MIXING_CLOSURE_MODEL4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [64] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4680,1)
  -> INLINE: (4686,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4687,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4690,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4691,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4696,41) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (4700,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (4700,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4701,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (4701,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4704,46) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (4710,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (4710,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4711,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (4711,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4714,39) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (4718,37) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4719,37) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4723,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4723,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4723,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4723,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4723,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4723,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4723,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4723,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4723,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4723,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4723,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4723,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4723,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4723,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4723,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (4723,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4698,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between *c_p (4700:13) and *c_v (4701:13)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4698,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4708,9)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4708,9)
<Remainder, Distributed chunk1>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4708,9)
<Distributed chunk2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between *c_p (4710:13) and *c_v (4711:13)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4708,9)
<Remainder, Distributed chunk2>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4680,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas50getMixtureThermodynamicPropertiesWithMassFractionsERSt6vectorIPdSaIS1_EERKS0_IPKdSaIS6_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4680

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     436
            Global    :     105
            Local     :     331
        Regenerable   :     124
        Spilled       :      10
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [1.35e+00 ~ 1.0%]
            Writes    :      51 [5.69e+00 ~ 4.1%]
        Spills        :      32 bytes*
            Reads     :      11 [1.96e-01 ~ 0.1%]
            Writes    :       5 [1.36e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [65] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5146,1)
  -> INLINE: (5152,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5155,43) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (5159,37) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5159,59) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5162,48) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (5168,37) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5168,59) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5171,41) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5175,39) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5179,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5179,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5179,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5179,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5179,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5179,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5179,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5179,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5179,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5179,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5179,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5179,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5179,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5179,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5179,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5179,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5157,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5157,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5157,9)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5157,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5166,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5166,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5166,9)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5166,9)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5146,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas52getMixtureThermodynamicPropertiesWithVolumeFractionsERSt6vectorIPdSaIS1_EERKS0_IPKdSaIS6_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:5146

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     516
            Global    :     122
            Local     :     394
        Regenerable   :     138
        Spilled       :       8
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [1.35e+00 ~ 0.3%]
            Writes    :      51 [5.69e+00 ~ 1.3%]
        Spills        :      24 bytes*
            Reads     :      10 [3.21e+00 ~ 0.7%]
            Writes    :      12 [3.94e+00 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [68] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(250,1)
  -> INLINE: (268,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (271,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (271,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (273,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (276,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (276,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (277,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (277,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (278,80) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (278,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (279,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (279,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (282,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (282,55) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (296,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (297,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (297,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (298,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (298,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (299,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (299,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (301,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (301,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (301,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (313,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (313,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (313,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (314,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (317,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (322,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (327,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (327,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1fa_V$110d.0.1042->__vptr_V$a6 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(273,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(297,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(297,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(297,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(297,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(297,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(297,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(298,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(298,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(298,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(298,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(298,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(298,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(299,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(299,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(299,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(299,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(299,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(299,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(250,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas15computePressureERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:250

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [69] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4590,1)
  -> (4595,13) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> (4604,13) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (4613,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4613,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4613,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4613,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4613,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4613,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4613,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4613,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4613,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (4613,13) operator<<(std::ostream &, const MIXING_CLOSURE_MODEL::TYPE &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(19,62) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::map(std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(21,17) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::size(const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,15) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,25) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4613,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4613,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4613,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4613,13) SAMRAI::tbox::Logger::logWarning(SAMRAI::tbox::Logger *, const std::string &, const std::string &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h:(139,28) std::__shared_ptr<SAMRAI::tbox::Logger::Appender, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Logger::Appender, __gnu_cxx::_S_atomic> *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h:(139,60)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uef_V$a62.0.668.13039->__vptr_V$a69 + EXPR_CONV.SI32.I64(0(SI32)) * 8(I64))))
  -> INLINE: (4613,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4613,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4613,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4613,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4613,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4613,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4613,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4590,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas37computeMixtureThermodynamicPropertiesERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4590

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     489
            Global    :     127
            Local     :     362
        Regenerable   :     172
        Spilled       :       6
        
    Routine stack
        Variables     :     500 bytes*
            Reads     :      30 [2.04e+00 ~ 2.4%]
            Writes    :      62 [8.13e+00 ~ 9.6%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [70] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4743,1)
  -> INLINE: (4750,89) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4750,91) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4751,106) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4753,67) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4753,69) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4754,84) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4767,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4770,100) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4770,102) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4771,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4771,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4774,70) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4774,72) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4782,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4783,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4783,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4786,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4788,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4788,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4789,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4789,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4791,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4792,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4801,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4801,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4802,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4802,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4804,51) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4804,59) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4804,97) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4805,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4805,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4805,75) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4812,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4812,57) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4813,51) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4813,53) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4814,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4814,55) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4815,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4815,55) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4821,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4823,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4823,41) SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(607,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(607,12) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1050,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1052,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4824,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4824,41) SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(607,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(607,12) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1050,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1052,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4828,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4828,41) SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(619,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(619,12) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> INLINE: (4829,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4829,41) SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(619,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(619,12) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> INLINE: (4832,28) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4832,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (4838,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4838,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (4839,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4842,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4842,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4842,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4845,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4857,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4858,33) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4858,35) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (4860,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (4860,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4864,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4866,63) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4866,65) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4868,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4868,61) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4868,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4870,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4870,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4870,40) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4871,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4871,55) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4873,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4873,39) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4877,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4877,42) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4879,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4879,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4879,40) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4880,28) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4882,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4882,39) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> (4890,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4890,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (4891,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4894,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4894,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4894,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4897,54) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4897,56) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4899,81) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4899,83) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4900,98) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4902,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4917,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4917,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4920,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4920,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4920,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4920,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4920,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4920,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4920,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4920,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4920,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4920,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4920,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4920,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4920,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4920,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4920,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4920,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4788,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U2de_V.U2de_V.U2de_V.U2de_V.U2de_V+i*4) (558:18) and *(U2de_V.U2de_V.U2de_V.U2de_V.U2de_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4788,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4804,59)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4805,48)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4823,41)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4823,41)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4823,41)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4824,41)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4824,41)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4824,41)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4840,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4873,39)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4873,39)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4873,39)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4873,39)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4882,39)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4892,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4743,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas54computeMixtureThermodynamicPropertiesWithMassFractionsERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4743

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    1060
            Global    :     219
            Local     :     841
        Regenerable   :     360
        Spilled       :      18
        
    Routine stack
        Variables     :    1681 bytes*
            Reads     :     106 [2.08e+01 ~ 5.6%]
            Writes    :     144 [2.34e+01 ~ 6.3%]
        Spills        :     104 bytes*
            Reads     :      29 [7.20e+00 ~ 1.9%]
            Writes    :      21 [5.60e+00 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::_M_emplace_back_aux<std::remove_reference<std::vector<const Real *, std::allocator<const Real *>>::value_type &>::type>(std::vector<const Real *, std::allocator<const Real *>> *, std::remove_reference<std::vector<const Real *, std::allocator<const Real *>>::value_type &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::~_Vector_base(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [73] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7099,1)
  -> INLINE: (7100,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7106,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7107,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7109,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7110,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7111,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7124,56) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7124,94) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7125,56) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7125,94) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7128,53) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7140,97) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7141,97) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7149,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7155,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7156,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7157,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7158,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7160,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7161,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7162,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7164,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7165,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7166,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7168,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7169,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7170,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7190,60) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7190,98) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7191,60) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7191,98) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7194,57) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7212,101) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7213,101) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7222,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7228,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7229,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7230,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7231,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7232,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7233,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7235,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7236,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7237,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7238,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7239,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7241,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7242,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7243,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7244,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7245,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7247,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7248,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7249,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7250,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7251,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7279,64) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7279,102) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7280,64) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7280,102) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7283,61) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7308,105) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7309,105) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7114,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7124:17) and Y_last[idx_mass_fractions_last] (7128:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7117,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7124:17) and Y_last[idx_mass_fractions_last] (7128:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7134,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7140:13) and R[idx_mixture_thermo_properties] (7145:13)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7173,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7190:21) and Y_last[idx_mass_fractions_last] (7194:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7175,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7190:21) and Y_last[idx_mass_fractions_last] (7194:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7178,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7190:21) and Y_last[idx_mass_fractions_last] (7194:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7200,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7212:17) and R[idx_mixture_thermo_properties] (7217:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7203,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7212:17) and R[idx_mixture_thermo_properties] (7217:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7254,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7279:25) and Y_last[idx_mass_fractions_last] (7283:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7256,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7279:25) and Y_last[idx_mass_fractions_last] (7283:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7258,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7279:25) and Y_last[idx_mass_fractions_last] (7283:25)

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7261,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7279:25) and Y_last[idx_mass_fractions_last] (7283:25)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7290,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7308:21) and R[idx_mixture_thermo_properties] (7313:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7292,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7308:21) and R[idx_mixture_thermo_properties] (7313:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7295,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7308:21) and R[idx_mixture_thermo_properties] (7313:21)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7099,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas54computeMixtureThermodynamicPropertiesWithMassFractionsEPdS0_S0_S0_S0_RKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:7099

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     341
            Global    :     164
            Local     :     177
        Regenerable   :      28
        Spilled       :      82
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     600 bytes*
            Reads     :     175 [2.23e+02 ~ 10.7%]
            Writes    :     111 [4.07e+01 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)) [76] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1078,1)
  -> INLINE: (1083,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1129,40) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (1134,50) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1134,50) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1135,28) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1136,27) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1140,57) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1142,34) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1142,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (1145,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1145,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1149,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1158,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1158,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1084,16)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1134,50)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between ispace.ispace (606:16) and ispace.ispace (606:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1136,28)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1137,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1141,57)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1141,57)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1141,57)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1143,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1143,34)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1145,52)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1145,52)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1151,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dst_counter+i0] (1154:13) and dst_ptr[dst_counter+i0] (1154:13)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1153,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dst_counter+i0] (1154:13) and *t (1154:13)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1153,10)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1158,34)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1164,16) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1170,13)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1175,13)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1175,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1170,13)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1078,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4fillERKdRKNS_4hier3BoxEj] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:1078

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     279
            Global    :      67
            Local     :     212
        Regenerable   :       7
        Spilled       :      11
        
    Routine stack
        Variables     :     132 bytes*
            Reads     :      68 [6.52e+01 ~ 8.8%]
            Writes    :      20 [3.69e+01 ~ 5.0%]
        Spills        :      48 bytes*
            Reads     :      11 [4.10e+00 ~ 0.6%]
            Writes    :      11 [3.24e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const) [77] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4)
  -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box5emptyEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:598

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      17
            Global    :      10
            Local     :       7
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8CellDataIdEESaIS7_EIRKNS4_4hier3BoxEiRKNS9_9IntVectorEEEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     248
            Global    :      59
            Local     :     189
        Regenerable   :      36
        Spilled       :       9
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :      10 [4.02e+00 ~ 2.2%]
            Writes    :      15 [4.25e+00 ~ 2.3%]
        Spills        :      32 bytes*
            Reads     :       5 [2.42e+00 ~ 1.3%]
            Writes    :       4 [3.42e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [79] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6904,1)
  -> INLINE: (6905,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6911,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6912,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6914,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6915,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6927,56) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6927,94) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6928,56) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6928,94) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6945,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6951,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6952,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6953,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6954,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6956,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6957,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6958,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6960,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6961,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6962,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6979,60) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6979,98) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6980,60) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6980,98) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7002,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7008,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7009,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7010,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7011,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7012,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7013,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7015,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7016,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7017,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7018,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7019,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7021,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7022,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7023,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7024,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7025,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7048,64) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7048,102) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7049,64) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7049,102) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6918,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (6927:17) and c_v[idx_mixture_thermo_properties] (6928:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6921,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (6927:17) and c_v[idx_mixture_thermo_properties] (6928:17)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6921,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6934,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between gamma[idx_mixture_thermo_properties] (6939:13) and R[idx_mixture_thermo_properties] (6941:13)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6934,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6965,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (6979:21) and c_v[idx_mixture_thermo_properties] (6980:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6967,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (6979:21) and c_v[idx_mixture_thermo_properties] (6980:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6970,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (6979:21) and c_v[idx_mixture_thermo_properties] (6980:21)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6970,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6986,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between gamma[idx_mixture_thermo_properties] (6995:17) and R[idx_mixture_thermo_properties] (6997:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6989,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between gamma[idx_mixture_thermo_properties] (6995:17) and R[idx_mixture_thermo_properties] (6997:17)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6989,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7028,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7048:25) and c_v[idx_mixture_thermo_properties] (7049:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7030,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7048:25) and c_v[idx_mixture_thermo_properties] (7049:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7032,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7048:25) and c_v[idx_mixture_thermo_properties] (7049:25)

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7035,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between c_p[idx_mixture_thermo_properties] (7048:25) and c_v[idx_mixture_thermo_properties] (7049:25)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7035,21)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7056,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between gamma[idx_mixture_thermo_properties] (7069:21) and R[idx_mixture_thermo_properties] (7071:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7058,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between gamma[idx_mixture_thermo_properties] (7069:21) and R[idx_mixture_thermo_properties] (7071:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7061,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between gamma[idx_mixture_thermo_properties] (7069:21) and R[idx_mixture_thermo_properties] (7071:21)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7061,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6904,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas54computeMixtureThermodynamicPropertiesWithMassFractionsEPdS0_S0_S0_RKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:6904

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     403
            Global    :     136
            Local     :     267
        Regenerable   :      24
        Spilled       :      62
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     448 bytes*
            Reads     :     110 [1.57e+02 ~ 8.5%]
            Writes    :      70 [2.11e+01 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)) [81] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(901,4)
  -> INLINE: (903,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (904,21) SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const
  -> INLINE: (905,45) SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const
  -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (907,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (907,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (908,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (908,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (911,18) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (912,18) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(904,12)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(906,51)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(912,18)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(912,18)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(913,18)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(913,18)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(901,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier3Box4growERKNS0_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:901

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :     101
            Global    :      25
            Local     :      76
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [82] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5198,1)
  -> INLINE: (5205,89) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5205,91) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5206,106) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5208,71) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5208,73) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5209,88) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5222,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5225,100) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5225,102) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5226,82) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5226,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5229,70) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5229,72) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5237,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5238,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5238,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (5241,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (5243,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5243,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5244,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (5244,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5246,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5247,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5256,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5256,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5257,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (5257,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5259,51) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5259,59) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5259,97) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5260,42) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5260,50) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5260,79) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5267,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5267,57) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5273,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5275,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5275,41) SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(607,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(607,12) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1050,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1052,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5279,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5279,41) SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(619,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(619,12) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> INLINE: (5282,30) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5282,32) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (5288,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (5288,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (5289,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5292,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5292,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5292,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5295,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5304,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5305,35) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5305,37) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (5307,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (5307,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5311,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5313,65) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5313,67) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5315,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5315,65) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5315,67) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5317,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5317,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5317,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5318,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5318,57) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5320,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5320,41) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5324,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5324,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5326,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5326,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5326,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5327,28) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5329,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5329,41) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> (5337,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (5337,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (5338,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5341,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5341,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5341,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5344,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5344,58) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5346,85) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5346,87) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5347,102) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5349,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5361,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5361,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5364,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5364,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5364,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5364,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5364,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5364,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5364,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5364,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5364,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5364,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5364,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5364,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5364,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5364,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5364,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5364,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5243,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U305_V.U305_V.U305_V.U305_V.U305_V+i*4) (558:18) and *(U305_V.U305_V.U305_V.U305_V.U305_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5243,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5259,59)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5260,50)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5275,41)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5275,41)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5275,41)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5290,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5320,41)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5320,41)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5320,41)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5320,41)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5329,41)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5339,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5198,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas56computeMixtureThermodynamicPropertiesWithVolumeFractionsERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:5198

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    1025
            Global    :     206
            Local     :     819
        Regenerable   :     358
        Spilled       :       9
        
    Routine stack
        Variables     :    1673 bytes*
            Reads     :     106 [2.08e+01 ~ 6.2%]
            Writes    :     143 [2.29e+01 ~ 6.9%]
        Spills        :      32 bytes*
            Reads     :       9 [1.28e+00 ~ 0.4%]
            Writes    :       6 [1.51e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [83] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7521,1)
  -> INLINE: (7522,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7528,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7529,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7531,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7532,80) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7533,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7538,71) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7548,58) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7551,55) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7564,34) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7568,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7574,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7575,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7576,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7577,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7579,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7580,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7581,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7583,80) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7584,80) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7585,95) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7587,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7588,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7589,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7594,71) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7611,62) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7614,59) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7633,38) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (7638,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7644,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7645,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7646,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7647,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7648,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7649,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7651,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7652,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7653,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7654,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7655,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7657,80) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7658,80) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7659,80) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7660,95) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7661,95) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7663,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7664,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7665,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7666,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7667,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7672,71) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7697,66) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7700,63) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7726,42) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7536,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7541,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7541,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7541,13)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7541,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7541,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7541,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7557,9)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7557,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7557,9)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7557,9)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7557,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7557,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7592,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7596,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7599,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7599,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7599,17)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7599,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7599,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7599,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7620,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7623,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7623,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7623,13)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7623,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7623,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7623,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7670,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7674,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7676,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7679,21)
         <Peeled loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7679,21)
         <Multiversioned v1>
            remark #25228: Loop multiversioned for Data Dependence
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7679,21)
         <Remainder loop for vectorization, Multiversioned v1>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7679,21)
         <Remainder loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7679,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7679,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7707,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7709,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7712,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7712,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7712,17)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7712,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7712,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7712,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7521,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas56computeMixtureThermodynamicPropertiesWithVolumeFractionsEPdS0_RKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:7521

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1028
            Global    :     338
            Local     :     690
        Regenerable   :      41
        Spilled       :     116
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.0%]
            Writes    :       3 [1.75e+00 ~ 0.0%]
        Spills        :     872 bytes*
            Reads     :     237 [2.18e+02 ~ 5.2%]
            Writes    :     130 [5.18e+01 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [84] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7335,1)
  -> INLINE: (7336,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7342,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7343,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7345,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7346,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7351,71) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7360,58) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7374,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7380,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7381,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7382,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7383,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7385,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7386,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7387,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7389,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7390,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7391,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7396,71) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7410,62) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (7429,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7435,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7436,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7437,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7438,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7439,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7440,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7442,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7443,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7444,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7445,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7446,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7448,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7449,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7450,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7451,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7452,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7457,71) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (7477,66) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7349,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7354,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7354,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7354,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7366,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7366,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7366,9)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7366,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7394,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7398,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7401,17)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7401,17)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7401,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7416,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7419,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7419,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7419,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7419,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7455,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7459,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7461,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7464,21)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7464,21)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7464,21)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7484,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7486,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7489,17)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7489,17)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7489,17)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7489,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(7335,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas56computeMixtureThermodynamicPropertiesWithVolumeFractionsEPdRKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:7335

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     441
            Global    :     193
            Local     :     248
        Regenerable   :      36
        Spilled       :      63
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     456 bytes*
            Reads     :      93 [1.29e+02 ~ 4.2%]
            Writes    :      62 [1.87e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)) [85] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(79,1)
  -> (73,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
  -> INLINE: (73,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (84,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (84,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (84,11) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (84,11) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (85,16) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (85,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (85,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (87,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
        -> (456,8) SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)
  -> INLINE: (87,37) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (87,52) SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(79,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdEC1ERKNS_4hier3BoxEiRKNS3_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     188
            Global    :      52
            Local     :     136
        Regenerable   :      35
        Spilled       :       6
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :       9 [5.67e+00 ~ 2.5%]
            Writes    :      13 [6.00e+00 ~ 2.7%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [89] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(342,1)
  -> INLINE: (365,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (366,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (372,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (375,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (375,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (377,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (380,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (380,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (381,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (381,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (382,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (382,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (383,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (383,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (386,53) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (386,55) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (400,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (401,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (401,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (402,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (402,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (403,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (403,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (405,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (405,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (405,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (417,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (417,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (417,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (418,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (421,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (427,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (433,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (433,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1fe_V$1121.0.1043->__vptr_V$a6 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(377,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(401,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(401,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(401,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(401,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(401,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(401,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(402,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(402,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(402,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(402,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(402,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(402,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(342,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas15computePressureERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:342

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     101
        Spilled       :      18
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :     104 bytes*
            Reads     :      31 [8.76e+00 ~ 2.0%]
            Writes    :      24 [6.04e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [90] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4635,1)
  -> (4640,13) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> (4650,13) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (4660,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4660,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4660,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4660,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4660,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4660,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4660,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4660,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4660,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (4660,13) operator<<(std::ostream &, const MIXING_CLOSURE_MODEL::TYPE &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(19,62) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::map(std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(21,17) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::size(const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(24,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(25,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(26,9) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,15) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/MixingClosureModels.hpp:(30,25) std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::operator[](std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *, const std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4660,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4660,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4660,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4660,13) SAMRAI::tbox::Logger::logWarning(SAMRAI::tbox::Logger *, const std::string &, const std::string &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h:(139,28) std::__shared_ptr<SAMRAI::tbox::Logger::Appender, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Logger::Appender, __gnu_cxx::_S_atomic> *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h:(139,60)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uef_V$a62.0.668.13037->__vptr_V$a69 + EXPR_CONV.SI32.I64(0(SI32)) * 8(I64))))
  -> INLINE: (4660,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4660,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4660,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4660,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4660,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4660,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4660,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4635,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas37computeMixtureThermodynamicPropertiesERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4635

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     493
            Global    :     128
            Local     :     365
        Regenerable   :     172
        Spilled       :       6
        
    Routine stack
        Variables     :     500 bytes*
            Reads     :      30 [2.04e+00 ~ 2.4%]
            Writes    :      62 [8.13e+00 ~ 9.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [91] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4938,1)
  -> INLINE: (4952,89) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4952,91) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4953,100) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4955,67) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4955,69) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4956,78) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4969,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4972,100) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4972,102) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4973,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4973,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4976,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4976,72) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4984,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4985,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4985,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4988,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4990,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4990,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4991,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4991,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4993,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4994,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5003,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5003,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5004,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (5004,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5006,51) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5006,59) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5006,97) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5007,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5007,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5007,75) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5010,45) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5011,34) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5012,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5018,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5018,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5019,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5019,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5020,53) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5020,55) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5021,53) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5021,55) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5027,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5029,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5029,41) SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, int)
  -> INLINE: (5030,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5030,41) SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, int)
  -> INLINE: (5034,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5034,41) SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &, int)
  -> INLINE: (5035,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5035,41) SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &, int)
  -> INLINE: (5038,28) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5038,30) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> (5044,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (5044,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (5045,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5048,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5048,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5048,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5051,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5063,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5064,33) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5064,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (5066,37) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5067,18) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (5069,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (5069,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5073,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5075,63) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5075,65) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5077,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5077,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5077,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5079,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5079,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5079,40) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5080,53) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5080,55) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5082,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5082,39) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)
  -> INLINE: (5086,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5086,42) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5088,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5088,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5088,40) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5089,28) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5091,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5091,39) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)
  -> (5099,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (5099,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (5100,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5103,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5103,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5103,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5106,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5106,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5108,81) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5108,83) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5109,92) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5110,43) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (5112,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithMassFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, Real *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5127,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5127,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5130,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5130,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5130,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5130,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5130,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5130,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5130,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5130,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5130,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5130,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5130,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5130,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5130,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5130,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5130,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5130,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4990,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U2f0_V.U2f0_V.U2f0_V.U2f0_V.U2f0_V+i*4) (558:18) and *(U2f0_V.U2f0_V.U2f0_V.U2f0_V.U2f0_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4990,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5006,59)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5007,48)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5046,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5101,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4938,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas54computeMixtureThermodynamicPropertiesWithMassFractionsERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4938

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :    1018
            Global    :     184
            Local     :     834
        Regenerable   :     360
        Spilled       :      16
        
    Routine stack
        Variables     :    1753 bytes*
            Reads     :     111 [2.38e+01 ~ 7.0%]
            Writes    :     147 [2.44e+01 ~ 7.1%]
        Spills        :      88 bytes*
            Reads     :      24 [5.69e+00 ~ 1.7%]
            Writes    :      19 [6.10e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, int)) [92] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(710,1)
  -> INLINE: (713,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (713,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (713,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (713,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (714,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (715,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (715,21) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1050,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1052,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(713,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1064,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(716,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(710,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE4fillERKdi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:710

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :      63
            Global    :      34
            Local     :      29
        Regenerable   :       2
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       5 [3.41e+00 ~ 2.3%]
            Writes    :       4 [3.41e+00 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &, int)) [93] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(726,1)
  -> INLINE: (730,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (730,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (730,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (730,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (731,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (732,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (732,21) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1083,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1129,40) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1134,50) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1134,50) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1135,28) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1136,27) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1140,57) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1142,34) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1142,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1145,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1145,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1149,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1158,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1158,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(730,33)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1134,50) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1145,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1145,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1151,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dst_counter+i0] (1154:13) and dst_ptr[dst_counter+i0] (1154:13)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1153,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dst_counter+i0] (1154:13) and *t (1154:13)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1153,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1158,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1164,16) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1170,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1175,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1175,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1170,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(733,21)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(726,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE4fillERKdRKNS_4hier3BoxEi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:726

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     312
            Global    :      79
            Local     :     233
        Regenerable   :      13
        Spilled       :      16
        
    Routine stack
        Variables     :     212 bytes*
            Reads     :      74 [1.88e+02 ~ 8.9%]
            Writes    :      20 [9.40e+01 ~ 4.5%]
        Spills        :     128 bytes*
            Reads     :      29 [2.83e+01 ~ 1.3%]
            Writes    :      24 [2.24e+01 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(54,52) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8SideDataIdEESaIS7_EIRKNS4_4hier3BoxEiRKNS9_9IntVectorERSD_EEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     384
            Global    :      77
            Local     :     307
        Regenerable   :      28
        Spilled       :      15
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      40 [1.60e+01 ~ 2.4%]
            Writes    :      15 [1.26e+00 ~ 0.2%]
        Spills        :      80 bytes*
            Reads     :      19 [1.48e+01 ~ 2.2%]
            Writes    :      10 [8.87e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [95] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5382,1)
  -> INLINE: (5396,89) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5396,91) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5397,100) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5399,71) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5399,73) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5400,82) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5413,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5416,100) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5416,102) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5417,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5417,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5420,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5420,72) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5428,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5429,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5429,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (5432,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (5434,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5434,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5435,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (5435,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5437,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5438,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5447,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5447,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5448,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (5448,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5450,51) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5450,59) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5450,97) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5451,42) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5451,50) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5451,79) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (5454,45) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5455,36) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5456,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5462,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5462,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5468,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5470,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5470,41) SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, int)
  -> INLINE: (5474,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5474,41) SAMRAI::pdat::SideData<Real>::fill(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &, int)
  -> INLINE: (5477,30) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5477,32) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> (5483,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (5483,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (5484,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5487,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5487,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5487,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5490,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5499,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5500,35) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5500,37) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (5502,37) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5503,18) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (5505,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (5505,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5509,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (5511,65) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5511,67) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5513,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5513,65) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5513,67) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5515,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5515,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5515,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (5516,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5516,57) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5518,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5518,41) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)
  -> INLINE: (5522,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (5522,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5524,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5524,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5524,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5525,28) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5527,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (5527,41) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)
  -> (5535,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (5535,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (5536,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5539,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5539,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5539,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5542,56) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5542,58) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5544,85) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5544,87) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5545,96) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5546,45) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (5548,9) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicPropertiesWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5560,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5560,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5563,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5563,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5563,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5563,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5563,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5563,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5563,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5563,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5563,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5563,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5563,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5563,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5563,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5563,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5563,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5563,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5434,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U315_V.U315_V.U315_V.U315_V.U315_V+i*4) (558:18) and *(U315_V.U315_V.U315_V.U315_V.U315_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5434,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5450,59)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5451,50)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5485,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5537,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5382,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas56computeMixtureThermodynamicPropertiesWithVolumeFractionsERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:5382

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :    1009
            Global    :     184
            Local     :     825
        Regenerable   :     357
        Spilled       :      14
        
    Routine stack
        Variables     :    1715 bytes*
            Reads     :     108 [2.38e+01 ~ 7.3%]
            Writes    :     142 [2.34e+01 ~ 7.2%]
        Spills        :      72 bytes*
            Reads     :      21 [4.13e+00 ~ 1.3%]
            Writes    :      19 [3.09e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)) [96] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(46,1)
  -> (38,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
  -> INLINE: (38,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (52,35) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (54,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (54,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (54,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (54,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (55,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (56,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (57,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
        -> (456,8) SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)
  -> INLINE: (57,52) SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
        -> (456,8) SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)
  -> INLINE: (59,46) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (59,75) SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U114_V->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(54,52)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(58,52)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(58,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(58,52)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(58,52)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(58,52)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(60,75)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(60,75)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(60,75)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(60,75)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(60,75)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(58,52)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(46,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdEC1ERKNS_4hier3BoxEiRKNS3_9IntVectorES9_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:46

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     368
            Global    :      72
            Local     :     296
        Regenerable   :      26
        Spilled       :      13
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [2.26e+01 ~ 2.5%]
            Writes    :      13 [1.78e+00 ~ 0.2%]
        Spills        :      64 bytes*
            Reads     :      10 [1.27e+01 ~ 1.4%]
            Writes    :       8 [9.29e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)) [97] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1)
  -> INLINE: (159,1) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rdi r13]
        
    Routine temporaries
        Total         :      12
            Global    :       8
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__enable_shared_from_this_helper<__gnu_cxx::_S_atomic>(const std::__shared_count<__gnu_cxx::_S_atomic> &, ...)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(724,5):remark #34051: REGISTER ALLOCATION : [_ZSt32__enable_shared_from_this_helperILN9__gnu_cxx12_Lock_policyE2EEvRKSt14__shared_countIXT_EEz] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:724

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat9ArrayDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getPressure(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getPressure(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [107] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(446,1)
  -> (456,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (456,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (457,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (457,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (458,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (458,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (460,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (462,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (463,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (464,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (468,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (468,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (469,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (469,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (472,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (476,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (476,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (476,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (476,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (479,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U202_V$1134.0.1044->__vptr_V$a6 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(462,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(462,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(462,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(462,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(462,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(462,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(466,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(446,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas11getPressureEPKdS1_RKSt6vectorIS1_SaIS1_EES6_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:446

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     188
            Global    :      81
            Local     :     107
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.0%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [108] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(494,1)
  -> INLINE: (513,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (516,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (516,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (518,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (521,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (521,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (522,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (522,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (523,80) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (523,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (524,82) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (524,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (527,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (527,55) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (541,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (542,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (542,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (543,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (543,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (544,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (544,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (546,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (546,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (546,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (558,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (558,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (558,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (559,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (562,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (567,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (572,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (572,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U206_V$1144.0.1045->__vptr_V$a6 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(518,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(542,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(542,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(542,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(542,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(542,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(542,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(543,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(543,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(543,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(543,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(543,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(543,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(544,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(544,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(544,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(544,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(544,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(544,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(494,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas15computePressureERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressure(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [109] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(588,1)
  -> INLINE: (612,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (613,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (619,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (622,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (622,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (624,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (627,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (627,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (628,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (628,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (629,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (629,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (630,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (630,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (633,53) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (633,55) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (647,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (648,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (648,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (649,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (649,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (650,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (650,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (652,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (652,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (652,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (664,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (664,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (664,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (665,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (668,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (674,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (680,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (680,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20a_V$1158.0.1046->__vptr_V$a6 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(624,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(648,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(648,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(648,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(648,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(648,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(648,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(649,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(649,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(649,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(649,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(649,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(649,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(588,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas15computePressureERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:588

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     104
        Spilled       :      17
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :      96 bytes*
            Reads     :      29 [7.26e+00 ~ 1.7%]
            Writes    :      23 [5.04e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getInternalEnergy(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getInternalEnergy(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [110] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(692,1)
  -> (701,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (701,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (702,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (702,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (703,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (703,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (705,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (707,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (708,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (709,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (713,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (713,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (714,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (714,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (717,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (721,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (721,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (721,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (721,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (724,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20e_V$1169.0.1047->__vptr_V$a6 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(707,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(707,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(707,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(707,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(707,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(707,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(711,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(692,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas17getInternalEnergyEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:692

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     187
            Global    :      81
            Local     :     106
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.1%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [111] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(738,1)
  -> INLINE: (756,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (759,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (759,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (761,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (764,80) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (764,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (765,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (765,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (766,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (766,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (767,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (767,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (770,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (770,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (784,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (785,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (785,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (786,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (786,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (787,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (787,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (789,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (789,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (789,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (801,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (802,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (805,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (810,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (815,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (815,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U212_V$1178.0.1048->__vptr_V$a6 + EXPR_CONV.SI32.I64(16(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(761,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(785,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(785,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(785,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(785,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(785,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(785,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(786,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(786,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(786,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(786,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(786,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(786,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(787,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(787,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(787,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(787,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(787,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(787,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(738,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21computeInternalEnergyERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:738

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [112] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(830,1)
  -> INLINE: (853,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (854,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (860,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (863,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (863,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (865,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (868,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (868,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (869,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (869,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (870,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (870,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (871,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (871,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (874,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (874,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (888,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (889,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (889,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (890,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (890,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (891,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (891,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (893,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (893,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (893,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (905,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (905,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (905,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (906,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (909,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (915,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (921,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (921,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U216_V$118b.0.1049->__vptr_V$a6 + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(865,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(889,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(889,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(889,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(889,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(889,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(889,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(890,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(890,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(890,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(890,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(890,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(890,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(830,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21computeInternalEnergyERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:830

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     101
        Spilled       :      18
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :     104 bytes*
            Reads     :      31 [8.76e+00 ~ 2.0%]
            Writes    :      24 [6.04e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getInternalEnergy(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getInternalEnergy(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [113] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(934,1)
  -> (944,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (944,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (945,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (945,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (946,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (946,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (948,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (950,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (951,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (952,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (956,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (956,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (957,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (957,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (960,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (964,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (964,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (964,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (964,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (967,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21a_V$119d.0.1050->__vptr_V$a6 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(950,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(950,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(950,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(950,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(950,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(950,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(954,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(934,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas17getInternalEnergyEPKdS1_RKSt6vectorIS1_SaIS1_EES6_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:934

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     188
            Global    :      81
            Local     :     107
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.0%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [114] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(982,1)
  -> INLINE: (1001,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (1004,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1004,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1006,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1009,80) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1009,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1010,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1010,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1011,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1011,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1012,82) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1012,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1015,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1015,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1029,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1030,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1030,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1031,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1031,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1032,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1032,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1034,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1034,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1034,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1046,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1046,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1046,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1047,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1050,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (1055,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1060,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1060,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21e_V$11ad.0.1051->__vptr_V$a6 + EXPR_CONV.SI32.I64(16(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1006,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1030,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1030,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1030,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1030,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1030,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1030,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1031,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1031,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1031,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1031,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1031,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1031,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1032,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1032,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1032,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1032,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1032,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1032,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(982,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21computeInternalEnergyERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:982

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeInternalEnergy(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [115] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1076,1)
  -> INLINE: (1100,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1101,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1107,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (1110,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1110,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (1112,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1115,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1115,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1116,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1116,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1117,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1117,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1118,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1118,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1121,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1121,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1135,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1136,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1136,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1137,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1137,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1138,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1138,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1140,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1140,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1140,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (1152,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (1153,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1156,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (1162,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1168,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1168,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U222_V$11c1.0.1052->__vptr_V$a6 + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1112,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1136,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1136,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1136,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1136,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1136,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1136,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1137,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1137,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1137,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1137,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1137,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1137,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1076,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21computeInternalEnergyERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1076

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     104
        Spilled       :      17
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :      96 bytes*
            Reads     :      29 [7.26e+00 ~ 1.7%]
            Writes    :      23 [5.04e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getTemperature(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getTemperature(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [116] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1180,1)
  -> (1189,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1189,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (1190,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1190,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1191,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1191,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (1193,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (1195,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1196,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1197,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1201,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1201,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1202,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (1205,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (1209,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1209,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1209,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1209,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1212,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U226_V$11d2.0.1053->__vptr_V$a6 + EXPR_CONV.SI32.I64(23(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1195,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1195,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1195,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1195,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1195,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1195,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1199,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1180,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas14getTemperatureEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1180

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     187
            Global    :      81
            Local     :     106
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.1%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [117] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1226,1)
  -> INLINE: (1244,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (1247,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1247,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1249,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1252,72) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1252,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1253,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1253,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1254,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1254,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1255,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1255,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1258,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1258,58) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1272,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1273,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1273,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1274,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1274,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1275,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1275,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1277,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1277,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1277,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1289,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1289,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1289,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1290,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1293,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (1298,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1303,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1303,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U22a_V$11e1.0.1054->__vptr_V$a6 + EXPR_CONV.SI32.I64(26(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1249,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1273,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1273,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1273,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1273,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1273,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1273,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1274,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1274,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1274,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1274,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1274,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1274,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1275,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1275,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1275,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1275,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1275,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1275,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1226,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas18computeTemperatureERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1226

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [118] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1318,1)
  -> INLINE: (1341,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1342,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1348,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (1351,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1351,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (1353,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1356,72) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1356,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1357,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1357,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1358,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1358,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1359,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1359,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1362,56) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1362,58) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1376,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1377,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1377,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1378,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1378,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1379,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1379,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1381,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (1393,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1393,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1393,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (1394,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1397,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (1403,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1409,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1409,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U22e_V$11f4.0.1055->__vptr_V$a6 + EXPR_CONV.SI32.I64(27(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1353,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1377,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1377,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1377,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1377,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1377,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1377,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1378,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1378,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1378,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1378,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1378,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1378,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1318,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas18computeTemperatureERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1318

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     101
        Spilled       :      18
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :     104 bytes*
            Reads     :      31 [8.76e+00 ~ 2.0%]
            Writes    :      24 [6.04e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getInternalEnergyFromTemperature(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getInternalEnergyFromTemperature(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [119] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1422,1)
  -> (1431,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1431,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (1432,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1432,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1433,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1433,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (1435,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (1437,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1438,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1439,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1443,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1443,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1444,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1444,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (1447,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (1451,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1451,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1451,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1451,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1454,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U232_V$1205.0.1056->__vptr_V$a6 + EXPR_CONV.SI32.I64(28(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1437,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1437,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1437,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1437,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1437,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1437,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1441,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1422,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas32getInternalEnergyFromTemperatureEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1422

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     187
            Global    :      81
            Local     :     106
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.1%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeInternalEnergyFromTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeInternalEnergyFromTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [120] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1469,1)
  -> INLINE: (1487,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (1490,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1490,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1492,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1495,80) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1495,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1496,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1496,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1497,72) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1497,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1498,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1498,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1501,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1501,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1515,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1516,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1516,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1517,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1517,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1518,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1518,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1520,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1520,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1520,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1532,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1532,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1532,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1533,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1536,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (1541,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1546,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1546,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U236_V$1214.0.1057->__vptr_V$a6 + EXPR_CONV.SI32.I64(31(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1492,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1516,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1516,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1516,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1516,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1516,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1516,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1517,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1517,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1517,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1517,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1517,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1517,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1518,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1518,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1518,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1518,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1518,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1518,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1469,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas36computeInternalEnergyFromTemperatureERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1469

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeInternalEnergyFromTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeInternalEnergyFromTemperature(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [121] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1562,1)
  -> INLINE: (1585,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1586,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1592,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (1595,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1595,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (1597,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (1600,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1600,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1601,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1601,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1602,72) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1602,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1603,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1603,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1606,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1606,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1620,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1621,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1621,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1622,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1622,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1623,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1623,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1625,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1625,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1625,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (1637,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1637,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1637,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (1638,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1641,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (1647,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1653,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1653,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23a_V$1227.0.1058->__vptr_V$a6 + EXPR_CONV.SI32.I64(32(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1597,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1621,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1621,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1621,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1621,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1621,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1621,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1622,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1622,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1622,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1622,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1622,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1622,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1562,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas36computeInternalEnergyFromTemperatureERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1562

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     101
        Spilled       :      18
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :     104 bytes*
            Reads     :      31 [8.76e+00 ~ 2.0%]
            Writes    :      24 [6.04e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [122] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1666,1)
  -> INLINE: (1679,41) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (1683,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1683,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (1686,46) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (1692,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1692,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (1695,39) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1699,37) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1703,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1703,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1703,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1703,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1703,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1703,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1703,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1703,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1703,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1703,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1703,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1703,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1703,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1703,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1703,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (1703,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1681,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1681,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1681,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1690,9)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   remark #25457: Number of partial sums replaced: 2
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1690,9)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1666,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas32getIsochoricSpecificHeatCapacityEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1666

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     436
            Global    :     107
            Local     :     329
        Regenerable   :     123
        Spilled       :       7
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [1.35e+00 ~ 0.6%]
            Writes    :      51 [5.69e+00 ~ 2.4%]
        Spills        :      16 bytes*
            Reads     :      15 [2.51e+00 ~ 1.1%]
            Writes    :      16 [3.20e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [123] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1725,1)
  -> INLINE: (1742,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1742,48) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1744,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1746,67) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1746,69) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1747,84) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (1760,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (1764,50) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1764,52) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1766,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1766,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1769,77) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1769,79) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1777,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1778,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1778,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (1781,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1783,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1783,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1784,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (1784,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1786,49) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1787,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1796,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1796,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1797,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (1797,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1799,58) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (1799,66) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1799,111) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (1800,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (1800,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1800,75) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (1807,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1807,62) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (1813,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (1815,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1815,48) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1819,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1819,48) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> INLINE: (1822,28) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1822,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (1828,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1828,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (1829,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1832,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1832,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1832,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (1835,9) EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1844,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1845,33) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1845,35) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (1847,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1847,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1851,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (1853,63) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1853,65) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1855,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1855,61) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1855,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1857,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1857,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1858,17) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1858,95) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1858,97) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1860,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1860,39) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1864,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1864,42) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1866,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1866,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1867,17) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1867,70) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1869,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1869,39) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> (1877,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1877,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (1878,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1881,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1881,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1881,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1884,54) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1884,56) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1886,81) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1886,83) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1887,98) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (1889,9) EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1901,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1901,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1904,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1904,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1904,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1904,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1904,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1904,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1904,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1904,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1904,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1904,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1904,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1904,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1904,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1904,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1904,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1904,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1783,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U242_V.U242_V.U242_V.U242_V.U242_V+i*4) (558:18) and *(U242_V.U242_V.U242_V.U242_V.U242_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1783,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1799,66)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1800,48)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1815,48)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1815,48)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1815,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1819,48)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1830,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1860,39)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1860,39)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1860,39)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1860,39)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1869,39)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1879,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1725,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas36computeIsochoricSpecificHeatCapacityERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1725

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    1030
            Global    :     209
            Local     :     821
        Regenerable   :     357
        Spilled       :       9
        
    Routine stack
        Variables     :    1673 bytes*
            Reads     :     106 [2.08e+01 ~ 6.0%]
            Writes    :     143 [2.29e+01 ~ 6.6%]
        Spills        :      32 bytes*
            Reads     :      11 [4.04e+00 ~ 1.2%]
            Writes    :       6 [2.01e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [124] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5733,1)
  -> INLINE: (5734,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5740,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5741,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5744,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5745,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5746,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5759,63) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5759,101) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5762,53) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5774,104) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5777,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5783,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5784,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5785,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5786,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5788,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5789,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5791,60) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5793,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5794,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5795,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5797,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5798,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5799,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5821,67) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5821,105) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5824,57) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5844,108) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5848,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5854,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5855,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5856,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5857,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5858,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5859,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5861,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5862,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5863,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5865,60) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5867,60) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5869,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5870,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5871,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5872,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5873,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5875,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5876,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5877,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5878,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5879,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5910,71) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5910,109) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5913,61) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5941,112) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5749,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5752,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5752,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5752,13)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5752,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5752,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5752,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5768,9)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5768,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5768,9)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5768,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5768,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5802,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5804,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5807,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5807,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5807,17)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5807,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5807,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5807,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5830,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5833,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5833,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5833,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5833,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5833,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5882,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5884,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5886,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5889,21)
         <Peeled loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5889,21)
         <Multiversioned v1>
            remark #25228: Loop multiversioned for Data Dependence
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5889,21)
         <Remainder loop for vectorization, Multiversioned v1>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5889,21)
         <Remainder loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5889,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5889,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5920,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5922,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5925,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5925,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5925,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5925,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5925,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5733,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas36computeIsochoricSpecificHeatCapacityEPdS0_RKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:5733

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :     867
            Global    :     305
            Local     :     562
        Regenerable   :      26
        Spilled       :     136
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.0%]
            Writes    :       3 [1.75e+00 ~ 0.0%]
        Spills        :    1008 bytes*
            Reads     :     369 [2.76e+02 ~ 6.9%]
            Writes    :     164 [7.98e+01 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [125] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5586,1)
  -> INLINE: (5587,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5593,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5594,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5597,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5598,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5610,63) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5610,101) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5614,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5620,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5621,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5622,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5623,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5625,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5626,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5628,60) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5630,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5631,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5632,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5651,67) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5651,105) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5656,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5662,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5663,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5664,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5665,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5666,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5667,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5669,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5670,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5671,102) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5673,60) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5675,60) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5677,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5678,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5679,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5680,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5681,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5707,71) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5707,109) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5601,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5604,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5604,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5604,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5604,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5604,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5635,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5637,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5640,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5640,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5640,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5640,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5640,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5684,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5686,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5688,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5691,21)
         <Peeled loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5691,21)
         <Multiversioned v1>
            remark #25228: Loop multiversioned for Data Dependence
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5691,21)
         <Remainder loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5691,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5691,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5586,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas36computeIsochoricSpecificHeatCapacityEPdRKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:5586

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     372
            Global    :     161
            Local     :     211
        Regenerable   :      23
        Spilled       :      72
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     528 bytes*
            Reads     :     203 [1.71e+02 ~ 9.2%]
            Writes    :     113 [6.59e+01 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [126] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1925,1)
  -> INLINE: (1949,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1949,48) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1951,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1953,67) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1953,69) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1954,78) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (1967,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (1971,50) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1971,52) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1973,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1973,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1976,77) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1976,79) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1984,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1985,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1985,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (1988,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1990,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1990,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1991,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (1991,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1993,49) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1994,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2003,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2003,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2004,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2004,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2006,58) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2006,66) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2006,111) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2007,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2007,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2007,75) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2010,52) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2011,34) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2012,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2018,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2018,62) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2024,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2026,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2026,48) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)
  -> INLINE: (2030,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2030,48) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)
  -> INLINE: (2033,28) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2033,30) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> (2039,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2039,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2040,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2043,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2043,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2043,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2046,9) EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2055,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2056,33) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2056,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (2058,37) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2059,18) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (2061,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (2061,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2065,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2067,63) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2067,65) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2069,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2069,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2069,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> (2072,17) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (2072,17) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (2073,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2073,59) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2075,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2075,39) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)
  -> INLINE: (2076,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2079,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2079,42) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2081,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2081,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2082,17) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2082,70) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2084,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2084,39) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)
  -> (2092,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2092,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2093,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2096,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2096,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2096,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2099,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2099,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2101,81) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2101,83) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2102,92) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2103,43) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (2105,9) EquationOfStateMixingRulesIdealGas::computeIsochoricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2117,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2117,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2120,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2120,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2120,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2120,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2120,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2120,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2120,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2120,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2120,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2120,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2120,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2120,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2120,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2120,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2120,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2120,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1990,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U252_V.U252_V.U252_V.U252_V.U252_V+i*4) (558:18) and *(U252_V.U252_V.U252_V.U252_V.U252_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1990,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2006,66)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2007,48)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2041,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2094,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(1925,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas36computeIsochoricSpecificHeatCapacityERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:1925

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     991
            Global    :     180
            Local     :     811
        Regenerable   :     362
        Spilled       :      11
        
    Routine stack
        Variables     :    1715 bytes*
            Reads     :     104 [2.38e+01 ~ 7.3%]
            Writes    :     141 [2.33e+01 ~ 7.2%]
        Spills        :      48 bytes*
            Reads     :      12 [6.10e-01 ~ 0.2%]
            Writes    :      14 [2.09e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)) [127] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(754,1)
  -> INLINE: (757,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (757,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (757,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (757,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (758,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (759,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (759,21) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
      -> INLINE: (1083,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (1129,40) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (1134,50) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (1134,50) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (1135,28) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (1136,27) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (1140,57) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (1142,34) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (1142,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: (1145,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (1145,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (1149,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: (1158,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (1158,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(757,52)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1134,50) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1145,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1145,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1151,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dst_counter+i0] (1154:13) and dst_ptr[dst_counter+i0] (1154:13)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1153,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dst_counter+i0] (1154:13) and *t (1154:13)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1153,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1158,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1164,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1170,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1175,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1175,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1170,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(760,21)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(754,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE7fillAllERKdRKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:754

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     316
            Global    :      80
            Local     :     236
        Regenerable   :      14
        Spilled       :      15
        
    Routine stack
        Variables     :     212 bytes*
            Reads     :      74 [9.41e+02 ~ 9.3%]
            Writes    :      20 [4.70e+02 ~ 4.6%]
        Spills        :     120 bytes*
            Reads     :      27 [7.66e+01 ~ 0.8%]
            Writes    :      21 [6.71e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)) [129] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(741,1)
  -> INLINE: (742,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (742,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (742,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (742,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (743,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (744,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (744,21) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(742,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(741,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE7fillAllERKd] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:741

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rsi rdi r8-r13 zmm0-zmm3]
        
    Routine temporaries
        Total         :      59
            Global    :      32
            Local     :      27
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.80e+00 ~ 1.7%]
            Writes    :       2 [1.80e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [130] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2138,1)
  -> INLINE: (2148,41) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (2152,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (2152,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (2155,46) std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const
  -> INLINE: (2161,36) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (2161,55) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (2164,39) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (2168,37) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2172,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2172,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2172,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2172,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2172,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2172,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2172,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2172,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2172,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2172,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2172,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2172,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2172,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2172,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2172,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (2172,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2150,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2150,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2150,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2159,9)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   remark #25457: Number of partial sums replaced: 2
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2159,9)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2138,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas31getIsobaricSpecificHeatCapacityEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     436
            Global    :     107
            Local     :     329
        Regenerable   :     123
        Spilled       :       7
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [1.35e+00 ~ 0.6%]
            Writes    :      51 [5.69e+00 ~ 2.4%]
        Spills        :      16 bytes*
            Reads     :      15 [2.51e+00 ~ 1.1%]
            Writes    :      16 [3.20e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [131] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2194,1)
  -> INLINE: (2211,45) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2211,47) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2213,51) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2215,67) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2215,69) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2216,84) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2229,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2233,49) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2233,51) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2235,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2235,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2238,76) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2238,78) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2246,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2247,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2247,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (2250,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2252,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2252,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2253,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2253,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2255,48) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2256,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2265,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2265,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2266,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2266,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2268,57) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2268,65) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2268,109) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2269,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2269,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2269,75) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2276,59) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2276,61) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2282,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2284,45) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2284,47) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2288,45) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2288,47) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> INLINE: (2291,28) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2291,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (2297,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2297,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2298,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2301,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2301,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2301,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2304,9) EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2313,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2314,33) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2314,35) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (2316,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2316,50) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2322,63) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2322,65) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2324,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2324,61) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2324,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2326,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2326,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2327,17) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2327,95) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2327,97) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2329,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2329,39) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(627,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2333,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2333,42) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2335,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2335,38) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2336,17) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2336,70) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2338,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2338,39) SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(637,12) SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)
      -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1039,7) SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &, unsigned int)
  -> (2346,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2346,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2347,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2350,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2350,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2350,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2353,54) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2353,56) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2355,81) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2355,83) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2356,98) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2358,9) EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2370,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2370,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2373,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2373,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2373,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2373,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2373,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2373,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2373,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2373,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2373,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2373,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2373,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2373,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2373,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2373,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2373,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2373,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2252,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U265_V.U265_V.U265_V.U265_V.U265_V+i*4) (558:18) and *(U265_V.U265_V.U265_V.U265_V.U265_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2252,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2268,65)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2269,48)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2284,47)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2284,47)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2284,47)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2288,47)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2299,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2329,39)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2329,39)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2329,39)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2329,39)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1038,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2338,39)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2348,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2194,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas35computeIsobaricSpecificHeatCapacityERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2194

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    1030
            Global    :     209
            Local     :     821
        Regenerable   :     357
        Spilled       :       9
        
    Routine stack
        Variables     :    1673 bytes*
            Reads     :     106 [2.08e+01 ~ 6.0%]
            Writes    :     143 [2.29e+01 ~ 6.6%]
        Spills        :      32 bytes*
            Reads     :      11 [4.04e+00 ~ 1.2%]
            Writes    :       6 [2.01e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [132] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6110,1)
  -> INLINE: (6111,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6117,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6118,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6121,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6122,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6123,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6136,62) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6136,100) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6139,53) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6151,103) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6154,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6160,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6161,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6162,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6163,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6165,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6166,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6168,59) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6170,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6171,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6172,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6174,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6175,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6176,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6198,66) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6198,104) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6201,57) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6221,107) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6225,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6231,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6232,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6233,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6234,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6235,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6236,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6238,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6239,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6240,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6242,59) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6244,59) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6246,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6247,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6248,76) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6249,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6250,91) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6252,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6253,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6254,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6255,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6256,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6287,70) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6287,108) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6290,61) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6318,111) std::vector<double, std::allocator<double>>::back(const std::vector<double, std::allocator<double>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6126,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6129,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6129,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6129,13)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6129,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6129,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6129,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6145,9)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6145,9)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6145,9)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6145,9)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6145,9)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6179,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6181,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6184,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6184,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6184,17)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6184,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6184,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6184,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6207,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6210,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6210,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6210,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6210,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6210,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6259,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6261,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6263,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6266,21)
         <Peeled loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6266,21)
         <Multiversioned v1>
            remark #25228: Loop multiversioned for Data Dependence
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6266,21)
         <Remainder loop for vectorization, Multiversioned v1>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6266,21)
         <Remainder loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6266,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6266,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6297,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6299,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6302,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6302,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6302,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6302,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6302,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6110,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas35computeIsobaricSpecificHeatCapacityEPdS0_RKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:6110

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :     867
            Global    :     305
            Local     :     562
        Regenerable   :      26
        Spilled       :     136
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.0%]
            Writes    :       3 [1.75e+00 ~ 0.0%]
        Spills        :    1008 bytes*
            Reads     :     369 [2.76e+02 ~ 6.9%]
            Writes    :     164 [7.98e+01 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [133] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5963,1)
  -> INLINE: (5964,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5970,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5971,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5974,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5975,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5987,62) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (5987,100) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (5991,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5997,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5998,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5999,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6000,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6002,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6003,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6005,59) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6007,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6008,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6009,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6028,66) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6028,104) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6033,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6039,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6040,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6041,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6042,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6043,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6044,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6046,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6047,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6048,100) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6050,59) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6052,59) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6054,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6055,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6056,66) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6057,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6058,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6084,70) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (6084,108) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5978,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5981,13)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5981,13)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5981,13)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5981,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5981,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6012,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6014,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6017,17)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6017,17)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6017,17)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6017,17)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6017,17)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6061,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6063,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6065,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6068,21)
         <Peeled loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6068,21)
         <Multiversioned v1>
            remark #25228: Loop multiversioned for Data Dependence
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6068,21)
         <Remainder loop for vectorization, Multiversioned v1>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6068,21)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6068,21)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(5963,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas35computeIsobaricSpecificHeatCapacityEPdRKSt6vectorIPKdSaIS3_EERKN6SAMRAI4hier9IntVectorESC_SC_SC_SC_SC_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:5963

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     372
            Global    :     161
            Local     :     211
        Regenerable   :      23
        Spilled       :      72
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     528 bytes*
            Reads     :     203 [1.71e+02 ~ 9.2%]
            Writes    :     113 [6.59e+01 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [134] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2394,1)
  -> INLINE: (2418,45) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2418,47) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2420,51) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2422,67) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2422,69) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2423,78) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2436,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2440,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2440,51) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2442,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2442,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2445,76) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2445,78) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2453,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2454,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2454,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (2457,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2459,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2459,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2460,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2460,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2462,48) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2463,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2472,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2472,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2473,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2473,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2475,57) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2475,65) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2475,109) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2476,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2476,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2476,75) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2479,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2480,34) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2481,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2487,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2487,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2493,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2495,45) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2495,47) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)
  -> INLINE: (2499,45) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2499,47) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)
  -> INLINE: (2502,28) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2502,30) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> (2508,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2508,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2509,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2512,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2512,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2512,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2515,9) EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2524,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2525,33) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2525,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (2527,37) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2528,18) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (2530,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (2530,50) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2534,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (2536,63) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2536,65) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2538,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2538,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2538,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> (2541,17) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (2541,17) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (2542,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2542,59) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2544,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2544,39) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &)
  -> INLINE: (2545,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2548,40) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2548,42) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2550,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2550,38) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2551,17) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2551,70) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2553,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (2553,39) SAMRAI::pdat::SideData<Real>::fillAll(SAMRAI::pdat::SideData<Real> *, const Real &, const SAMRAI::hier::Box &)
  -> (2561,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2561,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2562,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2565,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2565,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2565,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2568,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2568,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2570,81) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2570,83) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2571,92) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2572,43) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (2574,9) EquationOfStateMixingRulesIdealGas::computeIsobaricSpecificHeatCapacity(const EquationOfStateMixingRulesIdealGas *, Real *, Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2586,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2586,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2589,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2589,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2589,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2589,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2589,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2589,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2589,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2589,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2589,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2589,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2589,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2589,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2589,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2589,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2589,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2589,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2459,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U275_V.U275_V.U275_V.U275_V.U275_V+i*4) (558:18) and *(U275_V.U275_V.U275_V.U275_V.U275_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2459,21)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2475,65)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2476,48)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2510,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2563,9)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2394,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas35computeIsobaricSpecificHeatCapacityERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2394

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     991
            Global    :     180
            Local     :     811
        Regenerable   :     362
        Spilled       :      11
        
    Routine stack
        Variables     :    1715 bytes*
            Reads     :     104 [2.38e+01 ~ 7.3%]
            Writes    :     141 [2.33e+01 ~ 7.2%]
        Spills        :      48 bytes*
            Reads     :      12 [6.10e-01 ~ 0.2%]
            Writes    :      14 [2.09e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [135] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2608,1)
  -> (2617,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (2617,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (2618,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2618,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2619,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2619,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2621,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (2623,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2624,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2625,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2629,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2629,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2630,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2630,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2633,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (2637,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2637,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2637,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2637,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2640,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U284_V$1317.0.1065->__vptr_V$a6 + EXPR_CONV.SI32.I64(43(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2623,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2623,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2623,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2623,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2623,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2623,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2627,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2608,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21getGruneisenParameterEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2608

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     187
            Global    :      81
            Local     :     106
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.1%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [136] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2656,1)
  -> INLINE: (2674,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (2677,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2677,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2679,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (2682,88) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2682,90) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2683,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2683,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2684,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2684,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2685,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2685,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2688,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2688,66) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2702,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2703,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2703,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2704,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2704,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2705,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2705,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2707,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2707,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2707,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (2719,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2719,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2719,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (2720,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2723,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (2728,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2733,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2733,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U288_V$1326.0.1066->__vptr_V$a6 + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2679,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2703,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2703,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2703,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2703,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2703,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2703,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2704,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2704,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2704,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2704,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2704,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2704,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2705,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2705,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2705,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2705,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2705,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2705,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2656,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas25computeGruneisenParameterERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2656

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [137] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2750,1)
  -> INLINE: (2773,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2774,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2780,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (2783,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2783,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (2785,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (2788,88) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2788,90) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2789,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2789,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2790,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2790,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2791,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2791,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2794,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2794,66) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2808,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2809,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2809,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2810,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2810,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2811,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2811,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2813,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2813,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2813,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (2825,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2825,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2825,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (2826,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2829,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (2835,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2841,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2841,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U28c_V$1339.0.1067->__vptr_V$a6 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2785,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2809,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2809,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2809,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2809,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2809,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2809,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2810,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2810,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2810,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2810,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2810,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2810,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2750,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas25computeGruneisenParameterERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2750

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     101
        Spilled       :      18
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :     104 bytes*
            Reads     :      31 [8.76e+00 ~ 2.0%]
            Writes    :      24 [6.04e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [138] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2856,1)
  -> (2866,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (2866,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (2867,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2867,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2868,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2868,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (2870,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (2872,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2873,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2874,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2878,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2878,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2879,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2879,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2882,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (2886,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2886,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2886,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2886,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2889,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U290_V$134b.0.1068->__vptr_V$a6 + EXPR_CONV.SI32.I64(43(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2872,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2872,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2872,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2872,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2872,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2872,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2876,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2856,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21getGruneisenParameterEPKdS1_RKSt6vectorIS1_SaIS1_EES6_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2856

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     188
            Global    :      81
            Local     :     107
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.0%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [139] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2906,1)
  -> INLINE: (2925,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (2928,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2928,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2930,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (2933,88) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2933,90) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2934,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2934,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2935,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2935,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2936,82) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2936,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2939,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2939,66) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2953,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2954,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2954,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2955,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2955,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2956,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2956,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2958,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2958,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2958,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (2970,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2970,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2970,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (2971,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2974,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (2979,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2984,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2984,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U294_V$135b.0.1069->__vptr_V$a6 + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2930,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2954,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2954,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2954,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2954,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2954,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2954,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2955,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2955,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2955,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2955,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2955,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2955,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2956,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2956,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2956,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2956,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2956,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2956,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(2906,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas25computeGruneisenParameterERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:2906

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     476
            Global    :     122
            Local     :     354
        Regenerable   :      93
        Spilled       :      17
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      39 [1.26e+01 ~ 2.3%]
            Writes    :      36 [1.00e+01 ~ 1.8%]
        Spills        :      96 bytes*
            Reads     :      33 [8.06e+00 ~ 1.5%]
            Writes    :      27 [5.85e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeGruneisenParameter(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [140] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3002,1)
  -> INLINE: (3026,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3027,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3033,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (3036,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3036,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (3038,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3041,88) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3041,90) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3042,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3042,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3043,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3043,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3044,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3044,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3047,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3047,66) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3061,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3062,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3062,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3063,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3063,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3064,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3064,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3066,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3066,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3066,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (3077,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3077,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3077,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (3078,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3081,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (3087,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3093,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3093,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U298_V$136f.0.1070->__vptr_V$a6 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3038,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3062,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3062,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3062,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3062,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3062,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3062,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3063,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3063,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3063,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3063,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3063,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3063,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3002,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas25computeGruneisenParameterERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3002

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     104
        Spilled       :      17
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :      96 bytes*
            Reads     :      29 [7.26e+00 ~ 1.7%]
            Writes    :      23 [5.04e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getPressureDerivativeWithPartialDensities(std::vector<double, std::allocator<double>> *, const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getPressureDerivativeWithPartialDensities(std::vector<double, std::allocator<double>> *, const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [141] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3106,1)
  -> (3115,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3115,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (3116,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3116,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3118,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (3120,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3121,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3125,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3125,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3128,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (3132,50) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3133,50) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3140,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3140,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (3141,9) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3144,37) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3144,63) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3146,13) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3149,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3149,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3120,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3120,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3120,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3120,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3120,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3120,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3123,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3142,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3106,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas41getPressureDerivativeWithPartialDensitiesEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     194
            Global    :      81
            Local     :     113
        Regenerable   :      27
        Spilled       :      20
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      22 [2.50e+01 ~ 4.8%]
            Writes    :      14 [1.36e+01 ~ 2.6%]
        Spills        :     120 bytes*
            Reads     :      40 [3.76e+01 ~ 7.2%]
            Writes    :      24 [1.94e+01 ~ 3.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_get_Tp_allocator(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIdSaIdEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_deallocate(std::_Vector_base<double, std::allocator<double>> *, std::_Vector_base<double, std::allocator<double>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [148] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3164,1)
  -> INLINE: (3182,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3182,58) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3184,62) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3200,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3200,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (3201,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3201,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (3203,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (3205,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (3209,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3209,62) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3211,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3211,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3212,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3212,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3213,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3213,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3216,87) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3216,89) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3231,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3232,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3232,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3233,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3233,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3234,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3234,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3237,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3239,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3239,40) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3241,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3241,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3242,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3242,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3244,59) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3245,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3247,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3247,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3247,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3250,30) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3250,30) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3250,32) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3262,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3262,37) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3264,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3264,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3265,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3265,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3268,20) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3268,28) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3268,83) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3269,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3269,22) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3271,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3271,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3271,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3272,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3274,30) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3274,30) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3274,32) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3275,24) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3282,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (3287,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3292,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U29d_V$1394.0.1072->__vptr_V$a6 + EXPR_CONV.SI32.I64(16(SI32)) * 8(I64))))
  -> INLINE: (3298,47) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3298,49) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3299,57) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3299,59) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3300,57) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3300,59) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3306,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3306,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3307,9) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3310,13) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3310,70) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3310,72) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3313,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3313,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3313,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3313,5) EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3241,21)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3241,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3241,21)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3268,28)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3308,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3164,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas45computePressureDerivativeWithPartialDensitiesERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3164

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     733
            Global    :     126
            Local     :     607
        Regenerable   :     259
        Spilled       :      15
        
    Routine stack
        Variables     :    1052 bytes*
            Reads     :      79 [4.18e+01 ~ 8.0%]
            Writes    :     105 [3.98e+01 ~ 7.7%]
        Spills        :      80 bytes*
            Reads     :      15 [4.35e+00 ~ 0.8%]
            Writes    :      14 [4.33e+00 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::_M_emplace_back_aux<std::remove_reference<std::_Vector_base<double, std::allocator<double>>::pointer &>::type>(std::vector<Real *, std::allocator<Real *>> *, std::remove_reference<std::_Vector_base<double, std::allocator<double>>::pointer &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE19_M_emplace_back_auxIIS0_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(162,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEaSERKS1_] /usr/include/c++/4.8.5/bits/vector.tcc:162

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      56
            Global    :      22
            Local     :      34
        Regenerable   :       1
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) [152] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(919,4)
  -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(919,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector3minERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:919

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r11 r14-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      82
            Global    :      33
            Local     :      49
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [1.05e+00 ~ 0.6%]
            Writes    :       3 [1.05e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8CellDataIdEESaIS7_EIRKNS4_4hier3BoxERKiRKNS9_9IntVectorEEEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     248
            Global    :      59
            Local     :     189
        Regenerable   :      36
        Spilled       :       9
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :      10 [4.02e+00 ~ 2.2%]
            Writes    :      15 [4.25e+00 ~ 2.3%]
        Spills        :      32 bytes*
            Reads     :       5 [2.42e+00 ~ 1.3%]
            Writes    :       4 [3.42e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [155] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6344,1)
  -> INLINE: (6345,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6351,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6352,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6355,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6356,68) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6357,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6362,30) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6376,36) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6376,93) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6382,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6388,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6389,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6390,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6391,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6394,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6396,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6398,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6400,68) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6401,68) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6402,83) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6404,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6405,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6406,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6411,30) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6431,40) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6431,97) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6438,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6444,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6445,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6446,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6447,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6448,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6449,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6452,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6454,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6456,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6458,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6460,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6462,68) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6463,68) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6464,68) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6465,83) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6466,83) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6468,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6469,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6470,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6471,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6472,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6477,30) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6506,44) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6506,101) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6360,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6375:17) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6375:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6365,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6375:17) and this[si] (6375:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6409,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6430:21) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6430:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6413,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6430:21) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6430:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6416,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6430:21) and this[si] (6430:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6475,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6479,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6481,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25)

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6484,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities+(j+o (6505:25) and this[si] (6505:25)
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6344,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas45computePressureDerivativeWithPartialDensitiesERSt6vectorIPdSaIS1_EEPKdS6_S6_RKN6SAMRAI4hier9IntVectorESB_SB_SB_SB_SB_SB_SB_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:6344

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     218
            Global    :     128
            Local     :      90
        Regenerable   :      22
        Spilled       :      56
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     400 bytes*
            Reads     :      89 [2.11e+02 ~ 14.9%]
            Writes    :      53 [2.01e+01 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8CellDataIdEESaIS7_EIRKNS4_4hier3BoxEiRNS9_9IntVectorEEEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     248
            Global    :      59
            Local     :     189
        Regenerable   :      36
        Spilled       :       9
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :      10 [4.02e+00 ~ 2.2%]
            Writes    :      15 [4.25e+00 ~ 2.3%]
        Spills        :      32 bytes*
            Reads     :       5 [2.42e+00 ~ 1.3%]
            Writes    :       4 [3.42e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8CellDataIdEESaIS7_EIRKNS4_4hier3BoxERKiRNS9_9IntVectorEEEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     248
            Global    :      59
            Local     :     189
        Regenerable   :      36
        Spilled       :       9
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :      10 [4.02e+00 ~ 2.2%]
            Writes    :      15 [4.25e+00 ~ 2.3%]
        Spills        :      32 bytes*
            Reads     :       5 [2.42e+00 ~ 1.3%]
            Writes    :       4 [3.42e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [159] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3341,1)
  -> INLINE: (3366,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3367,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3371,56) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3371,58) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3373,62) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3389,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3389,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (3390,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3390,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (3392,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (3394,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (3398,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3398,62) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3400,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3400,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3401,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3401,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3402,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3402,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3405,87) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3405,89) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3420,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3421,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3421,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3422,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3422,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3423,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3423,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3426,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3428,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3428,40) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3430,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3430,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3431,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3431,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3433,59) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3434,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3436,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3436,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3436,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3439,30) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3439,30) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3439,32) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3451,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3451,37) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3453,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3453,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3454,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3454,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3457,20) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3457,28) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3457,83) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3458,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3458,22) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3460,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3460,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3460,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3461,48) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3463,30) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3463,30) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3463,32) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, int &&, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3464,24) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3467,62) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3468,23) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3469,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (3475,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (3481,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3487,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2a6_V$13ba.0.1073->__vptr_V$a6 + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (3493,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3493,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3494,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3494,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3495,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3495,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3501,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3501,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3502,9) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3505,13) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3505,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3505,72) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3508,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3508,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3508,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3508,5) EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3430,21)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3430,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3430,21)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3457,28)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3503,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(957,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3341,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas45computePressureDerivativeWithPartialDensitiesERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3341

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     754
            Global    :     131
            Local     :     623
        Regenerable   :     272
        Spilled       :      18
        
    Routine stack
        Variables     :    1100 bytes*
            Reads     :      83 [4.58e+01 ~ 8.3%]
            Writes    :     106 [3.98e+01 ~ 7.2%]
        Spills        :     104 bytes*
            Reads     :      19 [7.85e+00 ~ 1.4%]
            Writes    :      17 [7.33e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(54,52) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8SideDataIdEESaIS7_EIRKNS4_4hier3BoxERKiRKNS9_9IntVectorERSF_EEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     384
            Global    :      77
            Local     :     307
        Regenerable   :      28
        Spilled       :      15
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      40 [1.60e+01 ~ 2.4%]
            Writes    :      15 [1.26e+00 ~ 0.2%]
        Spills        :      80 bytes*
            Reads     :      19 [1.48e+01 ~ 2.2%]
            Writes    :      10 [8.87e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, int &&, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(54,52) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8SideDataIdEESaIS7_EIRKNS4_4hier3BoxEiRNS9_9IntVectorESE_EEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     384
            Global    :      77
            Local     :     307
        Regenerable   :      28
        Spilled       :      15
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      40 [1.60e+01 ~ 2.4%]
            Writes    :      15 [1.26e+00 ~ 0.2%]
        Spills        :      80 bytes*
            Reads     :      19 [1.48e+01 ~ 2.2%]
            Writes    :      10 [8.87e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(54,52) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(38,17) inlined into /usr/include/c++/4.8.5/bits/shared_ptr_base.h(503,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(494,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IN6SAMRAI4pdat8SideDataIdEESaIS7_EIRKNS4_4hier3BoxERKiRNS9_9IntVectorESG_EEESt19_Sp_make_shared_tagPT_RKT0_DpOT1_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:494

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     384
            Global    :      77
            Local     :     307
        Regenerable   :      28
        Spilled       :      15
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      40 [1.60e+01 ~ 2.4%]
            Writes    :      15 [1.26e+00 ~ 0.2%]
        Spills        :      80 bytes*
            Reads     :      19 [1.48e+01 ~ 2.2%]
            Writes    :      10 [8.87e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getPressureDerivativeWithPartialDensities(std::vector<double, std::allocator<double>> *, const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getPressureDerivativeWithPartialDensities(std::vector<double, std::allocator<double>> *, const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [165] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3534,1)
  -> (3549,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3549,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (3550,9) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3553,13) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_vector.h(903,6) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3553,13)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3534,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas41getPressureDerivativeWithPartialDensitiesEPKdS1_RKSt6vectorIS1_SaIS1_EES6_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      70
            Global    :      30
            Local     :      40
        Regenerable   :       4
        Spilled       :       9
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [5.53e+00 ~ 2.6%]
            Writes    :       5 [2.94e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [166] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3572,1)
  -> INLINE: (3588,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3588,58) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3590,62) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3592,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3592,55) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3593,70) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3595,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3595,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3596,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3596,68) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3596,82) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3610,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3614,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3614,62) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3616,64) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3616,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3617,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3617,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3620,87) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3620,89) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3629,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3630,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3630,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3631,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3631,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (3634,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3636,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3636,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3637,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3637,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3639,59) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3640,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3641,25) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3651,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3651,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3652,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3652,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3654,68) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3654,76) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3655,66) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3657,33) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3657,41) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3657,61) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3658,34) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3658,42) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3658,63) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3665,35) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3665,37) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3666,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3666,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3672,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3672,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3673,9) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3676,13) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3676,70) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3676,72) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3679,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3679,5) EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3610,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3630,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3630,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3630,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3630,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3630,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3630,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3631,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3631,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3631,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3631,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3631,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3631,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3636,21)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3636,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3636,21)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3654,76)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3657,41)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3658,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3674,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3572,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas45computePressureDerivativeWithPartialDensitiesERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3572

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     682
            Global    :     136
            Local     :     546
        Regenerable   :     185
        Spilled       :      15
        
    Routine stack
        Variables     :    1088 bytes*
            Reads     :     101 [3.06e+01 ~ 3.9%]
            Writes    :      70 [1.96e+01 ~ 2.5%]
        Spills        :      80 bytes*
            Reads     :      21 [7.17e+00 ~ 0.9%]
            Writes    :      21 [8.02e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [167] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6534,1)
  -> INLINE: (6535,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6541,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6542,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6545,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6546,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6547,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6552,30) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6569,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6575,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6576,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6577,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6578,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6581,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6583,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6585,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6587,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6588,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6589,67) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6591,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6592,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6593,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6598,30) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6622,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6628,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6629,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6630,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6631,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6632,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6633,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6636,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6638,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6640,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6642,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6644,70) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6646,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6647,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6648,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6649,67) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6650,67) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6652,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6653,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6654,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6655,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6656,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6661,30) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6550,9)
   remark #25461: Imperfect Loop Unroll-Jammed by 2   (pre-vector) 
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6565:17) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6565:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6555,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6565:17) and Psi_i[i+offset_0_partial_pressure_partial_partial_densities] (6565:17)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6555,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6550,9)
<Remainder>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6555,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6555,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6555,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6555,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6596,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6600,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6603,17)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6603,17)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6603,17)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6603,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6659,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6663,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6665,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6668,21)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6668,21)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6668,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6668,21)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6534,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas45computePressureDerivativeWithPartialDensitiesERSt6vectorIPdSaIS1_EEPKdS6_RKN6SAMRAI4hier9IntVectorESB_SB_SB_SB_SB_SB_SB_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:6534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     386
            Global    :     175
            Local     :     211
        Regenerable   :      26
        Spilled       :      64
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.0%]
            Writes    :       3 [1.75e+00 ~ 0.0%]
        Spills        :     448 bytes*
            Reads     :      83 [1.19e+02 ~ 3.0%]
            Writes    :      59 [2.63e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [168] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3707,1)
  -> INLINE: (3731,56) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3731,58) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3733,62) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3735,53) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3735,55) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3736,64) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3738,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3738,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3739,66) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3753,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3757,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3757,62) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3759,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3759,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3760,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3760,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3763,87) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3763,89) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3772,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3773,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3773,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3774,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3774,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (3777,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3779,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3779,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3780,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3780,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3782,59) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3783,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3784,25) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3794,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3794,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3795,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3795,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3798,20) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3798,28) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3798,83) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3800,33) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3800,41) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3800,61) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3801,34) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3801,42) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3801,63) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3804,62) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3805,27) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3806,28) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3807,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3813,35) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3813,37) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3814,36) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3814,38) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3820,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3820,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3821,9) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3824,13) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3824,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3824,72) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3827,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3827,5) EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithPartialDensities(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3753,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3773,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3773,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3773,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3773,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3773,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3773,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3774,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3774,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3774,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3774,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3774,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3774,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3779,21)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3779,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3779,21)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3798,28)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3800,41)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3801,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3822,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3707,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas45computePressureDerivativeWithPartialDensitiesERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3707

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     687
            Global    :     137
            Local     :     550
        Regenerable   :     187
        Spilled       :      16
        
    Routine stack
        Variables     :    1088 bytes*
            Reads     :     105 [3.46e+01 ~ 4.4%]
            Writes    :      70 [1.96e+01 ~ 2.5%]
        Spills        :      88 bytes*
            Reads     :      22 [1.26e+01 ~ 1.6%]
            Writes    :      22 [9.02e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getPressureDerivativeWithVolumeFractions(std::vector<double, std::allocator<double>> *, const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getPressureDerivativeWithVolumeFractions(std::vector<double, std::allocator<double>> *, const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const) [169] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3852,1)
  -> (3863,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3863,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (3864,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3864,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3866,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (3868,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3869,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3873,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3873,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3876,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (3880,50) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3884,46) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (3886,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3886,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (3887,7) std::vector<double, std::allocator<double>>::reserve(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3890,51) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3891,11) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3894,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3894,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3868,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3868,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3868,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3868,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3868,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3868,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3871,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3888,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3852,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas40getPressureDerivativeWithVolumeFractionsEPKdS1_RKSt6vectorIS1_SaIS1_EES6_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3852

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     198
            Global    :      83
            Local     :     115
        Regenerable   :      28
        Spilled       :      19
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      22 [2.50e+01 ~ 4.6%]
            Writes    :      14 [1.36e+01 ~ 2.5%]
        Spills        :     112 bytes*
            Reads     :      35 [4.48e+01 ~ 8.1%]
            Writes    :      23 [1.84e+01 ~ 3.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [170] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3910,1)
  -> INLINE: (3929,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3929,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3931,61) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3933,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3933,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3934,72) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3950,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3950,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (3952,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (3954,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (3958,59) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3958,61) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3960,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3960,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3961,82) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3961,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3964,86) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3964,88) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3978,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3979,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3979,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3980,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3980,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3983,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3985,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3985,40) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3987,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3987,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3988,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3988,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3990,58) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3991,25) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3992,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3994,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3994,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3994,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4005,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4005,37) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4007,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4007,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4008,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4008,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4011,20) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4011,28) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4011,82) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4013,34) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4013,42) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4013,63) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4014,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4014,22) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4016,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4016,40) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4016,42) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4017,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (4021,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (4030,38) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4030,40) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4031,55) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4031,57) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4037,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (4037,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (4038,7) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4041,11) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4041,67) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4041,69) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4044,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4044,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4044,5) EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3987,21)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3987,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3987,21)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4011,28)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4013,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4039,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(3910,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas44computePressureDerivativeWithVolumeFractionsERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:3910

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     670
            Global    :     112
            Local     :     558
        Regenerable   :     228
        Spilled       :      16
        
    Routine stack
        Variables     :    1064 bytes*
            Reads     :      74 [3.03e+01 ~ 5.2%]
            Writes    :      84 [2.84e+01 ~ 4.9%]
        Spills        :      88 bytes*
            Reads     :      19 [7.21e+00 ~ 1.2%]
            Writes    :      20 [7.65e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const) [171] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4)
  -> INLINE: (637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(638,11)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,32)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,39)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box11numberCellsEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:636

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r8 r13]
        
    Routine temporaries
        Total         :      79
            Global    :      17
            Local     :      62
        Regenerable   :      13
        Spilled       :       2
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      13 [3.69e+00 ~ 4.7%]
            Writes    :      12 [2.25e+00 ~ 2.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const) [172] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6715,1)
  -> INLINE: (6716,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6722,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6723,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6726,61) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6727,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6728,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6733,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6747,46) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6748,46) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6753,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6759,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6760,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6761,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6762,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6765,61) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6767,61) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6769,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6771,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6772,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6773,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6775,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6776,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6777,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6782,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6802,50) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6803,50) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6809,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6815,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6816,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6817,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6818,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6819,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6820,45) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6823,61) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6825,61) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6827,61) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6829,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6831,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6833,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6834,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6835,54) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6836,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6837,69) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6839,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6840,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6841,88) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6842,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6843,103) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6848,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6877,54) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (6878,54) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6731,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions] (6746:17) and M_i[i+offset_0_partial_pressure_partial_volume_fractions] (6746:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6736,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions] (6746:17) and this[this->d_num_species-1] (6746:17)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6736,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6780,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6801:21) and M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6801:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6784,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6801:21) and M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6801:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6787,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6801:21) and this[this->d_num_species-1] (6801:21)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6787,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6846,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25) and M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6850,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25) and M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6852,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25) and M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25)

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6855,21)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between M_i[i+offset_0_partial_pressure_partial_volume_fractions+(j+offs (6876:25) and this[this->d_num_species-1] (6876:25)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6855,21)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(6715,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas44computePressureDerivativeWithVolumeFractionsERSt6vectorIPdSaIS1_EEPKdS6_RKN6SAMRAI4hier9IntVectorESB_SB_SB_SB_SB_SB_SB_] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:6715

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     362
            Global    :     147
            Local     :     215
        Regenerable   :      26
        Spilled       :      83
        
    Routine stack
        Variables     :      12 bytes*
            Reads     :       3 [1.75e+00 ~ 0.1%]
            Writes    :       3 [1.75e+00 ~ 0.1%]
        Spills        :     608 bytes*
            Reads     :      99 [2.86e+02 ~ 13.1%]
            Writes    :      79 [8.89e+01 ~ 4.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [173] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4072,1)
  -> INLINE: (4097,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4098,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4102,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4102,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4104,61) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4106,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4106,57) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4107,66) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4123,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4123,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (4125,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (4127,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> INLINE: (4131,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4131,61) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4133,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4133,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4134,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4134,84) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4137,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4137,88) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4151,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4152,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4152,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4153,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4153,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4156,19) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4158,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4158,40) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4160,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4160,21) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4161,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4161,33) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4163,58) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4164,25) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4165,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4167,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4167,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4167,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (4178,28) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4178,37) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4180,19) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4180,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4181,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (4181,30) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4184,20) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4184,28) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4184,82) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4186,34) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4186,42) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4186,63) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (4187,20) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4187,22) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4189,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4189,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4189,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (4190,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4193,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4194,28) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4195,23) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4196,16) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (4199,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (4209,38) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4209,40) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4210,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4210,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4216,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (4216,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (4217,7) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4220,11) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4220,67) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4220,69) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4223,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4223,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4223,5) EquationOfStateMixingRulesIdealGas::computePressureDerivativeWithVolumeFractions(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const Real *, const Real *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4160,21)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4160,21)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4160,21)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4184,28)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4186,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4218,5)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4072,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas44computePressureDerivativeWithVolumeFractionsERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4072

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     679
            Global    :     109
            Local     :     570
        Regenerable   :     237
        Spilled       :      18
        
    Routine stack
        Variables     :    1120 bytes*
            Reads     :      75 [3.46e+01 ~ 7.1%]
            Writes    :      83 [2.22e+01 ~ 4.6%]
        Spills        :     104 bytes*
            Reads     :      22 [6.00e+00 ~ 1.2%]
            Writes    :      23 [6.92e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getMixtureDensity(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getMixtureDensity(const EquationOfStateMixingRulesIdealGas *, const Real *, const Real *, const std::vector<const Real *, std::allocator<const Real *>> &) const) [174] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4246,1)
  -> (4255,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (4255,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (4256,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (4256,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (4257,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4257,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (4259,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (4261,31) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4262,35) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4263,41) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4267,39) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4267,75) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4268,45) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4268,81) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4271,5) EquationOfStateMixingRulesIdealGas::getMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, const std::vector<const Real *, std::allocator<const Real *>> &) const
  -> INLINE: (4275,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4275,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4275,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4275,31) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4278,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c4_V$1483.0.1080->__vptr_V$a6 + EXPR_CONV.SI32.I64(53(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4261,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4261,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4261,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4261,31)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4261,31)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4261,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4265,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4246,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas17getMixtureDensityEPKdS1_RKSt6vectorIS1_SaIS1_EE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4246

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     187
            Global    :      81
            Local     :     106
        Regenerable   :      30
        Spilled       :      14
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      39 [5.21e+01 ~ 11.7%]
            Writes    :      20 [2.69e+01 ~ 6.1%]
        Spills        :      72 bytes*
            Reads     :      17 [1.08e+01 ~ 2.4%]
            Writes    :      15 [8.74e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureDensity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureDensity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const) [175] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4292,1)
  -> INLINE: (4310,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> (4313,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (4313,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4315,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (4318,80) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4318,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4319,66) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4319,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4320,72) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4320,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4321,78) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4321,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4324,60) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4324,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4338,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4339,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4339,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4340,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4340,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4341,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4341,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (4344,75) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4344,75) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<SAMRAI::pdat::CellData<Real>>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4345,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4355,69) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (4355,69) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4355,69) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<SAMRAI::pdat::CellData<Real>>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4356,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4358,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &, const SAMRAI::hier::Box &) const
  -> INLINE: (4363,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4368,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4368,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c8_V$1492.0.1081->__vptr_V$a6 + EXPR_CONV.SI32.I64(56(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4315,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4339,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4339,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4339,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4339,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4339,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4339,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4340,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4340,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4340,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4340,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4340,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4340,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4341,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4341,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4341,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4341,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4341,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4341,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4292,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21computeMixtureDensityERSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEERKS5_S8_S8_RKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4292

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     504
            Global    :     133
            Local     :     371
        Regenerable   :      79
        Spilled       :      18
        
    Routine stack
        Variables     :     384 bytes*
            Reads     :      53 [1.36e+01 ~ 2.5%]
            Writes    :      28 [4.97e+00 ~ 0.9%]
        Spills        :     104 bytes*
            Reads     :      54 [9.86e+00 ~ 1.8%]
            Writes    :      41 [9.48e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_deallocate(std::_Vector_base<int, std::allocator<int>> *, std::_Vector_base<int, std::allocator<int>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::computeMixtureDensity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::computeMixtureDensity(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const) [181] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4383,1)
  -> INLINE: (4406,33) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (4407,14) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4413,39) EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const
  -> INLINE: (4415,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4415,46) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (4417,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (4420,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4420,82) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4421,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4421,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4422,72) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4422,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4423,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4423,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4426,60) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4426,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4440,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4441,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4441,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4442,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4442,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
      -> INLINE: (924,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (925,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (926,32) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (926,46) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (927,54) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (932,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (934,29) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (934,43) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
      -> INLINE: (935,42) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4443,24) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (4443,26) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1014,11) SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4445,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4445,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4445,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (4457,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,40) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,42) std::make_shared<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::SideData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::SideData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> &, SAMRAI::pdat::SideData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>::construct<SAMRAI::pdat::SideData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type> *, SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
  -> INLINE: (4458,44) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (4461,5) EquationOfStateMixingRulesIdealGas::computeMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, int, const SAMRAI::hier::Box &) const
  -> INLINE: (4467,24) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4473,9) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4473,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2ce_V$14a9.0.1082->__vptr_V$a6 + EXPR_CONV.SI32.I64(57(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4417,16)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4441,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4441,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4441,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4441,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4441,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4441,26)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(923,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4442,26)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4442,26)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(925,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4442,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4442,26)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4442,26)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(933,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4442,26)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4383,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas21computeMixtureDensityERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_S8_iRKNS1_4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4383

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     437
            Global    :     103
            Local     :     334
        Regenerable   :     101
        Spilled       :      18
        
    Routine stack
        Variables     :     464 bytes*
            Reads     :      33 [1.18e+01 ~ 2.7%]
            Writes    :      36 [1.00e+01 ~ 2.3%]
        Spills        :     104 bytes*
            Reads     :      31 [8.76e+00 ~ 2.0%]
            Writes    :      24 [6.04e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getNumberOfSpeciesThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getNumberOfSpeciesThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, int) const) [182] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(542,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp(542,9):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas41getNumberOfSpeciesThermodynamicPropertiesEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.hpp:542

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getSpeciesThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getSpeciesThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *, std::vector<Real *, std::allocator<Real *>> &, int) const) [183] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4484,1)
  -> INLINE: (4492,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4493,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4496,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4497,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4499,28) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4500,20) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4502,24) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (4503,24) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4484,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas33getSpeciesThermodynamicPropertiesERSt6vectorIPdSaIS1_EEi] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4484

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :      26
            Global    :       0
            Local     :      26
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesIdealGas::getNumberOfMixtureThermodynamicProperties(const EquationOfStateMixingRulesIdealGas *) const) [184] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4512,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp(4512,1):remark #34051: REGISTER ALLOCATION : [_ZNK34EquationOfStateMixingRulesIdealGas41getNumberOfMixtureThermodynamicPropertiesEv] /home/akula/HAMeRS_IB/HAMeRS/src/util/mixing_rules/equations_of_state/ideal_gas/EquationOfStateMixingRulesIdealGas.cpp:4512

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       8
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(113,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(124,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox5TimerEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::~map(std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN20MIXING_CLOSURE_MODEL4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_type, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type, std::_Select1st<std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::value_type>, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::key_compare, std::map<MIXING_CLOSURE_MODEL::TYPE, std::string, std::less<MIXING_CLOSURE_MODEL::TYPE>, std::allocator<std::pair<const MIXING_CLOSURE_MODEL::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN20MIXING_CLOSURE_MODEL4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP23EquationOfStateIdealGasLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP23EquationOfStateIdealGasLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP23EquationOfStateIdealGasLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP23EquationOfStateIdealGasLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfStateIdealGas *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP23EquationOfStateIdealGasLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :       8
            Local     :       6
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8SideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8SideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8SideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8SideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::SideData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::SideData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8SideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(362,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(398,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(262,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1470,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1486,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(119,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(155,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(186,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(253,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(269,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(285,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(301,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(340,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(555,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(715,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(756,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::min(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1011,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(148,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(162,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(175,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(238,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(251,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(265,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(281,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(297,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(315,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(476,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(502,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(724,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(159,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(223,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(336,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(330,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(495,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(536,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(558,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(622,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(652,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(679,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(753,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1166,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1182,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1212,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1248,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1298,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1347,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1507,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1545,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1573,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(84,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(94,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(103,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(245,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(681,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(692,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(703,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(159,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(170,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(201,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(271,7)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h(83,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h(254,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h(76,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h(121,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideIndex.h(87,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideIndex.h(97,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *)) [820] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(111,1)
  -> INLINE: (112,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(111,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:111

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      32
            Global    :      13
            Local     :      19
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *const)) [821] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(110,17)
  -> INLINE: (110,17) SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *)
    -> INLINE: (112,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(110,17):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:110

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rdi r14-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      13
            Local     :      20
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(117,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(125,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &)) [824] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(212,1)
  -> INDIRECT- (VIRTUAL): (217,18)  SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const (789)
  -> INLINE: (219,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (219,37) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (219,61) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (219,63) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (220,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (221,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (221,18) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (221,23) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(221,16)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(212,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE4copyERKNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:212

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13 r15]
        
    Routine temporaries
        Total         :     173
            Global    :      60
            Local     :     113
        Regenerable   :      37
        Spilled       :       4
        
    Routine stack
        Variables     :     273 bytes*
            Reads     :      17 [9.01e+00 ~ 8.2%]
            Writes    :      10 [1.11e+00 ~ 1.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &) const) [825] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(230,1)
  -> INLINE: (237,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (237,34) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (237,58) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (237,60) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (238,13) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (239,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (239,22) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (239,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(239,13)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(230,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE5copy2ERNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:230

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     519
            Global    :     140
            Local     :     379
        Regenerable   :      35
        Spilled       :      18
        
    Routine stack
        Variables     :     392 bytes*
            Reads     :     114 [2.09e+02 ~ 10.3%]
            Writes    :      44 [1.54e+02 ~ 7.6%]
        Spills        :      96 bytes*
            Reads     :      21 [2.28e+01 ~ 1.1%]
            Writes    :      21 [1.27e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [826] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(257,1)
  -> INLINE: (258,10) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (264,24)  SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const (791)
  -> INDIRECT- (VIRTUAL): (266,11)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65113_V$b6c.0.764->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (266,42) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (268,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (268,18) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (268,23) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (269,13)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65113_V$b6c.0.764->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (270,13)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65113_V$b6c.0.764->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (272,10) SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)
    -> INLINE: (320,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (321,46)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47545->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INDIRECT- (VIRTUAL): (323,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47545->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (323,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (324,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47545->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (326,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (327,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47545->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (338,63) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,36) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (340,38) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (344,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (345,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (345,47) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,29) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,46) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (352,42) SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const
    -> INLINE: (354,13) SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,25) SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,36) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (355,23) SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(85,7) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (358,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,25) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (358,43) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,55) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (275,10) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(269,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(358,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(350,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(357,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between src (358:43) and this->d_array->_M_start[myoffset+ci.ci.ci.ci[0]-this->d_index[0] (358:25)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(257,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE4copyERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     411
            Global    :     100
            Local     :     311
        Regenerable   :      80
        Spilled       :      13
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :      62 [4.66e+02 ~ 6.0%]
            Writes    :      22 [9.25e+00 ~ 0.1%]
        Spills        :      56 bytes*
            Reads     :      12 [2.08e+02 ~ 2.7%]
            Writes    :      10 [2.01e+02 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const) [827] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(283,1)
  -> INDIRECT- (VIRTUAL): (290,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65169_V$b76.0.765->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (290,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (293,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (293,22) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (293,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (294,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65169_V$b76.0.765->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (295,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65169_V$b76.0.765->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (297,14) SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)
    -> INLINE: (320,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (321,46)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47461->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INDIRECT- (VIRTUAL): (323,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47461->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (323,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (324,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47461->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (326,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (327,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_65148_V$bd0.0.779.47461->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (338,63) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,36) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (340,38) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (344,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (345,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (345,47) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,29) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,46) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (352,42) SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const
    -> INLINE: (354,13) SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,25) SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,36) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (355,23) SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(85,7) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (358,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,25) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (358,43) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,55) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(294,22)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(358,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(350,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(357,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between src (358:43) and this->d_array->_M_start[myoffset+ci.ci.ci.ci[0]-this->d_index[0] (358:25)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(283,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE5copy2ERNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:283

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     384
            Global    :      92
            Local     :     292
        Regenerable   :      70
        Spilled       :      14
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :      62 [6.02e+02 ~ 6.1%]
            Writes    :      22 [1.19e+01 ~ 0.1%]
        Spills        :      64 bytes*
            Reads     :      12 [2.40e+02 ~ 2.4%]
            Writes    :      10 [2.30e+02 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copyDepth(SAMRAI::pdat::CellData<Real> *, int, const SAMRAI::pdat::CellData<Real> &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copyDepth(SAMRAI::pdat::CellData<Real> *, int, const SAMRAI::pdat::CellData<Real> &, int)) [828] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(381,1)
  -> INLINE: (384,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (384,34) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (384,55) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (384,57) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (385,13) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (386,13) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (386,15) SAMRAI::pdat::ArrayData<Real>::copyDepth(SAMRAI::pdat::ArrayData<Real> *, unsigned int, const SAMRAI::pdat::ArrayData<Real> &, unsigned int, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(485,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(485,52) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(487,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(488,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(506,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(513,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(518,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(520,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (386,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(386,13)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(381,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE9copyDepthEiRKS2_i] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:381

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     540
            Global    :     143
            Local     :     397
        Regenerable   :      34
        Spilled       :      14
        
    Routine stack
        Variables     :     392 bytes*
            Reads     :     114 [1.93e+02 ~ 10.5%]
            Writes    :      44 [1.41e+02 ~ 7.6%]
        Spills        :      64 bytes*
            Reads     :      12 [6.36e+00 ~ 0.3%]
            Writes    :      12 [2.59e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::CellData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::CellData<Real> *) const) [829] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(402,1)
  -> INLINE: (403,11) SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,22) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,55) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,88) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,123) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,157) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,189) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(402,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE28canEstimateStreamSizeFromBoxEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:402

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getDataStreamSize(const SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::getDataStreamSize(const SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::BoxOverlap &) const) [830] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(410,1)
  -> INLINE: (415,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (415,19) SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (416,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65567_V$b7f.0.768->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (417,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.65567_V$b7f.0.768->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(410,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE17getDataStreamSizeERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:410

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      51
            Global    :      23
            Local     :      28
        Regenerable   :      13
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::packStream(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::packStream(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const) [831] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(434,1)
  -> INDIRECT- (VIRTUAL): (439,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66093_V$b83.0.769->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (439,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (441,13) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (441,15) SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const
  -> INDIRECT- (VIRTUAL): (441,34)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66093_V$b83.0.769->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (442,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66093_V$b83.0.769->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> (444,7) SAMRAI::pdat::CellData<Real>::packWithRotation(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::CellOverlap &) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(434,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:434

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      32
            Global    :      16
            Local     :      16
        Regenerable   :       0
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::packWithRotation(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::CellOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::packWithRotation(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::CellOverlap &) const) [832] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(453,1)
  -> INLINE: (457,31) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INDIRECT- (VIRTUAL): (458,46)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_66313_V$be5.0.780->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (460,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_66313_V$be5.0.780->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (460,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (461,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_66313_V$be5.0.780->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (463,24) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INDIRECT- (VIRTUAL): (464,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_66313_V$be5.0.780->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (475,22) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (478,29) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (478,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (478,29) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (481,63) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (482,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (482,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (482,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (482,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (482,36) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (483,38) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (487,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (492,21) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (492,21) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (494,36) SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const
  -> INLINE: (495,16) SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,25) SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,36) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (496,26) SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(85,7) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (498,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (498,29) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (498,37) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
      -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (505,11) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (505,11) SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(265,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(266,10) SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)
      -> INLINE: (399,12) SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const
      -> INLINE: (403,25) std::vector<char, std::allocator<char>>::insert<const char *, void>(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::iterator, const char *, const char *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (403,32) std::vector<char, std::allocator<char>>::end(std::vector<char, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (406,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
  -> INLINE: (505,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(479,29)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(479,29)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(479,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(498,30)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(488,20)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(489,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(493,21)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(492,21)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(497,26)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
            remark #25478: While Loop Unrolled by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(499,37)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(499,37)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(493,21)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(567,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(453,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE16packWithRotationERNS_4tbox13MessageStreamERKNS0_11CellOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:453

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     339
            Global    :      92
            Local     :     247
        Regenerable   :      65
        Spilled       :      15
        
    Routine stack
        Variables     :     488 bytes*
            Reads     :      45 [1.90e+03 ~ 9.7%]
            Writes    :      29 [8.39e+01 ~ 0.4%]
        Spills        :      80 bytes*
            Reads     :      37 [5.84e+02 ~ 3.0%]
            Writes    :      11 [2.31e+02 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::unpackStream(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::unpackStream(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [833] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(513,1)
  -> INLINE: (518,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (518,12) SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(935,32) SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(938,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,7) SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)
      -> INLINE: (1313,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,34) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INDIRECT- (VIRTUAL): (518,33)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66341_V$b87.0.770->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (519,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66341_V$b87.0.770->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between this->d_empty_flag (606:16) and this->d_empty_flag (599:11)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (31:4) and dst_ptr[dat_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(513,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE12unpackStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:513

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     364
            Global    :      85
            Local     :     279
        Regenerable   :      17
        Spilled       :      20
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :      38 [6.46e+02 ~ 6.5%]
            Writes    :      16 [5.08e+02 ~ 5.1%]
        Spills        :     112 bytes*
            Reads     :      23 [1.86e+02 ~ 1.9%]
            Writes    :      21 [7.82e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::sum(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::sum(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [834] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(534,1)
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (552,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (552,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (552,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (552,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (552,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (557,41)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66459_V$b8b.0.771->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (559,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66459_V$b8b.0.771->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (560,40) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (561,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (561,19) SAMRAI::pdat::ArrayData<Real>::isInitialized(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (562,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (562,18) SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(750,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(752,7) SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(752,16) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(751,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(563,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(534,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE3sumERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     379
            Global    :      90
            Local     :     289
        Regenerable   :     142
        Spilled       :       6
        
    Routine stack
        Variables     :     469 bytes*
            Reads     :      41 [6.93e+00 ~ 4.5%]
            Writes    :      54 [2.76e+01 ~ 18.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) [835] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(703,1)
  -> INLINE: (705,18) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (705,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (705,50) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (707,7) SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (558,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (559,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (561,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (562,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (577,15) SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const
    -> INLINE: (585,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (590,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (592,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)
  -> INLINE: (712,25) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (714,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (722,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(706,18)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(706,18)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(706,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(713,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(713,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(715,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(703,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE3sumERKS2_RKNS_4hier3BoxERKNS5_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:703

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     344
            Global    :     104
            Local     :     240
        Regenerable   :      58
        Spilled       :       8
        
    Routine stack
        Variables     :     466 bytes*
            Reads     :      30 [7.71e+00 ~ 5.4%]
            Writes    :      28 [1.57e+00 ~ 1.1%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 0.7%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)) [836] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1)
  -> INLINE: (64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (199,15) SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(79,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(80,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(81,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (40:4) and vdst (40:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (40:4) and vdst (40:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_12SumOperationIdEEE25doArrayDataOperationOnBoxERNS0_9ArrayDataIdEERKS6_RKNS_4hier3BoxERKNSA_9IntVectorEjjjRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     300
            Global    :      96
            Local     :     204
        Regenerable   :       8
        Spilled       :      20
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      50 [3.48e+02 ~ 8.7%]
            Writes    :      29 [2.98e+02 ~ 7.5%]
        Spills        :     112 bytes*
            Reads     :      20 [4.38e+01 ~ 1.1%]
            Writes    :      20 [2.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::unpackStreamAndSum(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::unpackStreamAndSum(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [837] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(580,1)
  -> INDIRECT- (VIRTUAL): (587,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66544_V$b9d.0.772->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (588,38)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.66544_V$b9d.0.772->__vptr_V$b6d_2.45 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (589,62) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (590,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (590,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (590,30) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (590,30) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (590,37) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (591,33) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (591,50) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (591,52) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (592,22) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (593,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (593,18) SAMRAI::pdat::ArrayData<Real>::unpackStreamAndSum(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(969,43) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(970,32) SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(972,4) SAMRAI::pdat::ArrayData<Real>::unpackBufferAndSum(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)
      -> INLINE: (1341,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::SumOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(593,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(593,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between intersect.intersect.intersect.intersect (604:41) and this->d_empty_flag (610:10)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (40:4) and dst_ptr[dat_counter+i0] (40:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (40:4) and dst_ptr[dat_counter+i0] (40:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(580,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE18unpackStreamAndSumERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:580

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     472
            Global    :      99
            Local     :     373
        Regenerable   :      25
        Spilled       :      22
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :     122 [7.69e+02 ~ 8.0%]
            Writes    :      24 [4.76e+02 ~ 5.0%]
        Spills        :     128 bytes*
            Reads     :      29 [1.72e+02 ~ 1.8%]
            Writes    :      28 [6.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(603,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::fill(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(616,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(626,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::fillAll(SAMRAI::pdat::CellData<Real> *, const Real &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(635,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getFromRestart(SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::getFromRestart(SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [842] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(717,1)
  -> DELETED: (723,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (723,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (723,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (723,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (723,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (723,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U101_V$bb4.0.777->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (723,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (725,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (725,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (725,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (725,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (725,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (729,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (729,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (729,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (729,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (729,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (729,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U102_V$bb5.0.777->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (729,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (731,12) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (731,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,12) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,12) SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,8) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U152_V$d82.0.831.47629->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U153_V$d83.0.831.47629->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,25) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U154_V$d84.0.831.47629->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,10) SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1172,14) SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,10) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U156_V$d8a.0.831.47629->__vptr_V$a91 + EXPR_CONV.SI32.I64(25(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,16) SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,31)  EXPR_CONV.SI64.P64(*((SI64*) (this_22944_V$a8d.0.683.47648->__vptr_V$a91 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,37) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (731,51) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (731,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (731,51) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (731,51)  EXPR_CONV.SI64.P64(*((SI64*) (__$U104_V$bb7.0.777->__vptr_V$a91 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (731,51) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(717,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:717

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     937
            Global    :     237
            Local     :     700
        Regenerable   :     350
        Spilled       :       8
        
    Routine stack
        Variables     :     961 bytes*
            Reads     :      78 [3.56e+01 ~ 8.7%]
            Writes    :     126 [5.22e+01 ~ 12.8%]
        Spills        :      16 bytes*
            Reads     :       2 [1.33e-01 ~ 0.0%]
            Writes    :       2 [1.33e-01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::putToRestart(const SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::putToRestart(const SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [843] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(747,1)
  -> INLINE: (752,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (752,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (752,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (752,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (752,52) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (752,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (752,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U10a_V$bca.0.778->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (754,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (754,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (754,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (754,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (754,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (754,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (754,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U10b_V$bcb.0.778->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (756,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (756,12) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (756,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (756,12) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (756,12) SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15c_V$d9d.0.832.34809->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15e_V$d9f.0.832.34809->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15f_V$da0.0.832.34809->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U161_V$da2.0.832.34809->__vptr_V$a91 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22946_V$a92.0.684.34828->__vptr_V$a91 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (756,35) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (756,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (756,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (756,49) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (756,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U10d_V$bcd.0.778->__vptr_V$a91 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (756,49) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(747,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE12putToRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:747

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     357
            Global    :      96
            Local     :     261
        Regenerable   :     123
        Spilled       :       3
        
    Routine stack
        Variables     :      90 bytes*
            Reads     :      25 [1.40e+01 ~ 8.3%]
            Writes    :      19 [2.00e+00 ~ 1.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(316,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *)) [845] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(135,1)
  -> INLINE: (136,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(136,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U11b_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 3  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(135,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:135

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r12]
        
    Routine temporaries
        Total         :      62
            Global    :      25
            Local     :      37
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *const)) [846] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(134,17)
  -> INLINE: (134,17) SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *)
    -> INLINE: (136,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(136,1) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(135,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U11b_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 3  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(134,17):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:134

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      63
            Global    :      25
            Local     :      38
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(148,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(157,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(224,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &)) [851] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(271,1)
  -> INDIRECT- (VIRTUAL): (277,18)  SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const (789)
  -> INLINE: (282,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (282,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (282,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (282,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (283,26) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (285,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (285,27) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (285,54) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (285,56) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (286,22) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (287,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (287,27) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (287,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(282,36)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(287,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(271,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE4copyERKNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:271

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     187
            Global    :      65
            Local     :     122
        Regenerable   :      40
        Spilled       :       7
        
    Routine stack
        Variables     :     273 bytes*
            Reads     :      17 [2.16e+01 ~ 8.2%]
            Writes    :      10 [2.66e+00 ~ 1.0%]
        Spills        :      32 bytes*
            Reads     :      16 [3.75e+00 ~ 1.4%]
            Writes    :       4 [3.75e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)) [852] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1)
  -> INLINE: (64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(79,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(80,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(81,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_13CopyOperationIdEEE25doArrayDataOperationOnBoxERNS0_9ArrayDataIdEERKS6_RKNS_4hier3BoxERKNSA_9IntVectorEjjjRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     297
            Global    :      96
            Local     :     201
        Regenerable   :       8
        Spilled       :      20
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      50 [3.48e+02 ~ 9.1%]
            Writes    :      29 [2.98e+02 ~ 7.8%]
        Spills        :     112 bytes*
            Reads     :      20 [4.38e+01 ~ 1.1%]
            Writes    :      20 [2.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const) [853] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(298,1)
  -> INLINE: (306,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (306,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (306,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (306,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (307,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (308,41) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (308,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (308,70) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (308,72) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (309,19) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (310,29) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (310,31) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (310,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(306,33)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(310,19)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(298,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE5copy2ERNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     175
            Global    :      61
            Local     :     114
        Regenerable   :      35
        Spilled       :       7
        
    Routine stack
        Variables     :     273 bytes*
            Reads     :      17 [2.20e+01 ~ 8.5%]
            Writes    :      10 [2.70e+00 ~ 1.0%]
        Spills        :      56 bytes*
            Reads     :      31 [6.69e+00 ~ 2.6%]
            Writes    :       7 [6.69e+00 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [854] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(330,1)
  -> INDIRECT- (VIRTUAL): (337,24)  SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const (791)
  -> INDIRECT- (VIRTUAL): (343,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70261_V$c28.0.790->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (344,26) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (346,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (346,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (346,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (346,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (347,29) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (349,57)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70261_V$c28.0.790->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (350,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (350,27) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (350,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (354,10) SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)
    -> INLINE: (413,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (415,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48604->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (415,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (416,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48604->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (427,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (428,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48604->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (431,46) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (432,36) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
    -> INLINE: (432,45) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (435,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INDIRECT- (VIRTUAL): (436,87)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48604->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INLINE: (440,69) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (442,44) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (446,26) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (447,36) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (447,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,52) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,34) SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1546,16) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,21) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,33) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,32) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1550,22) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: (454,39) SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const
    -> INLINE: (455,29) SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)
    -> INLINE: (460,29) SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)
      -> INLINE: (210,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (216,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (216,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (460,49) SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const
      -> INLINE: (227,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (233,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (233,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(346,39)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(351,27)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(441,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(452,24) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(459,19) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between this->d_lo->d_dim->d_dim (681:51) and this->d_data[dst_index.dst_index]->_M_ptr->d_array->_M_start[myo (460:29)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1547,60) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(434,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(436,87) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(330,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE4copyERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:330

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     433
            Global    :      99
            Local     :     334
        Regenerable   :      98
        Spilled       :      18
        
    Routine stack
        Variables     :     688 bytes*
            Reads     :      59 [6.30e+02 ~ 6.4%]
            Writes    :      21 [4.98e+01 ~ 0.5%]
        Spills        :      96 bytes*
            Reads     :      27 [2.60e+02 ~ 2.6%]
            Writes    :      17 [2.47e+02 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)) [855] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1)
  -> INLINE: (392,23) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,90) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,102) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (392,105) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (392,134) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (392,162) SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,178) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
  -> INLINE: (392,196) SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (394,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (403,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (411,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (415,55) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(404,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_14TransformationE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:391

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     229
            Global    :      72
            Local     :     157
        Regenerable   :      47
        Spilled       :       7
        
    Routine stack
        Variables     :     418 bytes*
            Reads     :      11 [5.40e+00 ~ 5.9%]
            Writes    :      10 [6.70e-01 ~ 0.7%]
        Spills        :      24 bytes*
            Reads     :       6 [2.30e-01 ~ 0.3%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const) [856] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(364,1)
  -> INDIRECT- (VIRTUAL): (374,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70367_V$c39.0.791->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (374,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (377,43)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70367_V$c39.0.791->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (378,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (378,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (378,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (378,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (379,26) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (380,88)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70367_V$c39.0.791->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (381,29) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (381,31) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (381,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (385,14) SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)
    -> INLINE: (413,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (415,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48506->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (415,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (416,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48506->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (427,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (428,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48506->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (431,46) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (432,36) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
    -> INLINE: (432,45) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (435,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INDIRECT- (VIRTUAL): (436,87)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70340_V$c88.0.802.48506->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INLINE: (440,69) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (442,44) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (446,26) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (447,36) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (447,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,52) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,34) SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1546,16) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,21) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,33) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,32) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1550,22) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: (454,39) SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const
    -> INLINE: (455,29) SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)
    -> INLINE: (460,29) SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)
      -> INLINE: (210,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (216,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (216,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (460,49) SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const
      -> INLINE: (227,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (233,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (233,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(378,36)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(382,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(441,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(452,24) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(459,19) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between this->d_data[src_index.src_index]->_M_ptr (233:12) and dst->d_data[dst_index.dst_index]->_M_ptr->d_array->_M_start[myof (460:29)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1547,60) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(434,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(436,87) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(364,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE5copy2ERNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:364

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     414
            Global    :      92
            Local     :     322
        Regenerable   :      88
        Spilled       :      18
        
    Routine stack
        Variables     :     688 bytes*
            Reads     :      59 [1.79e+03 ~ 6.4%]
            Writes    :      21 [1.39e+02 ~ 0.5%]
        Spills        :      96 bytes*
            Reads     :      22 [4.77e+02 ~ 1.7%]
            Writes    :      13 [4.60e+02 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) [857] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(354,1)
  -> INLINE: (356,18) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (356,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (356,50) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (358,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (363,25) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (365,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (373,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(364,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(364,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(366,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(354,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:354

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     320
            Global    :      95
            Local     :     225
        Regenerable   :      58
        Spilled       :       8
        
    Routine stack
        Variables     :     466 bytes*
            Reads     :      30 [7.71e+00 ~ 5.4%]
            Writes    :      28 [1.57e+00 ~ 1.1%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 0.7%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::SideData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::SideData<Real> *) const) [858] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(510,1)
  -> INLINE: (511,11) SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,22) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,55) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,88) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,123) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,157) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,189) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(510,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE28canEstimateStreamSizeFromBoxEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:510

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getDataStreamSize(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::getDataStreamSize(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::BoxOverlap &) const) [859] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(518,1)
  -> INDIRECT- (VIRTUAL): (523,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70401_V$c40.0.793->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (526,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (526,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (526,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (526,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (527,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (529,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (529,24) SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (530,54)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70401_V$c40.0.793->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(526,52)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(518,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE17getDataStreamSizeERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:518

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      58
            Global    :      28
            Local     :      30
        Regenerable   :      11
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 2.9%]
            Writes    :       4 [3.60e+00 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL842661959__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::packStream(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::packStream(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const) [866] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(551,1)
  -> INDIRECT- (VIRTUAL): (556,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70414_V$c47.0.794->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (556,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (559,52)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70414_V$c47.0.794->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (560,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (560,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (560,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (560,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (561,26) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (562,85)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70414_V$c47.0.794->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (563,24) SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(682,21) std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::empty(const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>> *) const
  -> INLINE: (564,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (564,27) SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const
  -> (569,7) SAMRAI::pdat::SideData<Real>::packWithRotation(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::SideOverlap &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(560,36)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(551,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:551

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      39
            Global    :      17
            Local     :      22
        Regenerable   :       0
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [9.00e-01 ~ 1.4%]
            Writes    :       2 [9.00e-01 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const) [867] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(870,1)
  -> INLINE: (875,26) SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(217,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,25) std::vector<char, std::allocator<char>>::resize(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,32) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(220,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,55) std::vector<char, std::allocator<char>>::operator[](std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,56) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
  -> INLINE: (878,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (879,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (879,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (879,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (879,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (879,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (880,26) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (882,7) SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const
    -> INLINE: (1294,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (884,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (884,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between pack_box.pack_box (606:16) and pack_box.pack_box (606:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between buffer[buf_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffer[buf_counter+i0] (31:4) and src_ptr[dat_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(885,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(885,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(870,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat9ArrayDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier12BoxContainerERKNS6_14TransformationE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:870

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     453
            Global    :     104
            Local     :     349
        Regenerable   :      28
        Spilled       :      22
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :      85 [1.39e+03 ~ 7.8%]
            Writes    :      21 [9.36e+02 ~ 5.2%]
        Spills        :     128 bytes*
            Reads     :      34 [3.40e+02 ~ 1.9%]
            Writes    :      33 [1.36e+02 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::packWithRotation(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::SideOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::packWithRotation(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::SideOverlap &) const) [868] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(578,1)
  -> INLINE: (582,31) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INDIRECT- (VIRTUAL): (584,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70495_V$ca0.0.803->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (584,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (585,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70495_V$ca0.0.803->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (596,24) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INDIRECT- (VIRTUAL): (597,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70495_V$ca0.0.803->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (600,46) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (601,36) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (601,45) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (603,31) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (605,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (605,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (606,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (607,87)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_70495_V$ca0.0.803->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (610,35) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (610,35) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (610,35) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (615,69) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (616,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (616,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (616,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (616,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (616,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (617,44) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (621,26) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (627,27) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (627,27) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (627,37) SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1546,16) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,21) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,33) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: (559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,32) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: (537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1550,22) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (629,42) SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const
  -> INLINE: (630,32) SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)
  -> INLINE: (633,28) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (633,49) SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const
    -> INLINE: (227,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
    -> INLINE: (233,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (233,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (639,17) SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(265,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(266,10) SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)
      -> INLINE: (399,12) SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const
      -> INLINE: (403,25) std::vector<char, std::allocator<char>>::insert<const char *, void>(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::iterator, const char *, const char *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (403,32) std::vector<char, std::allocator<char>>::end(std::vector<char, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (406,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
  -> INLINE: (639,29) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (640,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(611,35)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(611,35)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(611,35)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(616,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(622,26)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(623,16)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(628,27)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(627,27)
         remark #15523: loop was not vectorized: loop control variable buf_count was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(634,49)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(634,49)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1547,60) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(628,37)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(628,27)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(605,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(607,87) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(567,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(578,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE16packWithRotationERNS_4tbox13MessageStreamERKNS0_11SideOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:578

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     348
            Global    :      90
            Local     :     258
        Regenerable   :      77
        Spilled       :      21
        
    Routine stack
        Variables     :     632 bytes*
            Reads     :      40 [8.10e+03 ~ 12.3%]
            Writes    :      27 [1.96e+03 ~ 3.0%]
        Spills        :     128 bytes*
            Reads     :      46 [1.67e+03 ~ 2.5%]
            Writes    :      24 [6.11e+02 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_deallocate(std::_Vector_base<char, std::allocator<char>> *, std::_Vector_base<char, std::allocator<char>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_get_Tp_allocator(std::_Vector_base<char, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::unpackStream(SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::unpackStream(SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [874] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(649,1)
  -> INDIRECT- (VIRTUAL): (654,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70518_V$c4e.0.795->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (655,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (655,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (655,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (655,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (656,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (657,82)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.70518_V$c4e.0.795->__vptr_V$b6d_2.46 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (658,21) SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(682,21) std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::empty(const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>> *) const
  -> INLINE: (659,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (659,24) SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(935,32) SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(938,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,7) SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)
      -> INLINE: (1313,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,34) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(655,52)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between this->d_empty_flag (606:16) and this->d_empty_flag (599:11)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (31:4) and dst_ptr[dat_counter+i0] (31:4)

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 8  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            <Remainder>
               remark #25436: completely unrolled by 7  
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(649,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE12unpackStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:649

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     373
            Global    :      89
            Local     :     284
        Regenerable   :      17
        Spilled       :      28
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :      38 [1.56e+02 ~ 6.3%]
            Writes    :      16 [1.23e+02 ~ 4.9%]
        Spills        :     168 bytes*
            Reads     :      30 [5.07e+01 ~ 2.0%]
            Writes    :      32 [2.54e+01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getFromRestart(SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::getFromRestart(SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [875] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(863,1)
  -> DELETED: (868,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (868,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (868,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (868,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (868,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (868,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U120_V$c68.0.800->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (868,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (870,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (870,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (870,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (870,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (870,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (874,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (874,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (874,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U121_V$c69.0.800->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (874,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (876,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (876,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (877,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (877,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (877,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (877,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (878,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (879,22) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,44) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,25) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,37) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (880,51)  EXPR_CONV.SI64.P64(*((SI64*) (__$U127_V$c78.0.800->__vptr_V$a91 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (881,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (881,21) SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (882,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(877,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(863,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:863

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     512
            Global    :     124
            Local     :     388
        Regenerable   :     186
        Spilled       :       9
        
    Routine stack
        Variables     :     502 bytes*
            Reads     :      43 [3.36e+01 ~ 8.3%]
            Writes    :      69 [5.52e+01 ~ 13.6%]
        Spills        :      32 bytes*
            Reads     :       4 [5.82e-01 ~ 0.1%]
            Writes    :       4 [5.82e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [876] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1)
  -> DELETED: (1200,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1200,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1200,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1200,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1200,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1200,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U152_V$d82.0.831->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1200,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1202,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1206,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1206,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1206,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1206,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1206,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1206,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U153_V$d83.0.831->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1206,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1207,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1207,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1207,25) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1207,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1207,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1207,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U154_V$d84.0.831->__vptr_V$a91 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1207,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1208,10) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1208,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1208,10) SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1172,14) SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
  -> INLINE: (1208,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1208,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1208,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1208,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U156_V$d8a.0.831->__vptr_V$a91 + EXPR_CONV.SI32.I64(25(SI32)) * 8(I64))))
  -> INLINE: (1208,39) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1215,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (1215,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1215,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1215,16) SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,31)  EXPR_CONV.SI64.P64(*((SI64*) (this_22944_V$a8d.0.683.13397->__vptr_V$a91 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (1215,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1215,26) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1215,26) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:1197

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     525
            Global    :     130
            Local     :     395
        Regenerable   :     194
        Spilled       :       8
        
    Routine stack
        Variables     :     517 bytes*
            Reads     :      46 [1.81e+01 ~ 7.5%]
            Writes    :      68 [2.91e+01 ~ 12.2%]
        Spills        :      16 bytes*
            Reads     :       2 [1.33e-01 ~ 0.1%]
            Writes    :       2 [1.33e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::putToRestart(const SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::putToRestart(const SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [877] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(899,1)
  -> INLINE: (904,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (904,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (904,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (904,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (904,52) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (904,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (904,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U12a_V$c7e.0.801->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (906,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (906,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (906,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (906,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (906,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (906,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (906,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U12b_V$c7f.0.801->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> (908,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (908,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (909,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (909,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (909,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (909,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (910,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (911,22) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,44) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,25) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,37) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (912,51)  EXPR_CONV.SI64.P64(*((SI64*) (__$U12e_V$c84.0.801->__vptr_V$a91 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (913,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (913,21) SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15c_V$d9d.0.832.34706->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15e_V$d9f.0.832.34706->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15f_V$da0.0.832.34706->__vptr_V$a91 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U161_V$da2.0.832.34706->__vptr_V$a91 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22946_V$a92.0.684.34725->__vptr_V$a91 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (914,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (915,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(909,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(899,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE12putToRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:899

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     430
            Global    :     107
            Local     :     323
        Regenerable   :     144
        Spilled       :       6
        
    Routine stack
        Variables     :     140 bytes*
            Reads     :      34 [5.42e+01 ~ 10.1%]
            Writes    :      31 [3.22e+01 ~ 6.0%]
        Spills        :      24 bytes*
            Reads     :      31 [4.72e+00 ~ 0.9%]
            Writes    :       3 [2.96e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(409,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(63,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(105,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(171,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(178,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(185,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(217,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(247,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(284,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(438,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(450,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copyDepth(SAMRAI::pdat::ArrayData<Real> *, unsigned int, const SAMRAI::pdat::ArrayData<Real> &, unsigned int, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copyDepth(SAMRAI::pdat::ArrayData<Real> *, unsigned int, const SAMRAI::pdat::ArrayData<Real> &, unsigned int, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(475,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(549,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(749,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(761,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(929,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackStreamAndSum(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackStreamAndSum(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(966,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1007,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::fillAll(SAMRAI::pdat::ArrayData<Real> *, const Real &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1037,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::fill(SAMRAI::pdat::ArrayData<Real> *, const Real &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1047,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1231,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1250,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1287,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1306,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackBufferAndSum(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackBufferAndSum(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1334,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(194,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CopyOperation.cpp(30,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SumOperation.cpp(35,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::SumOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::SumOperation<Real> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [1067] <compiler generated>
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN6SAMRAI4pdat8CellDataIdE6t_copyE()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(38,46) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      11
            Local     :      13
        Regenerable   :      16
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti___ZN6SAMRAI4pdat8CellDataIdE6t_copyE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN6SAMRAI4pdat8CellDataIdE6t_copyE()) <compiler generated>

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::isInitialized(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::isInitialized(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(164,1)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Logger::logWarning(SAMRAI::tbox::Logger *, const std::string &, const std::string &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Logger::logWarning(SAMRAI::tbox::Logger *, const std::string &, const std::string &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Logger.h(137,4)

===========================================================================
