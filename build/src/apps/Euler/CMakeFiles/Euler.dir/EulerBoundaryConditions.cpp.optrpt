Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: operator<<(std::ostream &, const NODE_BDRY_LOC_2D::TYPE &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (operator<<(std::ostream &, const NODE_BDRY_LOC_2D::TYPE &)) /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(158,1)

===========================================================================

Begin optimization report for: FlowModel::getFlowModelBasicUtilities(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::getFlowModelBasicUtilities(const FlowModel *) const) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(159,9)

===========================================================================

Begin optimization report for: FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(186,9)

===========================================================================

Begin optimization report for: EulerBoundaryConditions::EulerBoundaryConditions(EulerBoundaryConditions *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::EulerBoundaryConditions(EulerBoundaryConditions *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)) [6] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(11,26)
  -> (11,26) EulerBoundaryConditions::EulerBoundaryConditions(EulerBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(11,26):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditionsC2ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKN10FLOW_MODEL4TYPEERKS7_I9FlowModelERKS7_INS3_8DatabaseEERKb] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:11

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::EulerBoundaryConditions(EulerBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::EulerBoundaryConditions(EulerBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)) [7] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(26,1)
  -> INLINE: (11,26) std::shared_ptr<EulerSpecialBoundaryConditions>::shared_ptr(std::shared_ptr<EulerSpecialBoundaryConditions> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (11,26) std::shared_ptr<EulerSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<EulerSpecialBoundaryConditions> *)
  -> (11,26) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,26) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,26) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,26) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,26) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,26) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (20,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (21,24) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (23,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (23,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
  -> INLINE: (25,22) std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (25,22) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (30,5) EulerBoundaryConditions::setDefaultBoundaryConditions(EulerBoundaryConditions *)
  -> (32,38) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (33,47) std::__shared_ptr<SAMRAI::geom::CartesianGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::geom::CartesianGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (35,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (35,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (37,21) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (44,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (44,23) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (44,23) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (44,23) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (46,30) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (51,29) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (51,29) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (51,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1df_V$1137.0.997->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> DELETED: (53,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (53,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,38) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,38) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,62) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (53,81) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (53,81)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e3_V$113b.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (53,81) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (53,81) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (55,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (57,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (57,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (59,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (59,54) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,54) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,78) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (60,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1ea_V$1147.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (60,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (60,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (60,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (60,92) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (60,92) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (63,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (65,42) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (65,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (65,66) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (65,85) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (65,85) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (65,85) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (65,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f0_V$1150.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (67,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (67,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (69,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (69,54) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,54) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,78) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (70,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f5_V$1157.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (70,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (70,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (70,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (70,92) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (70,92) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (73,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (75,42) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (75,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (75,66) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (75,85) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (75,85) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (75,85) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (75,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1fb_V$115e.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (76,42) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (76,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (76,66) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (76,85) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (76,85) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (76,85) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (76,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1fc_V$115f.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (78,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (78,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (80,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (80,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (80,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (80,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (80,54) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (80,54) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (80,78) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (81,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U201_V$1166.0.997->__vptr_V$1140 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (81,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,92) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,92) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (84,9) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INLINE: (90,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (92,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (92,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (93,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (96,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (106,46) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (111,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U205_V$116b.0.997->__vptr_V$160 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (112,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (113,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (115,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (115,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (116,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (119,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (122,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (122,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (123,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (126,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (138,46) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (145,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U206_V$116e.0.997->__vptr_V$160 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (146,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (146,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (147,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (149,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (149,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (150,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (153,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (156,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (156,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (157,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (160,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (163,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (163,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (164,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (167,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (181,46) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (190,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U209_V$1175.0.997->__vptr_V$160 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (191,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (191,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (191,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (198,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (202,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (202,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (203,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (203,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (205,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (207,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (211,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (214,25) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (214,27) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (214,27) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (214,27) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (218,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (218,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (219,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (219,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (221,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (223,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (229,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (229,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (230,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (230,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (232,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (234,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (236,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (238,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (241,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (243,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (244,50) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (245,52) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (245,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20c_V$1182.0.997->__vptr_V$160 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (247,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (249,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (251,56) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (254,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (256,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (256,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (256,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (256,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (256,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (256,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (256,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (256,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (256,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (256,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (256,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (256,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (256,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (256,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (256,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (256,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (256,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (256,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (265,5) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (266,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (269,25) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (269,27) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (269,27) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (269,27) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (273,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (273,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (274,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (274,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (276,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (278,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (284,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (284,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (285,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (285,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (287,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (289,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (291,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (293,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (295,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (297,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (300,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (302,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (303,50) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (304,52) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (304,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U212_V$1194.0.997->__vptr_V$160 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (306,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (308,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (310,56) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (313,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (315,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (315,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (315,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (315,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (315,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (315,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (315,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (315,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (315,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (315,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (315,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (315,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (315,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (315,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (315,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (315,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (315,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (315,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (327,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (327,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (328,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (328,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (330,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (332,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (334,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (336,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (338,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (340,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (343,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (345,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (346,50) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (347,52) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (347,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U216_V$119c.0.997->__vptr_V$160 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
  -> INLINE: (349,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (351,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (353,56) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (356,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (358,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (358,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (358,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (358,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (358,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (358,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (358,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (358,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (358,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (358,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (358,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (358,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (358,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (358,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (358,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (358,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (358,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (358,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (366,5) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (368,41) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (368,41) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (368,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (368,41) std::__shared_ptr<EulerSpecialBoundaryConditions, __gnu_cxx::_S_atomic>::reset<EulerSpecialBoundaryConditions>(std::__shared_ptr<EulerSpecialBoundaryConditions, __gnu_cxx::_S_atomic> *, EulerSpecialBoundaryConditions *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<EulerSpecialBoundaryConditions, __gnu_cxx::_S_atomic>::__shared_ptr<EulerSpecialBoundaryConditions>(std::__shared_ptr<EulerSpecialBoundaryConditions, __gnu_cxx::_S_atomic> *, EulerSpecialBoundaryConditions *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<EulerSpecialBoundaryConditions *>(std::__shared_count<__gnu_cxx::_S_atomic> *, EulerSpecialBoundaryConditions *)
        -> (456,8) EulerSpecialBoundaryConditions::~EulerSpecialBoundaryConditions(EulerSpecialBoundaryConditions *)
  -> INLINE: (369,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (369,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (369,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (374,9) EulerSpecialBoundaryConditions::EulerSpecialBoundaryConditions(EulerSpecialBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(35,33)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(35,33)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(35,33)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(35,33)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(57,73)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(67,73)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(78,73)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(94,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(117,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(124,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(151,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(158,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(165,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(200,9)
   remark #25427: Loop Statements Reordered
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (203:37) and this[i] (203:37)
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(216,9)
   remark #25427: Loop Statements Reordered
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (219:37) and this[i] (219:37)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(227,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(245,52) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(271,9)
   remark #25427: Loop Statements Reordered
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (274:37) and this[i] (274:37)
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(282,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(304,52) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(325,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(347,52) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(26,1):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditionsC1ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKN10FLOW_MODEL4TYPEERKS7_I9FlowModelERKS7_INS3_8DatabaseEERKb] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:26

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :    2076
            Global    :     493
            Local     :    1583
        Regenerable   :     706
        Spilled       :      37
        
    Routine stack
        Variables     :    1848 bytes*
            Reads     :     180 [4.13e+01 ~ 5.4%]
            Writes    :     233 [3.17e+01 ~ 4.1%]
        Spills        :     232 bytes*
            Reads     :      71 [1.88e+01 ~ 2.5%]
            Writes    :      32 [2.27e+01 ~ 3.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_move_assign(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&, std::true_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(1363,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb1EE] /usr/include/c++/4.8.5/bits/stl_vector.h:1363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      11
            Local     :      15
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :       3 [3.00e+00 ~ 6.6%]
            Writes    :       3 [8.35e-01 ~ 1.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_emplace_back_aux<const std::vector<int, std::allocator<int>>::value_type &>(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIiSaIiEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_get_Tp_allocator(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL55de45a49__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_S_construct<char *>(char *, char *, const std::allocator<char> &, std::forward_iterator_tag)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.tcc(126,7):remark #34051: REGISTER ALLOCATION : [_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag] /usr/include/c++/4.8.5/bits/basic_string.tcc:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_move_assign(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&, std::true_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(1363,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE] /usr/include/c++/4.8.5/bits/stl_vector.h:1363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      11
            Local     :      15
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :       3 [3.00e+00 ~ 6.6%]
            Writes    :       3 [8.35e-01 ~ 1.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_release(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(138,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r13-r14]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI26FlowModelBoundaryUtilitiesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      13
            Global    :      10
            Local     :       3
        Regenerable   :       0
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.3%]
            Writes    :       3 [2.96e+00 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4geom21CartesianGridGeometryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI9FlowModelED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EulerSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<EulerSpecialBoundaryConditions> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI30EulerSpecialBoundaryConditionsED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerSpecialBoundaryConditions::~EulerSpecialBoundaryConditions(EulerSpecialBoundaryConditions *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerSpecialBoundaryConditions::~EulerSpecialBoundaryConditions(EulerSpecialBoundaryConditions *)) [41] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerSpecialBoundaryConditions.hpp(22,7)
  -> INLINE: (22,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (22,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (22,7) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (22,7) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerSpecialBoundaryConditions.hpp(22,7):remark #34051: REGISTER ALLOCATION : [_ZN30EulerSpecialBoundaryConditionsD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerSpecialBoundaryConditions.hpp:22

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      57
            Global    :      28
            Local     :      29
        Regenerable   :      15
        Spilled       :       3
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__enable_shared_from_this_helper<__gnu_cxx::_S_atomic>(const std::__shared_count<__gnu_cxx::_S_atomic> &, ...)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(724,5):remark #34051: REGISTER ALLOCATION : [_ZSt32__enable_shared_from_this_helperILN9__gnu_cxx12_Lock_policyE2EEvRKSt14__shared_countIXT_EEz] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:724

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerSpecialBoundaryConditions::EulerSpecialBoundaryConditions(EulerSpecialBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerSpecialBoundaryConditions::EulerSpecialBoundaryConditions(EulerSpecialBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &)) [43] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerSpecialBoundaryConditions.hpp(38,9)
  -> INLINE: (32,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (35,33) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (37,30) std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerSpecialBoundaryConditions.hpp(38,9):remark #34051: REGISTER ALLOCATION : [_ZN30EulerSpecialBoundaryConditionsC1ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKN10FLOW_MODEL4TYPEERKS7_I9FlowModelE] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerSpecialBoundaryConditions.hpp:38

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      69
            Global    :      25
            Local     :      44
        Regenerable   :      11
        Spilled       :       6
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)) [44] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4)
  -> INLINE: (1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector6getOneERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::~EulerBoundaryConditions(EulerBoundaryConditions *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::~EulerBoundaryConditions(EulerBoundaryConditions *)) [45] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(34,36)
  -> INLINE: (34,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,37) std::shared_ptr<EulerSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<EulerSpecialBoundaryConditions> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(35,37)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(35,37)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(35,37)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(34,36):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditionsD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp:34

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     120
            Global    :      47
            Local     :      73
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::~_Vector_base(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~_Vector_base(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::~EulerBoundaryConditions(EulerBoundaryConditions *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::~EulerBoundaryConditions(EulerBoundaryConditions *const)) [48] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(34,9)
  -> INLINE: (34,9) EulerBoundaryConditions::~EulerBoundaryConditions(EulerBoundaryConditions *)
    -> INLINE: (34,37) std::shared_ptr<EulerSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<EulerSpecialBoundaryConditions> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(35,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(35,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(35,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp(34,9):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditionsD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Euler/EulerBoundaryConditions.hpp:34

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     121
            Global    :      47
            Local     :      74
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::printClassData(const EulerBoundaryConditions *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::printClassData(const EulerBoundaryConditions *, std::ostream &) const) [49] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(383,1)
  -> (385,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (385,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21a_V$11ae.0.999->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (385,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (387,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (388,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (390,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (392,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (392,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (394,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (394,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (396,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (398,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (399,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (399,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (400,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (401,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (403,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (404,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (404,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (405,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (406,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (408,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (409,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (409,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (410,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (413,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (415,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (415,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (417,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (419,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (420,17) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (420,80) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (421,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (422,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (424,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (425,17) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (425,80) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (426,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (427,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (429,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (430,17) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (430,80) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (431,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (432,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (434,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (435,17) operator<<(std::ostream &, const NODE_BDRY_LOC_2D::TYPE &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(159,58) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::map(std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(161,17) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::size(const std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(164,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(164,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(165,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(165,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(166,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(166,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(167,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(167,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(171,15) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(171,25) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, const std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (435,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (436,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (439,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (441,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (441,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (443,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (445,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (446,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (446,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (447,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (449,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (451,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (452,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (452,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (453,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (455,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (457,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (458,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (458,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (459,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (461,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (463,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (463,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (465,59) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (465,63) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (465,65) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> (467,24) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (468,30) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (469,29) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (470,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (470,55) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (470,59) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (474,28) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (475,28) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (475,59) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (475,63) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (478,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (483,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (485,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (485,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (487,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (489,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (490,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (490,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (491,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (492,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (494,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (495,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (495,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (496,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (497,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (499,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (500,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (500,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (501,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (502,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (504,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (505,16) operator<<(std::ostream &, NODE_BDRY_LOC_3D::TYPE)
  -> INLINE: (505,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (506,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (509,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (511,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (511,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (513,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (515,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (516,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (516,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (517,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (518,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (520,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (521,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (521,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (522,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (523,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (525,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (526,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (526,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (527,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (528,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (530,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (531,16) operator<<(std::ostream &, EDGE_BDRY_LOC_3D::TYPE)
  -> INLINE: (531,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (532,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (535,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (538,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (538,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (540,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (542,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (543,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (543,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (544,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (545,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (547,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (548,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (548,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (549,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (550,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (552,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (553,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (553,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (554,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (556,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (558,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (558,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (560,59) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (560,63) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (560,65) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> (562,24) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (563,30) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (564,29) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (565,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (565,55) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (565,59) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (569,28) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (570,28) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (570,59) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (570,63) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (573,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(394,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(415,71)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(435,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(435,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(441,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(463,73)
      remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(472,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(474,28) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(485,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(511,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(538,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(558,73)
      remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(567,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(569,28) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(392,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(383,1):remark #34051: REGISTER ALLOCATION : [_ZNK23EulerBoundaryConditions14printClassDataERSo] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:383

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r12-r15 zmm0]
        
    Routine temporaries
        Total         :     884
            Global    :     311
            Local     :     573
        Regenerable   :     195
        Spilled       :      17
        
    Routine stack
        Variables     :     106 bytes*
            Reads     :      19 [1.08e+01 ~ 1.3%]
            Writes    :      14 [4.68e+00 ~ 0.5%]
        Spills        :      88 bytes*
            Reads     :      35 [3.98e+01 ~ 4.6%]
            Writes    :      17 [1.10e+01 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_2D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)) [63] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(45,1)
  -> INLINE: (46,58) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::map(std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,17) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::size(const std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (51,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (51,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (52,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (52,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (54,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (54,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (55,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (55,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (56,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (56,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (57,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (57,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (58,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (58,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (59,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (59,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (60,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (60,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (61,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (61,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (62,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (62,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (63,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (63,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (64,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (65,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (65,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (66,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (66,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (67,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (67,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (68,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (68,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (69,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (69,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (70,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (70,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (74,19) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (74,29) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, const std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(53,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(54,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(55,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(75,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(45,1):remark #34051: REGISTER ALLOCATION : [_ZlsRSoN9BDRY_COND5BASIC4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp:45

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :     364
            Global    :     101
            Local     :     263
        Regenerable   :     163
        Spilled       :       3
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       9 [1.54e+00 ~ 1.0%]
            Writes    :      30 [7.87e+00 ~ 5.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS4_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN9BDRY_COND5BASIC4TYPEESsSt4lessIS2_ESaISt4pairIKS2_SsEEEixEOS2_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: operator<<(std::ostream &, EDGE_BDRY_LOC_3D::TYPE)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (operator<<(std::ostream &, EDGE_BDRY_LOC_3D::TYPE)) [72] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(179,1)
  -> INLINE: (180,58) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::map(std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,17) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::size(const std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (185,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (185,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (186,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (186,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (187,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (187,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (189,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (189,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (190,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (190,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (191,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (191,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (192,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (192,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (193,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (193,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (194,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (194,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (195,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (195,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (196,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (196,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (200,19) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (200,29) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, const std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(187,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(188,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(189,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(201,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(179,1):remark #34051: REGISTER ALLOCATION : [_ZlsRSoN16EDGE_BDRY_LOC_3D4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:179

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :     292
            Global    :      85
            Local     :     207
        Regenerable   :     115
        Spilled       :       3
        
    Routine stack
        Variables     :     144 bytes*
            Reads     :       9 [1.54e+00 ~ 1.1%]
            Writes    :      22 [6.11e+00 ~ 4.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16EDGE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: operator<<(std::ostream &, NODE_BDRY_LOC_3D::TYPE)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (operator<<(std::ostream &, NODE_BDRY_LOC_3D::TYPE)) [79] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(208,1)
  -> INLINE: (209,58) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::map(std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (211,17) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::size(const std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (214,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (214,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (215,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (215,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (216,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (216,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (217,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (217,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (218,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (218,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (219,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (219,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (220,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (220,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (221,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (221,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (225,19) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (225,29) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, const std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(216,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(217,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(218,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(226,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(208,1):remark #34051: REGISTER ALLOCATION : [_ZlsRSoN16NODE_BDRY_LOC_3D4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:208

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :     256
            Global    :      77
            Local     :     179
        Regenerable   :      91
        Spilled       :       3
        
    Routine stack
        Variables     :     128 bytes*
            Reads     :       9 [1.54e+00 ~ 1.2%]
            Writes    :      18 [5.23e+00 ~ 4.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::putToRestart(const EulerBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::putToRestart(const EulerBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [86] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(588,1)
  -> (590,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (590,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U222_V$11d7.0.1000->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (590,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (592,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (592,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (592,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (592,34) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (592,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (592,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (592,62)  EXPR_CONV.SI64.P64(*((SI64*) (__$U225_V$11da.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (594,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (594,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (596,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (596,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (598,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (599,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (599,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (599,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (599,84) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (599,84) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INDIRECT- (VIRTUAL): (600,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U22b_V$11e2.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (600,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (600,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (603,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (605,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (605,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (605,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (605,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (605,66)  EXPR_CONV.SI64.P64(*((SI64*) (__$U230_V$11e7.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (605,66) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (605,66) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (607,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (607,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (609,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (610,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,84) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,84) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INDIRECT- (VIRTUAL): (611,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U234_V$11ec.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (611,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (614,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (616,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (616,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (616,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (616,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (617,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U239_V$11f1.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (617,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (617,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (619,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (619,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (619,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (619,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (620,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23a_V$11f2.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (620,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (620,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (622,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (622,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (624,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (625,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (625,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (625,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (625,84) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (625,84) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (626,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (626,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (626,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (626,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (626,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23e_V$11f7.0.1000->__vptr_V$1140 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(596,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(607,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(622,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(594,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(588,1):remark #34051: REGISTER ALLOCATION : [_ZNK23EulerBoundaryConditions12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:588

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     551
            Global    :     144
            Local     :     407
        Regenerable   :     195
        Spilled       :       6
        
    Routine stack
        Variables     :     169 bytes*
            Reads     :      45 [3.14e+01 ~ 7.3%]
            Writes    :      27 [1.17e+01 ~ 2.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::readDirichletBoundaryDataEntry(EulerBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::readDirichletBoundaryDataEntry(EulerBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)) [87] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(645,1)
  -> INLINE: (650,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (650,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (650,29) EulerBoundaryConditions::readPrimitiveDataEntry(std::vector<double, std::allocator<double>> *, EulerBoundaryConditions *, std::shared_ptr<SAMRAI::tbox::Database> *, const std::string &)
  -> (650,52) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (650,52) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (653,32) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (653,32) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (654,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (654,21) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (655,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (655,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (657,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (657,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> DELETED: (662,25) std::allocator<double>::~allocator(std::allocator<double> *)
  -> DELETED: (662,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (662,29) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (662,29) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (662,29) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (662,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (663,26) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (663,26) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (664,11) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (664,21) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (665,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (665,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (667,15) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (671,17) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (672,78) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (672,80) FlowModel::getFlowModelBasicUtilities(const FlowModel *) const
  -> INLINE: (672,80) std::shared_ptr<FlowModelBasicUtilities>::shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *, const std::shared_ptr<FlowModelBasicUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (672,80) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
  -> INLINE: (673,20) std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (673,78)  EXPR_CONV.SI64.P64(*((SI64*) (__$U241_V$11fe.0.1001->__vptr_V$11f + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (676,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (676,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (676,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U242_V$11ff.0.1001->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (678,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,5) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (681,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (681,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (683,51) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (683,55) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (683,57) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (687,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (687,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (687,89) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (693,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (696,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (696,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (698,51) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (698,55) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (698,57) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (702,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (702,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (702,89) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (708,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (711,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (711,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (713,51) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (713,55) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (713,57) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (717,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (717,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (717,89) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(655,46)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(662,29)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(662,29)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(662,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(665,46)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(681,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(685,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ((this+vi*24)->_M_start)[bdry_location_index*var_depth+di] (687:49) and Q.Q.Q.Q[count] (687:49)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(685,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(696,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(700,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ((this+vi*24)->_M_start)[bdry_location_index*var_depth+di] (702:49) and Q.Q.Q.Q[count] (702:49)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(700,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(711,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(715,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ((this+vi*24)->_M_start)[bdry_location_index*var_depth+di] (717:49) and Q.Q.Q.Q[count] (717:49)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(715,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(678,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(645,1):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditions30readDirichletBoundaryDataEntryERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEERSsi] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:645

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     411
            Global    :     136
            Local     :     275
        Regenerable   :      68
        Spilled       :      12
        
    Routine stack
        Variables     :     172 bytes*
            Reads     :      69 [8.24e+01 ~ 7.5%]
            Writes    :      36 [3.60e+01 ~ 3.3%]
        Spills        :      56 bytes*
            Reads     :      22 [2.64e+01 ~ 2.4%]
            Writes    :       9 [1.03e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_get_Tp_allocator(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPKdSaIS1_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_get_Tp_allocator(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::size(const std::vector<Real *, std::allocator<Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPdSaIS0_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const) [94] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(63,1)
  -> INLINE: (64,44) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (65,7) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
  -> INLINE: (65,7) std::static_pointer_cast<SAMRAI::pdat::CellDataFactory<Real>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,10) SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h:(155,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (68,4) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (68,23) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (68,25) SAMRAI::pdat::CellDataFactory<Real>::getDepth(const SAMRAI::pdat::CellDataFactory<Real> *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(63,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat12CellVariableIdE8getDepthEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:63

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      42
            Global    :      20
            Local     :      22
        Regenerable   :       7
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [1.35e+00 ~ 2.6%]
            Writes    :       4 [2.00e+00 ~ 3.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat15CellDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_deallocate(std::_Vector_base<Real *, std::allocator<Real *>> *, std::_Vector_base<Real *, std::allocator<Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE13_M_deallocateEPS0_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_deallocate(std::_Vector_base<const Real *, std::allocator<const Real *>> *, std::_Vector_base<const Real *, std::allocator<const Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::readPrimitiveDataEntry(std::vector<double, std::allocator<double>> *, EulerBoundaryConditions *, std::shared_ptr<SAMRAI::tbox::Database> *, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::readPrimitiveDataEntry(std::vector<double, std::allocator<double>> *, EulerBoundaryConditions *, std::shared_ptr<SAMRAI::tbox::Database> *, const std::string &)) [102] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1136,1)
  -> (1140,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1140,25) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (1142,64) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (1142,95) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INDIRECT- (VIRTUAL): (1142,95)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25d_V$1257.0.1004->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> INLINE: (1144,64) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1144,64) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1146,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1146,46) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INDIRECT- (VIRTUAL): (1146,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25e_V$125b.0.1004->__vptr_V$1140 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1148,63) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1148,100) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> (1148,100) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INDIRECT- (VIRTUAL): (1148,100)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25f_V$125c.0.1004->__vptr_V$1140 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (1150,78) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1154,36) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1154,71) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1156,9) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1159,13) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1159,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1159,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1159,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1159,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1159,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1159,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1159,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1159,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1159,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1159,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1159,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1159,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1159,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1159,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1159,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1159,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1159,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1159,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1169,5) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1144,64)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1152,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1169,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1136,1):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditions22readPrimitiveDataEntryESt10shared_ptrIN6SAMRAI4tbox8DatabaseEERKSs] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:1136

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     409
            Global    :     108
            Local     :     301
        Regenerable   :     139
        Spilled       :      16
        
    Routine stack
        Variables     :     470 bytes*
            Reads     :      32 [5.68e+01 ~ 6.5%]
            Writes    :      54 [1.53e+02 ~ 17.6%]
        Spills        :      80 bytes*
            Reads     :      22 [1.22e+01 ~ 1.4%]
            Writes    :      13 [5.80e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_deallocate(std::_Vector_base<double, std::allocator<double>> *, std::_Vector_base<double, std::allocator<double>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_get_Tp_allocator(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIdSaIdEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::~_Vector_base(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::~_Vector_base(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI23FlowModelBasicUtilitiesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::readNeumannBoundaryDataEntry(EulerBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::readNeumannBoundaryDataEntry(EulerBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)) [126] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(736,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(736,1):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditions28readNeumannBoundaryDataEntryERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEERSsi] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:736

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::setPhysicalBoundaryConditions(EulerBoundaryConditions *, SAMRAI::hier::Patch &, double, const SAMRAI::hier::IntVector &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::setPhysicalBoundaryConditions(EulerBoundaryConditions *, SAMRAI::hier::Patch &, double, const SAMRAI::hier::IntVector &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [127] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(754,1)
  -> (758,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (758,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24b_V$1227.0.1003->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (758,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (761,21) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INDIRECT- (VIRTUAL): (761,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24c_V$1228.0.1003->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (761,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (764,21) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INDIRECT- (VIRTUAL): (764,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24d_V$1229.0.1003->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (764,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (766,17) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (766,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24e_V$122a.0.1003->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> INLINE: (769,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (769,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (769,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24f_V$122b.0.1003->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(23(SI32)) * 8(I64))))
  -> INLINE: (776,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (776,23) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (776,23) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (776,23) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (778,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (784,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (784,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (785,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (791,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (793,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (793,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (796,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (797,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (801,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (804,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (804,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (807,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (808,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (812,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (827,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (834,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U253_V$1234.0.1003->__vptr_V$160 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (835,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (836,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (842,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (842,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (843,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (849,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (849,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (851,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (851,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (855,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (859,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (862,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (862,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (865,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (866,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (870,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (885,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (892,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U256_V$123d.0.1003->__vptr_V$160 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> (899,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (899,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (900,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (903,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (906,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (906,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (908,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (908,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (912,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (916,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (919,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (919,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (922,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (923,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (927,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (942,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (949,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U257_V$123e.0.1003->__vptr_V$160 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (950,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (950,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (951,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (957,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (957,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (958,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (961,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (964,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (964,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (966,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (966,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (969,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (970,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (974,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (977,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (977,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (980,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (981,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (985,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1000,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1007,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25a_V$1247.0.1003->__vptr_V$160 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> (1013,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (1013,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (1014,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1017,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1020,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1020,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1022,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1022,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1025,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1026,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1030,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1033,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1033,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1036,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1037,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1041,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1056,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1063,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25b_V$1248.0.1003->__vptr_V$160 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> (1069,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (1069,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (1070,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1073,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1076,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1076,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1078,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1078,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1081,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1082,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1086,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1089,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1089,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1092,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1093,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1097,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1112,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1119,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25c_V$1249.0.1003->__vptr_V$160 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> INLINE: (1120,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1120,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1120,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1122,40) std::__shared_ptr<EulerSpecialBoundaryConditions, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EulerSpecialBoundaryConditions, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1128,17) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1128,17) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1128,17) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1128,17) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1128,17) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1128,17) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1128,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U252_V$122e.0.1003->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(786,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(791,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(844,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(849,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(901,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(906,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(959,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(964,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1015,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1020,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1071,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1076,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1128,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1128,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1128,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1128,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(754,1):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditions29setPhysicalBoundaryConditionsERN6SAMRAI4hier5PatchEdRKNS1_9IntVectorERKSt10shared_ptrINS1_15VariableContextEE] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:754

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     742
            Global    :     185
            Local     :     557
        Regenerable   :     169
        Spilled       :      22
        
    Routine stack
        Variables     :     302 bytes*
            Reads     :     139 [7.91e+01 ~ 11.2%]
            Writes    :      54 [1.27e+01 ~ 1.8%]
        Spills        :     128 bytes*
            Reads     :      60 [2.21e+01 ~ 3.1%]
            Writes    :      16 [5.08e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::~_Vector_base(std::_Vector_base<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_deallocate(std::_Vector_base<int, std::allocator<int>> *, std::_Vector_base<int, std::allocator<int>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8-r9 r14-r15]
        
    Routine temporaries
        Total         :      22
            Global    :      13
            Local     :       9
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 5.0%]
            Writes    :       4 [3.94e+00 ~ 5.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(113,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(124,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(328,31):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1EOS1_] /usr/include/c++/4.8.5/bits/stl_vector.h:328

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      16
            Global    :       0
            Local     :      16
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::~map(std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN9BDRY_COND5BASIC4TYPEESsSt4lessIS2_ESaISt4pairIKS2_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::~map(std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_2D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::~map(std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16EDGE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::~map(std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP30EulerSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      59
            Global    :      28
            Local     :      31
        Regenerable   :      15
        Spilled       :       3
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP30EulerSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP30EulerSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP30EulerSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EulerSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP30EulerSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(31,1)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(285,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h(154,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::getDepth(const SAMRAI::pdat::CellDataFactory<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellDataFactory<Real>::getDepth(const SAMRAI::pdat::CellDataFactory<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(145,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [960] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_get_Tp_allocator(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_deallocate(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EE13_M_deallocateEPS2_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer>(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIdSaIdEEEEvT_S6_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      12
            Global    :       9
            Local     :       3
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.97e+00 ~ 3.4%]
            Writes    :       2 [1.97e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(152,1)

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_default_append(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      60
            Global    :      25
            Local     :      35
        Regenerable   :       6
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       3 [1.50e+00 ~ 1.1%]
            Writes    :       3 [1.50e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_append(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r12-r15 zmm0]
        
    Routine temporaries
        Total         :      52
            Global    :      24
            Local     :      28
        Regenerable   :       7
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [8.34e-01 ~ 0.9%]
            Writes    :       3 [8.34e-01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_default_append(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      56
            Global    :      28
            Local     :      28
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [8.34e-01 ~ 0.8%]
            Writes    :       3 [8.34e-01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EulerBoundaryConditions::setDefaultBoundaryConditions(EulerBoundaryConditions *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EulerBoundaryConditions::setDefaultBoundaryConditions(EulerBoundaryConditions *)) [1006] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1179,1)
  -> (1181,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (1181,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U263_V$1268.0.1005->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (1181,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1183,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1183,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1185,38) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1185,62) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1187,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1188,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1189,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1192,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1193,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1194,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1197,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1197,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1199,41) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1199,46) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1199,82) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (1199,86) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (1199,88) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (1201,13) SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,19) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (1201,94) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1204,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1206,38) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1206,62) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1208,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1209,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1210,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1213,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1214,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1215,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1218,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1219,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1220,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1221,26) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1224,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1225,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1226,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1227,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1230,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1230,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1232,41) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1232,46) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,82) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (1232,86) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (1232,88) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (1234,13) SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,19) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (1234,94) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1237,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1239,38) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1239,62) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1241,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1242,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1243,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1245,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1246,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1247,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1250,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1251,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1253,26) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1256,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1257,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1258,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1259,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1262,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1263,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1264,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1265,26) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1268,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1269,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1270,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1271,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1274,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1274,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1276,41) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1276,46) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1276,82) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (1276,86) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (1276,88) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (1278,13) SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,19) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (1278,94) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1185,38)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1190,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ni] (1192:37) and this[ni] (1194:37)
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1197,65)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1201,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1201,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1201,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1201,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1206,38)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1211,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ei] (1213:37) and this[ei] (1215:37)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1222,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ni] (1224:37) and this[ni] (1227:29)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1230,65)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1234,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1234,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1234,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1234,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1239,38)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1244,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[fi] (1245:36) and this[fi] (1247:36)
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1254,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ei] (1256:37) and this[ei] (1259:29)
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1266,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ni] (1268:37) and this[ni] (1271:29)
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1274,65)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1278,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1278,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1278,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1278,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1183,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp(1179,1):remark #34051: REGISTER ALLOCATION : [_ZN23EulerBoundaryConditions28setDefaultBoundaryConditionsEv] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Euler/EulerBoundaryConditions.cpp:1179

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     540
            Global    :     189
            Local     :     351
        Regenerable   :      40
        Spilled       :       6
        
    Routine stack
        Variables     :      44 bytes*
            Reads     :      25 [1.65e+01 ~ 1.3%]
            Writes    :       4 [1.75e+00 ~ 0.1%]
        Spills        :       8 bytes*
            Reads     :       3 [1.01e+00 ~ 0.1%]
            Writes    :       1 [1.80e-01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
