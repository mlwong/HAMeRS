Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: operator<<(std::ostream &, const NODE_BDRY_LOC_2D::TYPE &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (operator<<(std::ostream &, const NODE_BDRY_LOC_2D::TYPE &)) /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(158,1)

===========================================================================

Begin optimization report for: FlowModelBoundaryUtilities::useTransverseDerivativesBoundaryConditions(FlowModelBoundaryUtilities *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelBoundaryUtilities::useTransverseDerivativesBoundaryConditions(FlowModelBoundaryUtilities *)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBoundaryUtilities.hpp(245,9)

===========================================================================

Begin optimization report for: FlowModel::getFlowModelBasicUtilities(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::getFlowModelBasicUtilities(const FlowModel *) const) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(159,9)

===========================================================================

Begin optimization report for: FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(186,9)

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)) [7] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(11,33)
  -> (11,33) NavierStokesBoundaryConditions::NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(11,33):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditionsC2ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKN10FLOW_MODEL4TYPEERKS7_I9FlowModelERKS7_INS3_8DatabaseEERKb] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:11

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &, const bool &)) [8] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(28,1)
  -> INLINE: (11,33) std::shared_ptr<NavierStokesSpecialBoundaryConditions>::shared_ptr(std::shared_ptr<NavierStokesSpecialBoundaryConditions> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (11,33) std::shared_ptr<NavierStokesSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<NavierStokesSpecialBoundaryConditions> *)
  -> (11,33) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,33) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,33) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,33) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,33) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,33) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (11,33) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (20,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (21,24) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (23,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (23,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
  -> INLINE: (25,22) std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (25,22) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (27,48) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (32,5) NavierStokesBoundaryConditions::setDefaultBoundaryConditions(NavierStokesBoundaryConditions *)
  -> (34,38) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (35,47) std::__shared_ptr<SAMRAI::geom::CartesianGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::geom::CartesianGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (37,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (37,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (39,21) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (50,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (50,23) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (50,23) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (50,23) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (52,30) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (57,29) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (57,29) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (57,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1ee_V$11b4.0.1039->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> DELETED: (59,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (59,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,38) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,38) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,62) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (59,81) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (59,81)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f2_V$11b8.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (59,81) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (59,81) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (61,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (63,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (63,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (65,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (65,54) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,54) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,78) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (66,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f9_V$11c4.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (66,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,92) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,92) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (69,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (71,42) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (71,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (71,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (71,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (71,66) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (71,85) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (71,85) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (71,85) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (71,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1ff_V$11cd.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (73,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (73,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (75,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (75,54) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,54) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,78) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (76,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U204_V$11d4.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (76,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,92) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,92) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (79,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (81,42) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (81,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (81,66) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (81,85) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (81,85) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (81,85) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (81,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20a_V$11db.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (82,42) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (82,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (82,66) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (82,85) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (82,85) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (82,85) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (82,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20b_V$11dc.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(67(SI32)) * 8(I64))))
  -> INLINE: (84,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (84,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (86,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (86,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,54) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,54) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,78) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (87,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U210_V$11e3.0.1039->__vptr_V$11bd + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (87,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,92) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,92) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (90,9) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INLINE: (96,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (98,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (98,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (99,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (102,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (112,46) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (117,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U214_V$11e8.0.1039->__vptr_V$160 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (118,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (119,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (121,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (121,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (122,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (125,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (128,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (128,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (129,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (132,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (144,46) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (151,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U215_V$11eb.0.1039->__vptr_V$160 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (152,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (152,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (153,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (155,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (155,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (156,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (159,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (162,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (162,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (163,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (166,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (169,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (169,34) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (170,27) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (173,31) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (187,46) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (196,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U218_V$11f2.0.1039->__vptr_V$160 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (197,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (197,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (197,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (204,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (208,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (208,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (209,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (209,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (211,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (213,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (217,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (220,25) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (220,27) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (220,27) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (220,27) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (224,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (224,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (225,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (225,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (227,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (229,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (235,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (235,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (236,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (236,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (238,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (240,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (242,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (244,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (247,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (249,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (250,50) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (251,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21b_V$11ff.0.1039->__vptr_V$160 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (251,52) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (253,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (255,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (257,56) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (260,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (262,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (262,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (262,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (262,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (262,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (262,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (262,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (262,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (262,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (262,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (262,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (262,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (262,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (262,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (262,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (262,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (262,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (262,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,5) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (272,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (275,25) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (275,27) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (275,27) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (275,27) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (279,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (279,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (280,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (280,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (282,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (284,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (290,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (290,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (291,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (291,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (293,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (295,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (297,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (299,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (301,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (303,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (306,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (308,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (309,50) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (310,52) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (310,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U221_V$1212.0.1039->__vptr_V$160 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (312,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (314,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (316,56) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (319,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (321,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (321,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (321,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (321,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (321,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (321,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (321,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (321,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (321,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (321,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (321,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (321,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (321,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (321,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (321,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (321,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (321,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (321,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (333,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (333,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (334,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (334,67) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (336,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (338,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (340,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (342,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (344,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (346,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (349,41) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (351,33) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (352,50) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (353,52) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (353,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U225_V$121a.0.1039->__vptr_V$160 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
  -> INLINE: (355,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (357,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (359,56) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (362,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (364,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (364,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (364,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (364,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (364,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (364,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (364,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (364,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (364,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (364,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (364,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (364,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (364,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (364,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (364,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (364,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (364,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (364,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (372,5) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (374,68) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (374,70) FlowModelBoundaryUtilities::useTransverseDerivativesBoundaryConditions(FlowModelBoundaryUtilities *)
  -> (376,44) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (376,75) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> (377,9) FlowModelBoundaryUtilities::getBoundaryConditionsTransverseDerivativesNumberOfGhostCells(SAMRAI::hier::IntVector *, FlowModelBoundaryUtilities *)
  -> INLINE: (379,49) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (379,49) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (379,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (379,49) std::__shared_ptr<NavierStokesSpecialBoundaryConditions, __gnu_cxx::_S_atomic>::reset<NavierStokesSpecialBoundaryConditions>(std::__shared_ptr<NavierStokesSpecialBoundaryConditions, __gnu_cxx::_S_atomic> *, NavierStokesSpecialBoundaryConditions *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<NavierStokesSpecialBoundaryConditions, __gnu_cxx::_S_atomic>::__shared_ptr<NavierStokesSpecialBoundaryConditions>(std::__shared_ptr<NavierStokesSpecialBoundaryConditions, __gnu_cxx::_S_atomic> *, NavierStokesSpecialBoundaryConditions *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<NavierStokesSpecialBoundaryConditions *>(std::__shared_count<__gnu_cxx::_S_atomic> *, NavierStokesSpecialBoundaryConditions *)
        -> (456,8) NavierStokesSpecialBoundaryConditions::~NavierStokesSpecialBoundaryConditions(NavierStokesSpecialBoundaryConditions *)
  -> INLINE: (380,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (380,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (380,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (385,9) NavierStokesSpecialBoundaryConditions::NavierStokesSpecialBoundaryConditions(NavierStokesSpecialBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(37,33)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(37,33)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(37,33)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(37,33)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(63,73)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(73,73)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(84,73)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(100,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(123,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(130,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(157,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(164,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(171,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(206,9)
   remark #25427: Loop Statements Reordered
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (209:37) and this[i] (209:37)
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(222,9)
   remark #25427: Loop Statements Reordered
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (225:37) and this[i] (225:37)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(233,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(251,52) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(277,9)
   remark #25427: Loop Statements Reordered
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (280:37) and this[i] (280:37)
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(288,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(310,52) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(331,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(353,52) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(28,1):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditionsC1ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKN10FLOW_MODEL4TYPEERKS7_I9FlowModelERKS7_INS3_8DatabaseEERKb] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:28

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :    2101
            Global    :     496
            Local     :    1605
        Regenerable   :     712
        Spilled       :      38
        
    Routine stack
        Variables     :    1896 bytes*
            Reads     :     181 [4.23e+01 ~ 5.4%]
            Writes    :     235 [3.17e+01 ~ 4.0%]
        Spills        :     240 bytes*
            Reads     :      74 [2.08e+01 ~ 2.7%]
            Writes    :      33 [2.37e+01 ~ 3.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_move_assign(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&, std::true_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(1363,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb1EE] /usr/include/c++/4.8.5/bits/stl_vector.h:1363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      11
            Local     :      15
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :       3 [3.00e+00 ~ 6.6%]
            Writes    :       3 [8.35e-01 ~ 1.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_emplace_back_aux<const std::vector<int, std::allocator<int>>::value_type &>(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIiSaIiEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_get_Tp_allocator(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL475971919__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_S_construct<char *>(char *, char *, const std::allocator<char> &, std::forward_iterator_tag)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.tcc(126,7):remark #34051: REGISTER ALLOCATION : [_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag] /usr/include/c++/4.8.5/bits/basic_string.tcc:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_move_assign(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>> &&, std::true_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(1363,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE] /usr/include/c++/4.8.5/bits/stl_vector.h:1363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      11
            Local     :      15
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :       3 [3.00e+00 ~ 6.6%]
            Writes    :       3 [8.35e-01 ~ 1.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      13
            Global    :      10
            Local     :       3
        Regenerable   :       0
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.3%]
            Writes    :       3 [2.96e+00 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4geom21CartesianGridGeometryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI9FlowModelED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<NavierStokesSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<NavierStokesSpecialBoundaryConditions> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI37NavierStokesSpecialBoundaryConditionsED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBoundaryUtilities::getBoundaryConditionsTransverseDerivativesNumberOfGhostCells(SAMRAI::hier::IntVector *, FlowModelBoundaryUtilities *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBoundaryUtilities::getBoundaryConditionsTransverseDerivativesNumberOfGhostCells(SAMRAI::hier::IntVector *, FlowModelBoundaryUtilities *)) [40] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBoundaryUtilities.hpp(251,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBoundaryUtilities.hpp(251,9):remark #34051: REGISTER ALLOCATION : [_ZN26FlowModelBoundaryUtilities60getBoundaryConditionsTransverseDerivativesNumberOfGhostCellsEv] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBoundaryUtilities.hpp:251

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesSpecialBoundaryConditions::~NavierStokesSpecialBoundaryConditions(NavierStokesSpecialBoundaryConditions *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesSpecialBoundaryConditions::~NavierStokesSpecialBoundaryConditions(NavierStokesSpecialBoundaryConditions *)) [41] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesSpecialBoundaryConditions.hpp(22,7)
  -> INLINE: (22,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (22,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (22,7) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (22,7) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesSpecialBoundaryConditions.hpp(22,7):remark #34051: REGISTER ALLOCATION : [_ZN37NavierStokesSpecialBoundaryConditionsD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesSpecialBoundaryConditions.hpp:22

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      57
            Global    :      28
            Local     :      29
        Regenerable   :      15
        Spilled       :       3
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__enable_shared_from_this_helper<__gnu_cxx::_S_atomic>(const std::__shared_count<__gnu_cxx::_S_atomic> &, ...)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(724,5):remark #34051: REGISTER ALLOCATION : [_ZSt32__enable_shared_from_this_helperILN9__gnu_cxx12_Lock_policyE2EEvRKSt14__shared_countIXT_EEz] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:724

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesSpecialBoundaryConditions::NavierStokesSpecialBoundaryConditions(NavierStokesSpecialBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesSpecialBoundaryConditions::NavierStokesSpecialBoundaryConditions(NavierStokesSpecialBoundaryConditions *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &)) [43] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesSpecialBoundaryConditions.hpp(38,9)
  -> INLINE: (32,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (33,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (35,33) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (37,30) std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesSpecialBoundaryConditions.hpp(38,9):remark #34051: REGISTER ALLOCATION : [_ZN37NavierStokesSpecialBoundaryConditionsC1ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKN10FLOW_MODEL4TYPEERKS7_I9FlowModelE] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesSpecialBoundaryConditions.hpp:38

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      69
            Global    :      25
            Local     :      44
        Regenerable   :      11
        Spilled       :       6
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) [44] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(186,4)
  -> INLINE: (189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(186,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVectoraSERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:186

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      59
            Global    :      23
            Local     :      36
        Regenerable   :       1
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [2.19e-03 ~ 0.0%]
            Writes    :       1 [2.19e-03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_release(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(138,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r13-r14]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI26FlowModelBoundaryUtilitiesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)) [49] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4)
  -> INLINE: (1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector6getOneERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) [50] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)
  -> INLINE: (1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector7getZeroERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1132

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::~NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::~NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *)) [51] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(34,43)
  -> INLINE: (34,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (34,44) std::shared_ptr<NavierStokesSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<NavierStokesSpecialBoundaryConditions> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(35,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(35,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(35,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(34,43):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditionsD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp:34

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     122
            Global    :      47
            Local     :      75
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::~_Vector_base(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~_Vector_base(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::~NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::~NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *const)) [54] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(34,9)
  -> INLINE: (34,9) NavierStokesBoundaryConditions::~NavierStokesBoundaryConditions(NavierStokesBoundaryConditions *)
    -> INLINE: (34,44) std::shared_ptr<NavierStokesSpecialBoundaryConditions>::~shared_ptr(std::shared_ptr<NavierStokesSpecialBoundaryConditions> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (34,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(35,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(35,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(35,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp(34,9):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditionsD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/apps/Navier-Stokes/NavierStokesBoundaryConditions.hpp:34

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     123
            Global    :      47
            Local     :      76
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::printClassData(const NavierStokesBoundaryConditions *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::printClassData(const NavierStokesBoundaryConditions *, std::ostream &) const) [55] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(394,1)
  -> (396,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (396,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U229_V$122b.0.1041->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (396,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (398,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (399,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (401,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (403,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (403,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (405,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (405,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (407,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (409,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (410,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (410,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (411,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (412,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (414,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (415,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (415,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (416,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (417,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (419,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (420,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (420,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (421,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (424,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (426,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (426,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (428,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (430,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (431,17) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (431,80) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (432,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (433,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (435,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (436,17) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (436,80) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (437,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (438,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (440,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (441,17) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (441,80) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (442,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (443,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (445,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (446,17) operator<<(std::ostream &, const NODE_BDRY_LOC_2D::TYPE &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(159,58) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::map(std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(161,17) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::size(const std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(164,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(164,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(165,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(165,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(166,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(166,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(167,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(167,9) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(171,15) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:(171,25) std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, const std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (446,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (447,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (450,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (452,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (452,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (454,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (456,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (457,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (457,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (458,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (460,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (462,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (463,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (463,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (464,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (466,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (468,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (469,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (469,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (470,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (472,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (474,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (474,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (476,59) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (476,63) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (476,65) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> (478,24) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (479,30) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (480,29) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (481,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (481,55) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (481,59) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (485,28) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (486,28) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (486,59) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (486,63) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (489,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (494,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (496,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (496,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (498,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (500,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (501,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (501,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (502,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (503,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (505,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (506,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (506,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (507,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (508,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (510,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (511,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (511,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (512,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (513,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (515,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (516,16) operator<<(std::ostream &, NODE_BDRY_LOC_3D::TYPE)
  -> INLINE: (516,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (517,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (520,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (522,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (522,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (524,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (526,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (527,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (527,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (528,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (529,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (531,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (532,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (532,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (533,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (534,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (536,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (537,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (537,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (538,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (539,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (541,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (542,16) operator<<(std::ostream &, EDGE_BDRY_LOC_3D::TYPE)
  -> INLINE: (542,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (543,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (546,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (549,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> INLINE: (549,71) std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const
  -> (551,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (553,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (554,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (554,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (555,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (556,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (558,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (559,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (559,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (560,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (561,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (563,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (564,16) operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)
  -> INLINE: (564,79) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (565,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (567,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (569,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (569,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (571,59) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (571,63) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (571,65) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> (573,24) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (574,30) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (575,29) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (576,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (576,55) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (576,59) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (580,28) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (581,28) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (581,59) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (581,63) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (584,24) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(405,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(426,71)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(446,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(446,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(452,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(474,73)
      remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(483,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(485,28) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(496,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(522,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(549,71)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(569,73)
      remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(578,21)
         remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(580,28) ]
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(403,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(394,1):remark #34051: REGISTER ALLOCATION : [_ZNK30NavierStokesBoundaryConditions14printClassDataERSo] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:394

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r12-r15 zmm0]
        
    Routine temporaries
        Total         :     884
            Global    :     311
            Local     :     573
        Regenerable   :     195
        Spilled       :      17
        
    Routine stack
        Variables     :     106 bytes*
            Reads     :      19 [1.08e+01 ~ 1.3%]
            Writes    :      14 [4.68e+00 ~ 0.5%]
        Spills        :      88 bytes*
            Reads     :      35 [3.98e+01 ~ 4.6%]
            Writes    :      17 [1.10e+01 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_2D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (operator<<(std::ostream &, BDRY_COND::BASIC::TYPE)) [69] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(45,1)
  -> INLINE: (46,58) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::map(std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,17) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::size(const std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (51,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (51,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (52,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (52,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (54,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (54,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (55,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (55,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (56,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (56,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (57,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (57,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (58,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (58,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (59,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (59,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (60,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (60,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (61,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (61,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (62,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (62,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (63,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (63,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (64,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (65,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (65,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (66,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (66,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (67,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (67,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (68,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (68,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (69,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (69,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (70,9) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)
  -> INLINE: (70,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (74,19) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (74,29) std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, const std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(53,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(54,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(55,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(75,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp(45,1):remark #34051: REGISTER ALLOCATION : [_ZlsRSoN9BDRY_COND5BASIC4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/BasicBoundaryConditions.hpp:45

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :     364
            Global    :     101
            Local     :     263
        Regenerable   :     163
        Spilled       :       3
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       9 [1.54e+00 ~ 1.0%]
            Writes    :      30 [7.87e+00 ~ 5.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS4_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::operator[](std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN9BDRY_COND5BASIC4TYPEESsSt4lessIS2_ESaISt4pairIKS2_SsEEEixEOS2_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: operator<<(std::ostream &, EDGE_BDRY_LOC_3D::TYPE)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (operator<<(std::ostream &, EDGE_BDRY_LOC_3D::TYPE)) [78] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(179,1)
  -> INLINE: (180,58) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::map(std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,17) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::size(const std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (185,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (185,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (186,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (186,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (187,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (187,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (189,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (189,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (190,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (190,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (191,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (191,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (192,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (192,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (193,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (193,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (194,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (194,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (195,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (195,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (196,9) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (196,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (200,19) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (200,29) std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, const std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(187,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(188,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(189,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(201,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(179,1):remark #34051: REGISTER ALLOCATION : [_ZlsRSoN16EDGE_BDRY_LOC_3D4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:179

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :     292
            Global    :      85
            Local     :     207
        Regenerable   :     115
        Spilled       :       3
        
    Routine stack
        Variables     :     144 bytes*
            Reads     :       9 [1.54e+00 ~ 1.1%]
            Writes    :      22 [6.11e+00 ~ 4.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16EDGE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: operator<<(std::ostream &, NODE_BDRY_LOC_3D::TYPE)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (operator<<(std::ostream &, NODE_BDRY_LOC_3D::TYPE)) [85] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(208,1)
  -> INLINE: (209,58) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::map(std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (211,17) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::size(const std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (214,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (214,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (215,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (215,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (216,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (216,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (217,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (217,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (218,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (218,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (219,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (219,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (220,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (220,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (221,9) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)
  -> INLINE: (221,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (225,19) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (225,29) std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, const std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(216,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(217,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(218,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(226,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(445,4):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp(208,1):remark #34051: REGISTER ALLOCATION : [_ZlsRSoN16NODE_BDRY_LOC_3D4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/include/util/basic_boundary_conditions/CartesianBoundaryDefines.hpp:208

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :     256
            Global    :      77
            Local     :     179
        Regenerable   :      91
        Spilled       :       3
        
    Routine stack
        Variables     :     128 bytes*
            Reads     :       9 [1.54e+00 ~ 1.2%]
            Writes    :      18 [5.23e+00 ~ 4.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_put_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(374,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:374

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::key_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1426,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1442,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1458,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1414,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_] /usr/include/c++/4.8.5/bits/stl_tree.h:1414

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      28
            Local     :      38
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       6 [5.92e-01 ~ 1.1%]
            Writes    :      18 [5.92e-01 ~ 1.1%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_destroy_node(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(420,7):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:420

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::operator[](std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(482,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(487,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(140,51):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_map.h(477,7):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEEixEOS1_] /usr/include/c++/4.8.5/bits/stl_map.h:477

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      74
            Global    :      34
            Local     :      40
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       5 [1.88e-01 ~ 0.2%]
            Writes    :       5 [1.88e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::putToRestart(const NavierStokesBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::putToRestart(const NavierStokesBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [92] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(599,1)
  -> (601,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (601,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U231_V$1255.0.1042->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (601,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (603,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (603,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (603,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (603,34) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (603,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (603,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (603,62)  EXPR_CONV.SI64.P64(*((SI64*) (__$U234_V$1258.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (605,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (605,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (607,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (607,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (609,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (610,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,84) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,84) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INDIRECT- (VIRTUAL): (611,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23a_V$1260.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (611,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (614,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (616,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (616,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (616,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (616,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (616,66)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23f_V$1265.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (616,66) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (616,66) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (618,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (618,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (620,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (621,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (621,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (621,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (621,84) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (621,84) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (622,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INDIRECT- (VIRTUAL): (622,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U243_V$126a.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (622,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (622,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (622,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (625,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (627,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (627,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (627,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (627,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (628,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U248_V$126f.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (628,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (628,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (630,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (630,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (630,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (630,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (631,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U249_V$1270.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(63(SI32)) * 8(I64))))
  -> INLINE: (631,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (631,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (633,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (633,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (635,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (636,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (636,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (636,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (636,84) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (636,84) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (637,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (637,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (637,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (637,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (637,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24d_V$1275.0.1042->__vptr_V$11bd + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(607,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(618,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(633,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(605,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(599,1):remark #34051: REGISTER ALLOCATION : [_ZNK30NavierStokesBoundaryConditions12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:599

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     551
            Global    :     144
            Local     :     407
        Regenerable   :     195
        Spilled       :       6
        
    Routine stack
        Variables     :     169 bytes*
            Reads     :      45 [3.14e+01 ~ 7.3%]
            Writes    :      27 [1.17e+01 ~ 2.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::readDirichletBoundaryDataEntry(NavierStokesBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::readDirichletBoundaryDataEntry(NavierStokesBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)) [93] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(656,1)
  -> INLINE: (661,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (661,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (661,29) NavierStokesBoundaryConditions::readPrimitiveDataEntry(std::vector<double, std::allocator<double>> *, NavierStokesBoundaryConditions *, std::shared_ptr<SAMRAI::tbox::Database> *, const std::string &)
  -> (661,52) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (661,52) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (664,32) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (664,32) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (665,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (665,21) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (666,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (666,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (668,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (668,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> DELETED: (673,25) std::allocator<double>::~allocator(std::allocator<double> *)
  -> DELETED: (673,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (673,29) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (673,29) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (673,29) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (673,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (674,26) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (674,26) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (675,11) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (675,21) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (676,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (676,46) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (678,15) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (678,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (682,17) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (683,78) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (683,80) FlowModel::getFlowModelBasicUtilities(const FlowModel *) const
  -> INLINE: (683,80) std::shared_ptr<FlowModelBasicUtilities>::shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *, const std::shared_ptr<FlowModelBasicUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (683,80) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
  -> INLINE: (684,20) std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (684,78)  EXPR_CONV.SI64.P64(*((SI64*) (__$U250_V$127c.0.1043->__vptr_V$11f + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (687,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (687,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (687,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U251_V$127d.0.1043->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (689,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,5) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (692,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (692,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (694,51) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (694,55) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (694,57) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (698,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (698,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (698,89) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (704,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (707,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (707,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (709,51) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (709,55) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (709,57) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (713,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (713,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (713,89) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (719,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (722,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (722,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (724,51) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (724,55) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (724,57) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (728,45) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (728,49) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (728,89) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(666,46)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(673,29)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(673,29)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(673,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(676,46)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(692,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(696,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ((this+vi*24)->_M_start)[bdry_location_index*var_depth+di] (698:49) and Q.Q.Q.Q[count] (698:49)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(696,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(707,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(711,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ((this+vi*24)->_M_start)[bdry_location_index*var_depth+di] (713:49) and Q.Q.Q.Q[count] (713:49)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(711,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(722,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(726,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between ((this+vi*24)->_M_start)[bdry_location_index*var_depth+di] (728:49) and Q.Q.Q.Q[count] (728:49)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(726,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(689,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(656,1):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditions30readDirichletBoundaryDataEntryERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEERSsi] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:656

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     411
            Global    :     136
            Local     :     275
        Regenerable   :      68
        Spilled       :      12
        
    Routine stack
        Variables     :     172 bytes*
            Reads     :      69 [8.24e+01 ~ 7.5%]
            Writes    :      36 [3.60e+01 ~ 3.3%]
        Spills        :      56 bytes*
            Reads     :      22 [2.64e+01 ~ 2.4%]
            Writes    :       9 [1.03e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_get_Tp_allocator(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPKdSaIS1_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_get_Tp_allocator(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::size(const std::vector<Real *, std::allocator<Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPdSaIS0_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const) [100] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(63,1)
  -> INLINE: (64,44) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (65,7) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
  -> INLINE: (65,7) std::static_pointer_cast<SAMRAI::pdat::CellDataFactory<Real>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,10) SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h:(155,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (68,4) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (68,23) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (68,25) SAMRAI::pdat::CellDataFactory<Real>::getDepth(const SAMRAI::pdat::CellDataFactory<Real> *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(63,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat12CellVariableIdE8getDepthEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:63

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      42
            Global    :      20
            Local     :      22
        Regenerable   :       7
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [1.35e+00 ~ 2.6%]
            Writes    :       4 [2.00e+00 ~ 3.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat15CellDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_deallocate(std::_Vector_base<Real *, std::allocator<Real *>> *, std::_Vector_base<Real *, std::allocator<Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE13_M_deallocateEPS0_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_deallocate(std::_Vector_base<const Real *, std::allocator<const Real *>> *, std::_Vector_base<const Real *, std::allocator<const Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::readPrimitiveDataEntry(std::vector<double, std::allocator<double>> *, NavierStokesBoundaryConditions *, std::shared_ptr<SAMRAI::tbox::Database> *, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::readPrimitiveDataEntry(std::vector<double, std::allocator<double>> *, NavierStokesBoundaryConditions *, std::shared_ptr<SAMRAI::tbox::Database> *, const std::string &)) [108] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1150,1)
  -> (1154,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1154,25) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (1156,64) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (1156,95) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INDIRECT- (VIRTUAL): (1156,95)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26c_V$12d5.0.1046->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> INLINE: (1158,64) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1158,64) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1160,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1160,46) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INDIRECT- (VIRTUAL): (1160,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26d_V$12d9.0.1046->__vptr_V$11bd + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1162,63) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1162,100) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> (1162,100) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INDIRECT- (VIRTUAL): (1162,100)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26e_V$12da.0.1046->__vptr_V$11bd + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (1164,78) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1168,36) std::vector<double, std::allocator<double>>::push_back(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1168,71) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1170,9) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1173,13) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1173,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1173,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1173,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1173,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1173,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1173,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1173,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1173,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1173,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1173,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1173,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1173,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1173,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1173,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1173,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1173,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1173,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1173,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1183,5) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1158,64)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1166,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1183,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1150,1):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditions22readPrimitiveDataEntryESt10shared_ptrIN6SAMRAI4tbox8DatabaseEERKSs] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:1150

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     409
            Global    :     108
            Local     :     301
        Regenerable   :     139
        Spilled       :      16
        
    Routine stack
        Variables     :     470 bytes*
            Reads     :      32 [5.68e+01 ~ 6.5%]
            Writes    :      54 [1.53e+02 ~ 17.6%]
        Spills        :      80 bytes*
            Reads     :      22 [1.22e+01 ~ 1.4%]
            Writes    :      13 [5.80e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_deallocate(std::_Vector_base<double, std::allocator<double>> *, std::_Vector_base<double, std::allocator<double>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_get_Tp_allocator(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIdSaIdEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::~_Vector_base(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::~_Vector_base(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI23FlowModelBasicUtilitiesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::readNeumannBoundaryDataEntry(NavierStokesBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::readNeumannBoundaryDataEntry(NavierStokesBoundaryConditions *, const std::shared_ptr<SAMRAI::tbox::Database> &, std::string &, int)) [132] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(747,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(747,1):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditions28readNeumannBoundaryDataEntryERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEERSsi] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:747

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::setPhysicalBoundaryConditions(NavierStokesBoundaryConditions *, SAMRAI::hier::Patch &, double, const SAMRAI::hier::IntVector &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::setPhysicalBoundaryConditions(NavierStokesBoundaryConditions *, SAMRAI::hier::Patch &, double, const SAMRAI::hier::IntVector &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [133] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(765,1)
  -> (773,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (773,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25a_V$12a5.0.1045->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (773,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (776,21) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INDIRECT- (VIRTUAL): (776,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25b_V$12a6.0.1045->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (776,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (779,21) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INDIRECT- (VIRTUAL): (779,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25c_V$12a7.0.1045->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (779,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (781,17) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (781,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25d_V$12a8.0.1045->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> INLINE: (784,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (784,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (784,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25e_V$12a9.0.1045->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(23(SI32)) * 8(I64))))
  -> INLINE: (791,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (791,23) FlowModel::getFlowModelBoundaryUtilities(const FlowModel *) const
  -> INLINE: (791,23) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *, const std::shared_ptr<FlowModelBoundaryUtilities> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (791,23) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
  -> INLINE: (793,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (799,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (799,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (800,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (803,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (806,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (806,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (808,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (808,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (811,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (812,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (816,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (819,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (819,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (822,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (823,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (827,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (842,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (849,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U262_V$12b2.0.1045->__vptr_V$160 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (850,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (851,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (857,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (857,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (858,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (861,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (864,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (864,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (866,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (866,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (869,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (870,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (874,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (877,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (877,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (881,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (885,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (900,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (907,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U265_V$12bb.0.1045->__vptr_V$160 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> (913,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (913,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (914,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (917,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (920,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (920,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (922,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (922,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (925,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (926,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (930,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (933,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (933,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (936,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (937,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (941,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (956,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (963,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U266_V$12bc.0.1045->__vptr_V$160 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (964,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (964,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (965,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> (971,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (971,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (972,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (975,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (978,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (978,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (980,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (980,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (983,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (984,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (988,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (991,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (991,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (994,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (995,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (999,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1014,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1021,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U269_V$12c5.0.1045->__vptr_V$160 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> (1027,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (1027,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (1028,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1031,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1034,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1034,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1036,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1036,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1039,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1040,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1044,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1047,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1047,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1050,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1051,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1055,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1070,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1077,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26a_V$12c6.0.1045->__vptr_V$160 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> (1083,26) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (1083,26) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (1084,19) std::vector<int, std::allocator<int>>::reserve(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1087,23) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1090,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1090,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1092,39) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1092,44) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1095,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1096,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1100,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1103,44) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1103,49) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1106,43) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (1107,42) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1111,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1126,38) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1133,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26b_V$12c7.0.1045->__vptr_V$160 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> INLINE: (1134,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1134,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1134,5) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1136,48) std::__shared_ptr<NavierStokesSpecialBoundaryConditions, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<NavierStokesSpecialBoundaryConditions, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1142,17) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1142,17) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1142,17) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1142,17) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1142,17) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1142,17) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1142,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U261_V$12ac.0.1045->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(801,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(806,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(859,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(864,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(915,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(920,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(973,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(978,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1029,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1034,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1085,21)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1090,65)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1142,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1142,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1142,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1142,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(765,1):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditions29setPhysicalBoundaryConditionsERN6SAMRAI4hier5PatchEdRKNS1_9IntVectorERKSt10shared_ptrINS1_15VariableContextEE] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:765

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     742
            Global    :     185
            Local     :     557
        Regenerable   :     169
        Spilled       :      22
        
    Routine stack
        Variables     :     302 bytes*
            Reads     :     139 [7.91e+01 ~ 11.2%]
            Writes    :      54 [1.27e+01 ~ 1.8%]
        Spills        :     128 bytes*
            Reads     :      60 [2.21e+01 ~ 3.1%]
            Writes    :      16 [5.08e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::~_Vector_base(std::_Vector_base<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_deallocate(std::_Vector_base<int, std::allocator<int>> *, std::_Vector_base<int, std::allocator<int>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8-r9 r14-r15]
        
    Routine temporaries
        Total         :      22
            Global    :      13
            Local     :       9
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 5.0%]
            Writes    :       4 [3.94e+00 ~ 5.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(113,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(124,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(328,31):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1EOS1_] /usr/include/c++/4.8.5/bits/stl_vector.h:328

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      16
            Global    :       0
            Local     :      16
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::~map(std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN9BDRY_COND5BASIC4TYPEESsSt4lessIS2_ESaISt4pairIKS2_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_type, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type, std::_Select1st<std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::value_type>, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::key_compare, std::map<BDRY_COND::BASIC::TYPE, std::string, std::less<BDRY_COND::BASIC::TYPE>, std::allocator<std::pair<const BDRY_COND::BASIC::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN9BDRY_COND5BASIC4TYPEESt4pairIKS2_SsESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::~map(std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_2D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_2D::TYPE, std::string, std::less<NODE_BDRY_LOC_2D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_2D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_2D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::~map(std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16EDGE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<EDGE_BDRY_LOC_3D::TYPE, std::string, std::less<EDGE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const EDGE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16EDGE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::~map(std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_map.h(97,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_map.h(96,11):remark #34051: REGISTER ALLOCATION : [_ZNSt3mapIN16NODE_BDRY_LOC_3D4TYPEESsSt4lessIS1_ESaISt4pairIKS1_SsEEED1Ev] /usr/include/c++/4.8.5/bits/stl_map.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_type, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type, std::_Select1st<std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::value_type>, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::key_compare, std::map<NODE_BDRY_LOC_3D::TYPE, std::string, std::less<NODE_BDRY_LOC_3D::TYPE>, std::allocator<std::pair<const NODE_BDRY_LOC_3D::TYPE, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_tree.h(1121,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8_Rb_treeIN16NODE_BDRY_LOC_3D4TYPEESt4pairIKS1_SsESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_tree.h:1121

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      26
            Global    :      13
            Local     :      13
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.99e+00 ~ 3.8%]
            Writes    :       4 [3.99e+00 ~ 3.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37NavierStokesSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      59
            Global    :      28
            Local     :      31
        Regenerable   :      15
        Spilled       :       3
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37NavierStokesSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37NavierStokesSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37NavierStokesSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<NavierStokesSpecialBoundaryConditions *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37NavierStokesSpecialBoundaryConditionsLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(31,1)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(285,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h(154,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::getDepth(const SAMRAI::pdat::CellDataFactory<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellDataFactory<Real>::getDepth(const SAMRAI::pdat::CellDataFactory<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(145,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [996] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_get_Tp_allocator(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_deallocate(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EE13_M_deallocateEPS2_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer>(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIdSaIdEEEEvT_S6_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      12
            Global    :       9
            Local     :       3
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.97e+00 ~ 3.4%]
            Writes    :       2 [1.97e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(152,1)

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_default_append(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      60
            Global    :      25
            Local     :      35
        Regenerable   :       6
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       3 [1.50e+00 ~ 1.1%]
            Writes    :       3 [1.50e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_default_append(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r12-r15 zmm0]
        
    Routine temporaries
        Total         :      52
            Global    :      24
            Local     :      28
        Regenerable   :       7
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [8.34e-01 ~ 0.9%]
            Writes    :       3 [8.34e-01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_default_append(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      56
            Global    :      28
            Local     :      28
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [8.34e-01 ~ 0.8%]
            Writes    :       3 [8.34e-01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: NavierStokesBoundaryConditions::setDefaultBoundaryConditions(NavierStokesBoundaryConditions *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NavierStokesBoundaryConditions::setDefaultBoundaryConditions(NavierStokesBoundaryConditions *)) [1048] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1193,1)
  -> (1195,21) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INDIRECT- (VIRTUAL): (1195,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U272_V$12e6.0.1047->__vptr_V$212_2.71 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (1195,21) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1197,5) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1197,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1199,38) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1199,62) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1201,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1203,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1206,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1207,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1208,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1211,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1211,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1213,41) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1213,46) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1213,82) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (1213,86) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (1213,88) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (1215,13) SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,19) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (1215,94) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1218,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1220,38) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1220,62) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1222,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1223,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1224,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1227,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1228,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1229,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1232,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1233,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1234,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1235,26) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1238,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1239,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1240,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1241,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1244,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1244,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1246,41) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1246,46) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1246,82) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (1246,86) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (1246,88) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (1248,13) SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,19) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (1248,94) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1251,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1253,38) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1253,62) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1255,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1256,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1257,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1259,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1260,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1261,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1264,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1265,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1266,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1267,26) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1270,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1271,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1272,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1273,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1276,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1277,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1278,34) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1279,26) std::vector<int, std::allocator<int>>::resize(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1282,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1283,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1284,37) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1285,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1288,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1288,65) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const
  -> INLINE: (1290,41) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1290,46) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1290,82) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
  -> INLINE: (1290,86) std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *) const
  -> (1290,88) SAMRAI::pdat::CellVariable<Real>::getDepth(const SAMRAI::pdat::CellVariable<Real> *) const
  -> INLINE: (1292,13) SAMRAI::tbox::MathUtilities<double>::setVectorToSignalingNaN(std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(32,48) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,13) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp:(33,19) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (1292,94) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1199,38)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1204,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ni] (1206:37) and this[ni] (1208:37)
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1211,65)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1215,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1215,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1215,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1215,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1220,38)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1225,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ei] (1227:37) and this[ei] (1229:37)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1236,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ni] (1238:37) and this[ni] (1241:29)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1244,65)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1248,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1248,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1248,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1248,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1253,38)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1258,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[fi] (1259:36) and this[fi] (1261:36)
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1268,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ei] (1270:37) and this[ei] (1273:29)
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1280,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between this[ni] (1282:37) and this[ni] (1285:29)
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1288,65)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1292,13)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1292,13)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1292,13)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(32,48) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1292,13)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1197,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp(1193,1):remark #34051: REGISTER ALLOCATION : [_ZN30NavierStokesBoundaryConditions28setDefaultBoundaryConditionsEv] /home/akula/HAMeRS_IB/HAMeRS/src/apps/Navier-Stokes/NavierStokesBoundaryConditions.cpp:1193

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     540
            Global    :     189
            Local     :     351
        Regenerable   :      40
        Spilled       :       6
        
    Routine stack
        Variables     :      44 bytes*
            Reads     :      25 [1.65e+01 ~ 1.3%]
            Writes    :       4 [1.75e+00 ~ 0.1%]
        Spills        :       8 bytes*
            Reads     :       3 [1.01e+00 ~ 0.1%]
            Writes    :       1 [1.80e-01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
