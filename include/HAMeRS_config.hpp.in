#ifndef HAMERS_CONFIG_HPP
#define HAMERS_CONFIG_HPP

#include "SAMRAI/SAMRAI_config.h"

/* Enable SIMD */
#cmakedefine HAMERS_ENABLE_SIMD

/* Enable assertion checking */
#cmakedefine HAMERS_DEBUG_CHECK_ASSERTIONS

/* Enable HAMeRS developer assertion checking */
#cmakedefine HAMERS_DEBUG_CHECK_DEV_ASSERTIONS

/* Define real data type */
typedef float Real;
#define getReal getFloat
#define putReal putFloat
#define getRealVector getFloatVector
#define putRealVector putFloatVector
#define getRealWithDefault getFloatWithDefault
#define putRealWithDefault putFloatWithDefault
#define HAMERS_EPSILON Real(1.0e-8)
#define HAMERS_MPI_REAL MPI_FLOAT
#define HAMERS_REAL_EPSILON FLT_EPSILON

// typedef double Real;
// #define getReal getDouble
// #define putReal putDouble
// #define getRealVector getDoubleVector
// #define putRealVector putDoubleVector
// #define getRealWithDefault getDoubleWithDefault
// #define putRealWithDefault putDoubleWithDefault
// #define HAMERS_EPSILON 1.0e-15
// #define HAMERS_MPI_REAL MPI_DOUBLE
// #define HAMERS_REAL_EPSILON DBL_EPSILON

/* Enable compilation with Boost library */
#cmakedefine HAMERS_USE_BOOST

/* Define the DEBUG macro variable */
#ifndef NDEBUG
#define DEBUG
#endif

/* Set up vectorization pragmas */
#if defined(HAMERS_ENABLE_SIMD)
#if defined(DEBUG)
#define HAMERS_PRAGMA_VEC(EXP)
#define HAMERS_PRAGMA_SIMD
#else
#define HAMERS_PRAGMA_VEC(EXP) _Pragma(EXP)
#define HAMERS_PRAGMA_SIMD     HAMERS_PRAGMA_VEC("omp simd")
#endif
#else // defined(HAMERS_ENABLE_SIMD)
#define HAMERS_PRAGMA_VEC(EXP)
#define HAMERS_PRAGMA_SIMD
#endif // defined(HAMERS_ENABLE_SIMD)

#endif /* HAMERS_CONFIG_HPP */
