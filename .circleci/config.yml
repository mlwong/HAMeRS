version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - build_HDF5
      # - build_HAMeRS_with_boost:
      #     requires:
      #       - build_HDF5
      - build_HAMeRS:
          requires:
            - build_HDF5
      - tests:
          requires:
            - build_HAMeRS
      - test_2D_convergence_single_species:
          requires:
            - build_HAMeRS
      - test_3D_convergence_single_species:
          requires:
            - build_HAMeRS
      - test_2D_convergence_five_eqn_allaire:
          requires:
            - build_HAMeRS
      - test_3D_convergence_five_eqn_allaire:
          requires:
            - build_HAMeRS

jobs:
  build_HDF5:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
            echo 'export BOOST_ROOT=/usr/lib/x86_64-linux-gnu/' >> $BASH_ENV
      - run:
          name: install_HDF5
          command: sh circleci/install-hdf5.sh
      - save_cache:
          key: hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - hdf5

  # build_HAMeRS_with_boost:
  #   docker:
  #     - image: cimg/base:2022.07

  #   environment:
  #     CC: mpicc
  #     CXX: mpicxx
  #     F77: mpif77

  #   steps:
  #     - checkout
  #     - run:
  #         name: "Install libraries"
  #         command: >-
  #           sudo apt-get update &&
  #           sudo apt install libboost1.67-dev libboost-thread1.67-dev libboost-program-options1.67-dev libboost-system1.67-dev libboost-math1.67-dev libboost-test1.67-dev libboost-python1.67-dev &&
  #           sudo apt install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev
  #     - run:
  #         name: "Check compiler"
  #         command: which mpicc; which mpicxx; which mpif77
  #     - restore_cache:
  #         name: "Restore HDF5 cache"
  #         keys:
  #           - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
  #     - run:
  #         name: "Setup environment variables"
  #         command: >-
  #           echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
  #           echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
  #           echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
  #           echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
  #     - run:
  #         name: install_HAMeRS_with_Boost
  #         command: sh circleci/install-SAMRAI_with_Boost.sh; sh circleci/install-HAMeRS_with_Boost.sh

  build_HAMeRS:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - restore_cache:
          name: "Restore HDF5 cache"
          keys:
            - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
      - run:
          name: install_HAMeRS
          command: sh circleci/install-SAMRAI.sh; sh circleci/install-HAMeRS_convergence_test_single_species.sh; sh circleci/install-HAMeRS_convergence_test_five_eqn_allaire.sh
      - save_cache:
          key: HAMeRS_cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - SAMRAI_NO_BOOST
            - build_convergence_test_single_species
            - build_convergence_test_five_eqn_allaire

  tests:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - restore_cache:
          name: "Restore HDF5 cache"
          keys:
            - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: "Restore HAMeRS cache"
          keys:
            - HAMeRS_cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
      - run:
          name: test
          command: ./build_convergence_test_single_species/src/test/test_mixing_rules

  test_2D_convergence_single_species:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev python3 python3-numpy
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - restore_cache:
          name: "Restore HDF5 cache"
          keys:
            - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: "Restore HAMeRS cache"
          keys:
            - HAMeRS_cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
      - run:
          name: test
          command: cd tests/2D_convergence_test_single_species; python3 convergence_test.py
      - run:
          name: test
          command: cd tests/2D_convergence_test_single_species; python3 convergence_test_KEP.py

  test_3D_convergence_single_species:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev python3 python3-numpy
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - restore_cache:
          name: "Restore HDF5 cache"
          keys:
            - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: "Restore HAMeRS cache"
          keys:
            - HAMeRS_cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
      - run:
          name: test
          command: cd tests/3D_convergence_test_single_species; python3 convergence_test.py
      - run:
          name: test
          command: cd tests/3D_convergence_test_single_species; python3 convergence_test_KEP.py

  test_2D_convergence_five_eqn_allaire:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev python3 python3-numpy
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - restore_cache:
          name: "Restore HDF5 cache"
          keys:
            - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: "Restore HAMeRS cache"
          keys:
            - HAMeRS_cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
      - run:
          name: test
          command: cd tests/2D_convergence_test_five_eqn_allaire; python3 convergence_test.py
      - run:
          name: test
          command: cd tests/2D_convergence_test_five_eqn_allaire; python3 convergence_test_KEP.py

  test_3D_convergence_five_eqn_allaire:
    docker:
      - image: cimg/base:2022.07

    environment:
      CC: mpicc
      CXX: mpicxx
      F77: mpif77

    steps:
      - checkout
      - run:
          name: "Install libraries"
          command: sudo apt-get update && sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev python3 python3-numpy
      - run:
          name: "Check compiler"
          command: which mpicc; which mpicxx; which mpif77
      - restore_cache:
          name: "Restore HDF5 cache"
          keys:
            - hdf5_cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: "Restore HAMeRS cache"
          keys:
            - HAMeRS_cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Setup environment variables"
          command: >-
            echo 'export HDF5_ROOT=${PWD}/hdf5' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_NO_BOOST=${PWD}/SAMRAI_NO_BOOST' >> $BASH_ENV &&
            echo 'export SAMRAI_ROOT_WITH_BOOST=${PWD}/SAMRAI_WITH_BOOST' >> $BASH_ENV &&
            echo 'export HAMERS_ROOT=${PWD}' >> $BASH_ENV
      - run:
          name: test
          command: cd tests/3D_convergence_test_five_eqn_allaire; python3 convergence_test.py
      - run:
          name: test
          command: cd tests/3D_convergence_test_five_eqn_allaire; python3 convergence_test_KEP.py
